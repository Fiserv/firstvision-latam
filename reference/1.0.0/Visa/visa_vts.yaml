swagger: '2.0'
info:
  description: This documentation describes the REST APIs provided by the VISA Token Requestor and Issuer Token Service Provider
  version: '1.0'
  title: FirstVision™ VISA Token Service Provider - API Documentation
  license:
    name: Apache License Version 2.0
host: test.api.firstdata.com
basePath: /latam/fiservVts/mocks/
schemes:
  - https
tags:
  - name: Token Requestor TSP
    description: ' '
  - name: Issuer TSP
    description: ' '
consumes:
  - application/json
produces:
  - application/json
x-config:
  tryItOut: true
  
paths:
  /enrollDevice:
    put:
      tags:
        - Token Requestor TSP
      x-child-product-name: Tokenization
      x-group-name: Token Requestor TSP
      x-proxy-name: Enroll Device
      summary: Enrolls the device in Visa Token Service (VTS) and establishes the secure communication protocol between the mobile app on the device and VTS, which allows VTS to provision tokens on the device.
      operationId: Enroll Device
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-request-id
          in: header
          description: Unique ID for the API request.
          required: false
          type: string
        - name: x-pay-token
          in: header
          description: A token identifying the transaction and its contents.
          required: false
          type: string
        - in: query
          name: apiKey
          description: Client-specific API key issued during onboarding.
          required: false
          type: string
        - in: body
          name: enrollDeviceRequest
          description: Enroll Device Request
          required: false
          schema:
            $ref: '#/definitions/enrollDeviceRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/enrollDeviceResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '500':
          description: Backend Error
      deprecated: false
  /enrollPan:
    post:
      tags:
        - Token Requestor TSP
      x-child-product-name: Tokenization
      x-group-name: Token Requestor TSP
      x-proxy-name: Enroll Pan
      summary: Enrolls a payment instrument. You can use the PAN enrollment ID (vPanEnrollmentID) in the response to provision additional tokens,, monitor PAN metadata, and perform other operations
      operationId: Enroll Pan
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-request-id
          in: header
          description: Unique ID for the API request.
          required: false
          type: string
        - name: x-pay-token
          in: header
          description: A token identifying the transaction and its contents.
          required: false
          type: string
        - in: query
          name: apiKey
          description: Client-specific API key issued during onboarding.
          required: false
          type: string
        - in: body
          name: enrollPanRequest
          description: Enroll Pan Request
          required: false
          schema:
            $ref: '#/definitions/enrollPanRequest'
      responses:
        '201':
          description: Enrollment artifacts created.
          schema:
            $ref: '#/definitions/enrollPanResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: cardVerification Failed
        '404':
          description: cardNotEligible
        '405':
          description: Method Not Allowed
        '500':
          description: Backend Error
      deprecated: false
  /provisionToken/panEnrollmentID:
    post:
      tags:
        - Token Requestor TSP
      x-child-product-name: Tokenization
      x-group-name: Token Requestor TSP
      x-proxy-name: Enrollment ID Request
      summary: Call Provision Token—Given PAN Enrollment ID to provision additional tokens on an enrolled PAN (vPanEnrollmentID) and monitor PAN metadata (Get Card Metadata) without the need to re-enter PAN credentials. Tokens are always bound to known consumers (identified by the wallet provider in clientWalletAccountID), a Visa-branded payment instrument (vPanEnrollmentID), a known device (the device ID specified by the wallet provider as clientDeviceID), and a supported presentation method (presentationType), such as NFC-HCE, INAPP, ECOM, etc.
      operationId: Provision Token—Given PAN Enrollment ID Request
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-request-id
          in: header
          description: Unique ID for the API request.
          required: true
          type: string
        - name: x-pay-token
          in: header
          description: A token identifying the transaction and its contents.
          required: true
          type: string
        - in: query
          name: apiKey
          description: Client-specific API key issued during onboarding.
          required: true
          type: string
        - in: body
          name: provisionedTokens
          description: Provision Token—Given PAN Enrollment ID Request
          required: false
          schema:
            $ref: '#/definitions/provisionedTokensRequest'
      responses:
        '201':
          description: rovisionedTokens artifacts created.
          schema:
            $ref: '#/definitions/provisionedTokensResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: cardVerification Failed
        '404':
          description: cardNotEligible
        '405':
          description: Method Not Allowed
        '500':
          description: Backend Error
      deprecated: false
  /provisionedTokens/confirmProvisioning:
    post:
      tags:
        - Token Requestor TSP
      x-child-product-name: Tokenization
      x-group-name: Token Requestor TSP
      x-proxy-name: Confirm Provisioning
      summary: Confirms the success or failure of a token provisioning event.
      operationId: Confirm Provisioning.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-request-id
          in: header
          description: Unique ID for the API request.
          required: true
          type: string
        - name: x-pay-token
          in: header
          description: A token identifying the transaction and its contents.
          required: true
          type: string
        - in: query
          name: apiKey
          description: Client-specific API key issued during onboarding.
          required: true
          type: string
        - in: body
          name: provisionedTokens
          description: Confirms the success or failure of a token provisioning event.
          required: false
          schema:
            $ref: '#/definitions/confirmProvisioningRequest'
      responses:
        '201':
          description: Success
        '400':
          description: invalidParameters 
        '403':
          description: notAllowed 
        '409':
          description: notAllowed 
        '500':
          description: serviceError - Temporary issue due to downtime - retry operation after waiting
        '503':
          description: serviceError - Temporary issue due to downtime - retry operation after waiting
      deprecated: false
  /provisionedTokens/replenish:
    post:
      tags:
        - Token Requestor TSP
      x-child-product-name: Tokenization
      x-group-name: Token Requestor TSP
      x-proxy-name: Replenish
      summary: Requests new dynamic parameters for a token. Call this API if dynamic parameters have expired, or are about to expire.
      operationId: Replenish.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-request-id
          in: header
          description: Unique ID for the API request.
          required: true
          type: string
        - name: x-pay-token
          in: header
          description: A token identifying the transaction and its contents.
          required: true
          type: string
        - in: query
          name: apiKey
          description: Client-specific API key issued during onboarding.
          required: true
          type: string
        - in: body
          name: provisionedTokens
          description: Active Account Management—Replenish.
          required: false
          schema:
            $ref: '#/definitions/replenishRequest'
      responses:
        '201':
          description: Created
        '400':
          description: invalidParameters 
        '409':
          description: notAllowed 
        '500':
          description: Service Error - Unspecified error
      deprecated: false
  /provisionedTokens/confirmReplenishment:
    post:
      tags:
        - Token Requestor TSP
      x-child-product-name: Tokenization
      x-group-name: Token Requestor TSP
      x-proxy-name: Confirm Replenish
      summary: Call Confirm Replenishment to confirm that the dynamic parameters associated with the token were successfully deployed to the token deployment point (in most cases, this will be a mobile device).
      operationId: Confirm Replenishment.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-request-id
          in: header
          description: Unique ID for the API request.
          required: true
          type: string
        - name: x-pay-token
          in: header
          description: A token identifying the transaction and its contents.
          required: true
          type: string
        - in: query
          name: apiKey
          description: Client-specific API key issued during onboarding.
          required: true
          type: string
        - in: body
          name: provisionedTokens
          description: The Confirm Replenishment API provides confirmation from MWP to VTS.
          required: false
          schema:
            $ref: '#/definitions/confirmReplenishmentRequest'
      responses:
        '201':
          description: Success
        '400':
          description: invalidParameters 
        '409':
          description: notAllowed 
        '500':
          description: Service Error - Temporary issue due to downtime - retry operation after waiting
        '503':
          description: Service Error - Temporary issue due to downtime - retry operation after waiting          
      deprecated: false      
  /provisionedTokens/replenishODA:
    post:
      tags:
        - Token Requestor TSP
      x-child-product-name: Tokenization
      x-group-name: Token Requestor TSP
      x-proxy-name: Replenish ODA
      summary: This operation returns the ODA Data iccPubKeyCert field, thus supporting renewals of the certificate
      operationId: Replenish ODA.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-request-id
          in: header
          description: Unique ID for the API request.
          required: true
          type: string
        - name: x-pay-token
          in: header
          description: A token identifying the transaction and its contents.
          required: true
          type: string
        - in: query
          name: apiKey
          description: Client-specific API key issued during onboarding.
          required: true
          type: string
        - in: body
          name: provisionedTokens
          description: This operation returns the ODA Data iccPubKeyCert field, thus supporting renewals of the certificate
          required: false
          schema:
            $ref: '#/definitions/replenishODARequest'
      responses:
        '201':
          description: Created
        '400':
          description: Not Supported - This token currently does not support ODA. Ignore this error and do not invoke this API until the token starts supporting ODA
        '409':
          description: The requested action is not allowed for a given token. Token status is invalid for this operation. Most likely, the token is not in an active state. Check the token details and perform the required/appropriateLCM action.
      deprecated: false   
  /provisionedTokens/reperso:
    post:
      tags:
        - Token Requestor TSP
      x-child-product-name: Tokenization
      x-group-name: Token Requestor TSP
      x-proxy-name: Token Re-perso
      summary: The Re-Perso Token Data API enable wallet providers to request update personalization profile data and static data for existing and new features for provisioned tokens. This enables the device to retrieve new perso profile data without requiring the cardholder to delete and re-provision their card again.<br>This API enables the cardholder to obtain the latest token data from VTS.
      operationId: Token Re-perso
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-request-id
          in: header
          description: Unique ID for the API request.
          required: true
          type: string
        - name: x-pay-token
          in: header
          description: A token identifying the transaction and its contents.
          required: true
          type: string
        - in: query
          name: apiKey
          description: Client-specific API key issued during onboarding.
          required: true
          type: string
        - in: body
          name: provisionedTokens
          description: Requests VTS to update personalization profile data and static data for existing and new features for provisioned tokens. It enables the device to retrieve new perso profile data without requiring the cardholder to delete and re-provision their card again.
          required: false
          schema:
            $ref: '#/definitions/repersoRequest'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/repersoResponse'
        '400':
          description: Not Supported - This token currently does not support ODA. Ignore this error and do not invoke this API until the token starts supporting ODA
        '409':
          description: The requested action is not allowed for a given token. Token status is invalid for this operation. Most likely, the token is not in an active state. Check the token details and perform the required/appropriateLCM action.
      deprecated: false 
  /provisionedTokens/suspendToken:
    put:
      tags:
        - Token Requestor TSP
      x-child-product-name: Tokenization
      x-group-name: Token Requestor TSP
      x-proxy-name: Suspend Token
      summary: Changes the token status to Suspend. The result of this operation leads to a token status update. This changed token status should be propagated to the device.
      operationId: Suspend Token.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-request-id
          in: header
          description: Unique ID for the API request.
          required: true
          type: string
        - name: x-pay-token
          in: header
          description: A token identifying the transaction and its contents.
          required: true
          type: string
        - in: query
          name: apiKey
          description: Client-specific API key issued during onboarding.
          required: true
          type: string
        - in: body
          name: provisionedTokens
          description: Change the token status to suspend.
          required: false
          schema:
            $ref: '#/definitions/suspendTokenRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Incomplete Request - API request is missing required parameters.
        '409':
          description: Not Allowed - Invalid token in request
      deprecated: false      
  /provisionedTokens/resumeToken:
    put:
      tags:
        - Token Requestor TSP
      x-child-product-name: Tokenization
      x-group-name: Token Requestor TSP
      x-proxy-name: Resume Token
      summary: Changes the token status to Active. The result of this operation leads to a token status update. This changed token status should be propagated to the device.
      operationId: Resume Token.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-request-id
          in: header
          description: Unique ID for the API request.
          required: true
          type: string
        - name: x-pay-token
          in: header
          description: A token identifying the transaction and its contents.
          required: true
          type: string
        - in: query
          name: apiKey
          description: Client-specific API key issued during onboarding.
          required: true
          type: string
        - in: body
          name: provisionedTokens
          description: Change the token status to suspend.
          required: false
          schema:
            $ref: '#/definitions/resumeTokenRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Incomplete Request - API request is missing required parameters.
        '409':
          description: Not Allowed - Invalid token in request
        '500':
          description: Service Error - Unspecified error.
      deprecated: false  
  /provisionedTokens/deleteToken:
    put:
      tags:
        - Token Requestor TSP
      x-child-product-name: Tokenization
      x-group-name: Token Requestor TSP
      x-proxy-name: Delete Token
      summary: Changes the status of a provisioned token to Delete. The result of this operation leads to a token status update. This changed token status should be propagated to the device. Once the token is deleted, you cannot modify the token status to another state. To re-activate a deleted token, you must re-provision the token (Provision Token—Given PAN Enrollment ID).
      operationId: Delete Token.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-request-id
          in: header
          description: Unique ID for the API request.
          required: true
          type: string
        - name: x-pay-token
          in: header
          description: A token identifying the transaction and its contents.
          required: true
          type: string
        - in: query
          name: apiKey
          description: Client-specific API key issued during onboarding.
          required: true
          type: string
        - in: body
          name: provisionedTokens
          description: Change the token status to suspend.
          required: false
          schema:
            $ref: '#/definitions/suspendTokenRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Incomplete Request - API request is missing required parameters.
        '409':
          description: Not Allowed - Invalid token in request
        '500':
          description: Service Error - Unspecified error.
      deprecated: false
  /provisionedTokens/:
    get:
      tags:
        - Token Requestor TSP
      x-child-product-name: Tokenization
      x-group-name: Token Requestor TSP
      x-proxy-name: Get Token Status
      summary: Retrieves status information for a token.
      operationId: Get Token Status.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-request-id
          in: header
          description: Unique ID for the API request.
          required: true
          type: string
        - name: x-pay-token
          in: header
          description: A token identifying the transaction and its contents.
          required: true
          type: string
        - in: query
          name: apiKey
          description: Client-specific API key issued during onboarding.
          required: true
          type: string
        - in: header
          name: vProvisionedTokenID
          description: vProvisionedTokenID
          required: true
          type: string
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/getTokenResponse'          
        '400':
          description: Incomplete Request - API request is missing required parameters.
        '409':
          description: Not Allowed - Invalid token in request
        '500':
          description: Service Error - Unspecified error.
      deprecated: false 
  /panEnrollments/{vPanEnrollmentID}:
    get:
      tags:
        - Token Requestor TSP
      x-child-product-name: Tokenization
      x-group-name: Token Requestor TSP
      x-proxy-name: Get Metadata PAN
      summary: This API allows clients to retrieve meta data related to the PAN.
      operationId: Retrieves metadata associated with the PAN.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-request-id
          in: header
          description: Unique ID for the API request.
          required: true
          type: string
        - name: x-pay-token
          in: header
          description: A token identifying the transaction and its contents.
          required: true
          type: string
        - in: query
          name: apiKey
          description: Client-specific API key issued during onboarding.
          required: true
          type: string
        - in: path
          name: vPanEnrollmentID
          description: Unique ID for the enrolled PAN
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/getTokenResponse'          
        '400':
          description: Incomplete Request - API request is missing required parameters.
        '409':
          description: Not Allowed - Invalid token in request
        '500':
          description: Service Error - Unspecified error.
      deprecated: false 
  /cps/getContent/{guid}:
    get:
      tags:
        - Token Requestor TSP
      x-child-product-name: Tokenization
      x-group-name: Token Requestor TSP
      x-proxy-name: Get Content
      summary: Displays the digital card assets (Retrieves the content resource associated with the card’s GUID..)
      operationId: Get Content.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: x-request-id
          in: header
          description: Unique ID for the API request.
          required: true
          type: string
        - name: x-pay-token
          in: header
          description: A token identifying the transaction and its contents.
          required: true
          type: string
        - in: query
          name: apiKey
          description: Client-specific API key issued during onboarding.
          required: true
          type: string
        - in: path
          name: guid
          description: guid
          required: true
          type: string
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/getContentResponse'          
        '400':
          description: Incomplete Request - API request is missing required parameters.
        '409':
          description: Not Allowed - Invalid token in request
        '500':
          description: Service Error - Unspecified error.
      deprecated: false 
  /temp/vtis/v1/checkEligibility:
    post:
      tags:
        - Issuer TSP
      x-child-product-name: Tokenization
      x-group-name: Issuer TSP
      x-proxy-name: Check Eligibility
      summary: This API is invoked during the token provisioning flow on a device. Visa invokes this API call to the issuer with ID&V attributes and other relevant attributes so that the issuer can take appropriate action, such as approve or decline, based on those attributes to provision the token.
      operationId: Check Eligibility
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: request
          description: Check Eligibility
          required: false
          schema:
            $ref: '#/definitions/CheckEligibilityRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CheckEligibilityResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '500':
          description: Backend Error
      deprecated: false
  /temp/vtis/v1/getAvailableCards:
    get:
      tags:
        - Issuer TSP
      x-child-product-name: Tokenization
      x-group-name: Issuer TSP
      x-proxy-name: Get Available Cards
      summary: This service retrieves the list of available cards associated with the account number requested from VISA. Visionplus validates the number of active tokens in embosser level. Cards with no active tokens are considered as available for tokenization.  The last 4 digits of these available cards are passed to consumer’s mobile application
      operationId: Get Available Cards
      produces:
        - application/json
      parameters:
        - name: X-ClientID
          in: header
          description: X-ClientID
          required: true
          type: string
        - in: body
          name: request
          description: Get Available Cards
          required: false
          schema:
            $ref: '#/definitions/GetAvailableCardsRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GetAvailableCardsResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '500':
          description: Backend Error
      deprecated: false
  /temp/vtis/v1/getSelectedCards:
    get:
      tags:
        - Issuer TSP
      x-child-product-name: Tokenization
      x-group-name: Issuer TSP
      x-proxy-name: Get Selected Cards
      summary: This service returns card data related to one card selected by the cardholder from the list of cards presented by ‘Get Available Cards’ service. The last 4 digit of the card number and account number are used to retrieve the respective card information.
      operationId: Get Selected Cards
      produces:
        - application/json
      parameters:
        - name: X-ClientID
          in: header
          description: X-ClientID
          required: true
          type: string
        - in: body
          name: request
          description: Check Eligibility
          required: false
          schema:
            $ref: '#/definitions/GetSelectedCardsRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GetSelectedCardsResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '500':
          description: Backend Error
      deprecated: false
  /temp/vtis/v1/tokenRequestors/{tokenRequestorID}/tokens/{tokenReferenceID}/deviceBinding:
    post:
      tags:
        - Issuer TSP
      x-child-product-name: Tokenization
      x-group-name: Issuer TSP
      x-proxy-name: Device Token Binding Request
      summary: This API is invoked to bind an ECOM/COF token to a device.
      operationId: Device Token Binding Request
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: request
          description: Device Token Binding Request
          required: false
          schema:
            $ref: '#/definitions/DeviceTokenBindingRequest'
        - name: tokenReferenceID
          in: path
          description: |2-
             Unique ID for the token associated with the PAN. This ID can
            be used in lieu of a token for subsequent calls, such as life cycle events
          required: true
          type: string
        - name: tokenRequestorID
          in: path
          description: Unique ID assigned to the initiator of the token request
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DeviceTokenBindingResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '500':
          description: Backend Error
      deprecated: false
  /temp/vtis/v2/tokenRequestors/{tokenRequestorID}/tokens/{tokenReferenceID}/tokenChanged:
    post:
      tags:
        - Issuer TSP
      x-child-product-name: Tokenization
      x-group-name: Issuer TSP
      x-proxy-name: Token Notification
      summary: |-
        Visa will invoke this API call when the issuer's token status has
        changed
      operationId: Token Notification
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: eventType
          in: query
          description: Event type
          required: false
          type: string
          allowEmptyValue: false
          enum:
            - TOKEN_STATUS_UPDATED
        - in: body
          name: request
          description: Transactions Details Request
          required: false
          schema:
            $ref: '#/definitions/TokenNotificationRequest'
        - name: tokenReferenceID
          in: path
          description: |2-
             Unique ID for the token associated with the PAN. This ID can
            be used in lieu of a token for subsequent calls, such as life cycle events
          required: true
          type: string
        - name: tokenRequestorID
          in: path
          description: Unique ID assigned to the initiator of the token request
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TokenNotificationResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '500':
          description: Backend Error
      deprecated: false
  /temp/vtis/v2/tokenRequestors/{tokenRequestorID}/tokens/{tokenReferenceID}/tokenCreated:
    post:
      tags:
        - Issuer TSP
      x-child-product-name: Tokenization
      x-group-name: Issuer TSP
      x-proxy-name: Token Create Notification
      summary: This API is exposed by an issuer. Visa will invoke this API call when the issuer's token has been created.
      operationId: Token Create Notification
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: eventType
          in: query
          description: Event type
          required: false
          type: string
          allowEmptyValue: false
          enum:
            - TOKEN_CREATED
        - in: body
          name: request
          description: Token Create Notification
          required: false
          schema:
            $ref: '#/definitions/TokenCreateNotificationRequest'
        - name: tokenReferenceID
          in: path
          description: |2-
             Unique ID for the token associated with the PAN. This ID can
            be used in lieu of a token for subsequent calls, such as life cycle events
          required: true
          type: string
        - name: tokenRequestorID
          in: path
          description: Unique ID assigned to the initiator of the token request
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TokenCreateNotificationResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '500':
          description: Backend Error
      deprecated: false
definitions:
  channelSecurityContext:
    type: object
    properties:
      encryptionScheme:
        type: string
        example: RSA_PKI
        description: |-
          It is one of the following values:
            • RSA_PKI
            • OPACITY_A
            • SCP_02/PULL
            • For ECC, SCP_03/ecka
  deviceCerts:
    type: object
    properties:
      certFormat:
        type: string 
        maxLength: 16
        example: X509
      certUsage:
        type: string
        example: CONFIDENTIALITY
        description: |-
          It is one of the following values:
            • CONFIDENTIALITY
            • INTEGRITY
            • DEVICE_ROOT
      certValue:
        type: string
        maxLength: 8192
        example: LS0...0K
  deviceInfo:
    type: object
    properties:
      deviceBrand:
        type: string
        example: AndroidBrand
        maxLength: 32
      deviceIDType:
        type: string
        example: TEE
        description: |-
          It is one of the following values:
            • SecureElement
            • TEE
            • Derived
      deviceManufacturer:
        type: string
        example: Samsung
        maxLength: 32
      deviceModel:
        type: string
        example: ANDROID-999
        maxLength: 32
      deviceName:
        type: string
        example: TXlXYXRjaA
        maxLength: 256
      phoneNumber:
        type: integer
        example: 6505551212
        maxLength: 32
      deviceType:
        type: string
        example: WATCH
        description: |-
          It is one of the following values:
            • PHONE
            • TABLET
            • PHONE_TABLET
            • PC
            • WATCH
            • TV
            • WEARABLE_DEVICE
            • AUTOMOBILE_DEVICE
      hostDeviceID:
        type: string
        example: 3e8...62
        maxLength: 24
      osBuildID:
        type: string
        example: KTU84M
        maxLength: 32
      osType:
        type: string
        example: Android
        description: |-
          It is one of the following values:
            • ANDROID
            • IOS
            • WINDOWS
            • BLACKBERRY
            • TIZEN
            • OTHER
      osVersion:
        type: string
        example: 4.4.4
        maxLength: 32
        description: Numeric, period ( . ); maximum 32
                    characters.
        
  enrollDeviceRequest:
    type: object
    required: 
#      - osType
      - deviceType
      - deviceName
      - vCertificateID
    properties:
      devicedata:
        $ref: '#/definitions/channelSecurityContext'
      devicecerts:
        $ref: '#/definitions/deviceCerts'
      deviceinfo:
        $ref: '#/definitions/deviceInfo'
  enrollDeviceResponse:
    type: object
    properties:
      requestID:
        type: string
        example: taj...Sr 
        description: The ID specified in the x-request-id header.
      vClientID:
        type: string
        example: 217...bb
      clientDeviceID:
        type: string
        example: lzD...N9
        maxLength: 24
        description: Alphabetic, numeric, and hyphens ( – ) and undersccores(_), e.g. spaces are not allowed.
      deviceID:
        type: string
        example: ebe...02
      vServerNonce:
        type: string
        example: 5565a9f69410447bacdb4ce7799ad4ad3133
        
  panRequestBody:
    type: object
    required: 
      - clientAppID
      - clientWalletAccountID
      - deviceName
      - vCertificateID
    properties:
      clientAppID:
        type: string
        example: CompanyABC
        maxLength: 36
        description: Alphabetic, numeric, and hyphens ( – )
                  e.g. spaces are not allowed.
      clientWalletAccountID:
        type: string
        example: AiO...I6
        maxLength: 24
        description: Alphabetic, numeric, and hyphens ( – ) and undersccores(_), e.g. spaces are not allowed.
      locale:
        type: string
        example: en_US
        maximum: 5
        description: Alphabetic, underscores ( _ ), e.g. spaces are not allowed.
      panSource:
        type: string
        example: ONFILE
        description: |-
          It is one of the following values:
            • ONFILE – The wallet provider already has the
              PAN data for the customer in their records
            • MANUALLYENTERED - The customer is expected to type the card number or capture a picture of the card.
            • ISSUER_PUSH_PROVISION - The PAN data was provided by the issuer of the PAN
            • TOKEN_FOR_TOKEN-  Token was used for source of the PAN data.
      consumerEntryMode:
        type: string
        example: KEYENTERED
        description: |-
          It is one of the following values:
            • KEYENTERED
            • CAMERACAPTURED
            • UNKNOWN
      encPaymentInstrument:
        type: string
        example: eyJ...FQ
        maxLength: 8162
        description: JSON Web Encrypted string using the shared secret made available at the time of onboarding.
  panExpirationDate:
    type: object
    properties:
      month:
        type: integer
        example: 12
        maxLength: 2
      year:
        type: integer
        example: 2022
        maxLength: 4
  panbillingAddress:
    type: object
    properties:
      line1:
        type: string
        example: 901 Metro Center Blvd Line 1
        maxLength: 140
        format: Alphanumeric, UTF-8 whitespace
      line2:
        type: string
        example: 901 Metro Center Blvd Line 2
        maxLength: 140
        format: Alphanumeric, UTF-8 whitespace
      line3:
        type: string
        example: 901 Metro Center Blvd Line 3
        maxLength: 140
        format: Alphanumeric, UTF-8 whitespace        
      line4:
        type: string
        example: 901 Metro Center Blvd Line 4
        maxLength: 140
        format: Alphanumeric, UTF-8 whitespace.
      line5:
        type: string
        example: 901 Metro Center Blvd Line 5
        maxLength: 140
        format: Alphanumeric, UTF-8 whitespace        
      city:
        type: string
        example: Foster City
        format: Alphanumeric, UTF-8 whitespace; maximum 100 characters
      postalCode:
        type: string
        example: 202212
        format: Alphabetic, numeric, e.g. spaces are not allowed; maximum 3–16 characters.
      state:
        type: string
        example: CA
        format: Alphabetic; maximum 3 characters.
      country:
        type: string
        example: US
        format: Alphabetic; maximum 2 characters.
  panissuerClientInfo:
    type: object
    properties:
      source:
        type: string
        example: ISSUER
        format: It is one of the following values
          • ISSUER
          • TOKEN_REQUESTOR
      clientWalletAccountID:
        type: string
        example: Boz...id
        format: Alphabetic, numeric, hyphens ( - ),and underscores( _ ), e.g. spaces are not allowed. maximum 24 characters.
      firstName:
        type: string
        example: first Name
        format: Alphanumeric; between 2–80 characters, inclusive.
      middleName:
        type: string
        example: middle Name
        format: Alphanumeric; between 2–80 characters, inclusive.
      lastName:
        type: string
        example: last Name
        format: Alphanumeric; between 2–80 characters, inclusive.
      issuerAccountID:
        type: string
        example: test1
        format: Alphabetic, numeric, hyphens ( - ),and underscores( _ ), e.g. spaces are not allowed. maximum 24 characters.
      clientDeviceID:
        type: string
        example: boz...v1
        format: Alphabetic, numeric, hyphens ( - ),and underscores( _ ), e.g. spaces are not allowed. maximum 24 characters.
      tokenReferenceID:
        type: string
        example: test token Reference ID
        format: Alphabetic, numeric; maximum 32 characters.
      paymentAccountReference:
        type: string
        example: Test pmt Acct Ref
        format: Alphanumeric; maximum 29 characters.
      phoneNumber:
        type: string
        example: 650-555-1212
        format: A valid phone number; maximum 32 bytes.
      contactEmail:
        type: string
        example: ABC@ABC.COM
        format: A valid email address; maximum 32 bytes
      country:
        type: string
        example: IND
        format: An alpha 2 country code (ISO 3166-1 alpha-2). 3 bytes.
      locale:
        type: string
        example: us_EN
      campaignID:
        type: string
        example: testcampaignID
        format: Alphabetic, numeric, hyphens ( - ), and underscores ( _ ); maximum 100 characters.
      campaignDescription:
        type: string
        example: test campaign Descr
        format: Alphabetic, numeric, hyphens ( - ), and underscores ( _ ); maximum 250 characters.
      userPersonalID:
        type: string
        example: testuserPersonalID
        format: Alphabetic or numeric; maximum 15 characters.
  panProvider:
    type: object
    properties:
      intent: 
        type: string
        example: PUSH_PROV_MOBILE
      clientWalletProvider: 
        type: string
        example: 400...95
      clientWalletAccountID: 
        type: string
        example: Boz...id
      clientDeviceID: 
        type: string
        example: boz...v1
      clientAppID: 
        type: string
        example: CompanyABC
      isIDnV:
        type: string
        example: true
      issuerAccountID:
        type: string
        example: TEST1
      issuerClientInformation:
        $ref: '#/definitions/panissuerClientInfo'  
      
  unencryptedPaymentInstrument:
    type: object
    properties:
      accountNumber:
        type: integer
        example: 462...33
        format: Numeric; 13-19 digits.
      cvv2:
        type: integer
        example: 123
        format: Numeric; 3-4 digits.
      expirationDate:
        $ref: '#/definitions/panExpirationDate'
      name:
        type: string
        example: vts
        format: Alphanumeric,including spaces; maximum 256 characters.
      billingAddress:
        $ref: '#/definitions/panbillingAddress' 
      provider:
        $ref: '#/definitions/panProvider' 
      passcode:
        $ref: '#/definitions/panbillingAddress' 
      returnURIType:
        type: string
        example: ANDROID
      returnURI:
        type: string
        example: aHR...Ju
      issuerTraceID:
        type: string
        example: "1529527725"
      isTsAndCsAccepted:
        type: string
        example: true
  enrollPanRequest:
    required: 
    - clientWalletProvider
    - firstName
    - lastName
    - locale
    - type
    - value
    type: object
    properties:
      devicedata:
        $ref: '#/definitions/panRequestBody'
      devicecerts:
        $ref: '#/definitions/unencryptedPaymentInstrument'
        
  merchantPresentedQR:
    type: object
    properties:
      merchantPresentedQR:
        type: string
        example: N
  paymentInstrument:
    type: object
    properties:
      expirationDate:
        $ref: '#/definitions/panExpirationDate'
      last4:
        type: string
        example: 1234
      cvv2PrintedInd:
        type: string
        example: Y
        format: It is one of the following values-
          • Y - Printed
          • N - Not printed
      expDatePrintedInd:
        type: string
        example: Y
        format: It is one of the following values-
          • Y - Printed
          • N - Not printed
      enabledServices:
        $ref: '#/definitions/merchantPresentedQR'

  panEnrollContent:
    type: object
    properties:
      mimeType:
        type: string
        example: image/png
        format: It is one of the following values-
          • image/png
          • image/pdf
          • text/plain
          • text/html
      width:
        type: string
        example: 100
        format: Alphabetic, numeric; maximum 32 characters.
      height:
        type: string  
        example: 4096
        format: Alphabetic, numeric; maximum 32 characters.
        
  panCardData:
    type: object
    properties:
      guid:
        type: string
        example: a0b72f0e60284f4f9809c9375557a77c
        format: Alphabetic, numeric; maximum 32 characters.
      contentType:
        type: string
        example: cardSymbol
        format: It is one of the following values.
          • digitalCardArt
          • digitalCardArtBackground
          • cardSymbol
          • termsAndConditions
      content:
        $ref: '#/definitions/panEnrollContent'
        
  cardMetaData:
    type: object
    properties:
      backgroundColor:
        type: string
        example: 0x0e19d2
        format: CSS style hex format, e.g. 0x0e19d2; maximum 32 characters.
      foregroundColor:
        type: string
        example: 0x7dffff
        format: CSS style hex format, e.g. 0x0e19d2; maximum 32 characters.
      labelColor:
        type: string
        example: 0x000000
        format: CSS style hex format, e.g. 0x0e19d2; maximum 32 characters.
      contactWebsite:
        type: string
        example: https://www.visatest.com
        format: Alphabetic, numeric; maximum 256 characters.
      contactEmail:
        type: string
        example: test@visa.com
        format: CSS style hex format, e.g. 0x0e19d2; maximum 32 characters.
      contactNumber:
        type: string
        example: 0x000000
        format: Alphabetic, numeric.
      contactName:
        type: string
        example: 0x000000
        format: Alphabetic, numeric, and spaces ( ); maximum 32 characters.
      privacyPolicyURL:
        type: string
        example: https://www.visatest.com
        format: Valid URL; maximum 128 characters.
      termsAndConditionsURL:
        type: string
        example: https://www.visatest.com
        format: Valid URL; maximum 128 characters.
      shortDescription:
        type: string
        example: Visa Company Pay
        format: Alphabetic, numeric; maximum 32 characters.
      longDescription:
        type: string
        example: Visa Test Only Card
        format: Alphabetic, numeric; maximum 32 characters.
      cardData:
        $ref: '#/definitions/panCardData'
      
  enrollPanResponse:
    type: object
    properties:
      vPanEnrollmentID:
        type: string
        example: 350..02
      paymentInstrument:
        $ref: '#/definitions/paymentInstrument'
      cardMetaData:
        $ref: '#/definitions/cardMetaData'
  
  termsAndConditions:
    type: object
    properties:
      id:
        type: string
        example: 13c5e2ba-eb5c-432d-a027-97ddaf109af1
        format: Alphabetic, numeric; maximum 36 characters.
      date:
        type: integer
        example: 111115
        format: Date. UTC Format in epoch seconds The UNIX_UTC_timestamp is a UNIX Epoch timestamp. The value is in seconds
      
  provisionedTokensRequest:
    type: object
    properties:
      clientAppID:
        type: string
        example: AppID1234
      termsAndConditions:
        $ref: '#/definitions/termsAndConditions'
      clientDeviceID:
        type: string
        example: boz...v1
        format: Alphabetic, numeric, hyphens ( - ),and underscores( _ ), e.g. spaces are not allowed. maximum 24 characters.
      clientWalletAccountID:
        type: string
        example: 1234
        format: Alphabetic, numeric, hyphens ( - ),and underscores( _ ), e.g. spaces are not allowed. maximum 24 characters.
      presentationType:
        type: array
        items:
           type: string
           enum: [NFC-HCE, NFC-SE, ECOM, INAPP]
      encRiskDataInfo:
        type: string
        example: eyJ...iQ
        format: Alphanumeric; maximum 10240 characters.
      protectionType:
        type: string
        example: SOFTWARE
        format: Alphabetic, numeric, hyphens ( - ),and underscores( _   ), e.g. spaces are not allowed. maximum 24 characters.
      clientWalletAccountEmailAddress:
        type: string
        example: vtstests@visa.com
        format: Valid email address; maximum 48 characters
      clientWalletAccountEmailAddressHash:
        type: string
        example: 2DX...L4
        format: Base64 encoded string, per RFC4648, with the following exceptions; hyphens ( - ) replace plus signs ( + ) and underscores ( _ ) replace forward slash ( / ) characters; maximum 48 characters.
  
  provisionedTokensResponse:
    type: object
    properties:
      vPanEnrollmentID:
        type: string
        example: 350..02
      paymentInstrument:
        $ref: '#/definitions/paymentInstrument'
      cardMetaData:
        $ref: '#/definitions/cardMetaData'
        
  confirmProvisioningRequest:
    required: 
    - provisioningStatus
    type: object
    properties:
      api:
        type: string
        example: "08581800"
        description: Account Parameter Index (YHHHHCC) value, which is required if the token was provisioned for NFC-HCE; otherwise, it is not used. This data element is utilized during cryptogram generation
        format: Alphabetic, numeric; maximum 8 characters.
      provisioningStatus:
        type: string
        example: SUCCESS
        format: It is one of the following values-
          • SUCCESS
          • FAILURE
      failureReason:
        type: string
        example: "Processing Failure"
        format: Alphabetic, numeric; maximum 32 characters
  signature:
    type: object
    properties:
      mac:
        type: string
        example: 18F4402024171A9C
        format: Alphabetic, numeric; maximum 36 characters.
  replenishdynParams:
    type: object
    properties:
      api:
        type: string
        example: "08581800"
        description: Account Parameter Index (YHHHHCC) value, which is required if the token was provisioned for NFC-HCE; otherwise, it is not used. This data element is utilized during cryptogram generation
        format: Alphabetic, numeric; maximum 8 characters.
      sc:
        type: string
        example: "1"
        format: It is one of the following values-
      tvl:
        type: object
        $ref: '#/definitions/replenishdynTvl'
  replenishdynTvl:
    type: string
    example: "08581800"
    description: Account Parameter Index (YHHHHCC) value, which is 
  replenishhceData:
    type: object
    properties:
      dynParams:
        $ref: '#/definitions/replenishdynParams'
  replenishtokenInfo:
    type: object
    properties:
      hceData:
        $ref: '#/definitions/replenishhceData'
  replenishRequest:
    required: 
    - mac
    type: object
    properties:
      signature:
        $ref: '#/definitions/signature'
      tokenInfo:
        $ref: '#/definitions/replenishtokenInfo'
      api:
        type: string
        example: "08581800"
        description: Account Parameter Index (YHHHHCC) value, which is required if the token was provisioned for NFC-HCE; otherwise, it is not used. This data element is utilized during cryptogram generation
        format: Alphabetic, numeric; maximum 8 characters.
      provisioningStatus:
        type: string
        example: SUCCESS
        format: It is one of the following values-
          • SUCCESS
          • FAILURE
      failureReason:
        type: string
        example: "Processing Failure"
        format: Alphabetic, numeric; maximum 32 characters
  confirmReplenishmentRequest:
    required: 
    - sc
    - api
    type: object
    properties:
      tokenInfo:
        $ref: '#/definitions/confirmReplenishtokenInfo'
  confirmReplenishhceData:
    type: object
    properties:
      dynParams:
        $ref: '#/definitions/confrimReplenishdynParams'
  confirmReplenishtokenInfo:
    type: object
    properties:
      hceData:
        $ref: '#/definitions/confirmReplenishhceData'
  confrimReplenishdynParams:
    type: object
    properties:
      sc:
        type: string
        example: 108,
        description: Sequence counter which is used to generate cryptograms. Tracked in SDK, Sequence Counter will be incremented upon replenishment call. Source- VTS generated.
        format: Alphabetic, numeric; maximum 65535 characters
      api:
        type: string
        example: "04646710"
        description: Account parameter index, which is used to generate cryptograms. Source = Generated by VTS and associated with token request/replenishment. Format is defined by VCPCS 1.8.
        format: Alphabetic, numeric; maximum 8 characters.
  replenishODARequest:
    required: 
    - sc
    - api
    type: object
    properties:
      ignore00field:
        type: string
        example: "B0AF015D"
        description: Account Parameter Index 
        format: Alphabetic, numeric; maximum 8 characters.
      ODAData:
        $ref: '#/definitions/iccPubKeyCert'
  iccPubKeyCert:
    type: object
    properties:
      iccPubKeyCert:
        $ref: '#/definitions/iccPubKeyCertdata'
  iccPubKeyCertdata:
    type: object
    properties:
      exponent:
        type: string
        example: "03"
        description: Public Key Exponent used for the generation of the Signed Dynamic Application Data.
        format: Alphabetic, numeric; 2-6 characters.
      certificate:
        type: string
        example: "based 64 encoded cert data"
        description: Public Key certified by the Visa CA for offline data authorization.
        format: Alphabetic, numeric, plus sign ( + ), and equal sign ( = ), e.g. spaces are not allowed; 236- 352 characters.
      remainder:
        type: string
        example: "based 64 encoded reminder of cert data"
        description: Digits of the Public Key Modulus which do not fit within the Public Key Certificate.
        format: Alphabetic, numeric, plus sign ( + ), and equal sign ( = ), e.g. spaces are not allowed; maximum 84 characters.
      expirationDate:
        $ref: '#/definitions/panExpirationDate'
  repersoRequest:
    required: 
    - clientAppID
    - clientWalletAccountID
    - vCertificateID
    type: object
    properties:
      clientAppID:
        type: string
        example: "Fiserv.Inc"
        description: Unique identifier for the client application. 
        format: Alphabetic, numeric, and hyphens ( - ), e.g.spaces are not allowed; maximum 36 characters.
      clientDeviceID:
        type: string
        example: "1wgqg1"
        description: Stable and unique identifier set by wallet provider for the device. By default, this field should be considered required. It is optional only for the following presentation types:-ECOM, MERCHANT_PRESENTED_QR, QR_ CONSUMER_CLOUD, and RECEIVE_ONLY 
        format: Alphabetic, numeric, and hyphens ( - ), e.g. spaces are not allowed; 24 characters..
      clientWalletAccountID:
        type: string
        example: "PHTxnV"
        description: Client provided consumer ID that identifies the Wallet Account Holder entity. 
        format: Alphabetic, numeric, and hyphens ( - ), e.g. spaces are not allowed; maximum 24 characters..
      ssdData:
        type: string
        example: null
        description: Applicable for NFC-SE use cases only .
          Container for all data specific to the SD in the chip. If
          presentation type is NFC-SE, SSD Data needs to be provided.
        format: An ssdData structure.
      channelSecurityContext:
        $ref: '#/definitions/channelInfo'

  channelInfo:
    type: object
    properties:
      channelInfo:
        $ref: '#/definitions/encryptionScheme'
      deviceCerts:
        type: string
        example: "B0AF015D"
        description: Device certificates. 
        format: An array of deviceCerts structures.
      vtsCerts:
        $ref: '#/definitions/vtsCerts'
      keyData:
        type: string
        example: "B0AF015D"
        description: Account Parameter Index 
        format: Alphabetic, numeric; maximum 8 characters.
  vtsCerts:
    $ref: '#/definitions/vtsCertsData'
  vtsCertsData:
    type: object
    properties:
      certUsage:
        type: string
        example: "CONFIDENTIALITY"
        description: The usage of this certificate. 
        format: It is one of the following values-
          • CONFIDENTIALITY
          • INTEGRITY
          • DEVICE_ROOT
      vCertificateID:
        type: string
        example: "183DC10C"
        description: Unique ID for Visa Certificate. This will be given to the wallet provider during onboarding. Devices can use this certificate ID while communicating with Visa Token Service . This will be the first 4 bytes of the Visa Public Key. 
        format: String. Size- 32.
  encryptionScheme:
    type: object
    properties:
      encryptionScheme:
        type: string
        example: OPACITY_A
        description: |-
          It is one of the following values:
            • RSA_PKI
            • OPACITY_A
            • SCP_02/PULL
            • For ECC, SCP_03/ecka
  repersoResponse:
    type: object
    properties:
      vProvisionedTokenID:
        type: string
        example: 74f97afa90879b85c361174d8fd8ad01
        format: Alphabetic, numeric and hyphens ( – ), e.g. spaces are not allowed; maximum characters 36 characters.
  suspendTokenRequest:
    required: 
    - updateReason
    - reasonCode
    - reasonDesc
    type: object
    properties:
      updateReason:
        $ref: '#/definitions/updateReasonInfo'
  updateReasonInfo:
    type: object
    properties:
      reasonCode:
        type: string
        example: CUSTOMER_CONFIRMED
        description: The reason for the current status of the token or token-associated account parameters
        format: |-
          It is one of the following values. Size = 20.
            • FRAUD
            • CUSTOMER_CONFIRMED
      reasonDesc:
        type: string
        example: "Customer called"
        description: Reason description for the change in status
        format: Alphabetic, numeric; maximum 256 characters.
  resumeTokenRequest:
    required: 
    - updateReason
    - reasonCode
    - reasonDesc
    type: object
    properties:
      updateReason:
        $ref: '#/definitions/updateReasonInfo'
  getContentResponse:
    type: object
    properties:
      altText:
        type: string
        example: Front_Image
        format: String. 32 characters
      contentType:
        type: string
        example: "cardSymbol"
        format: String. 32 characters
      content:
        type: string
        $ref: '#/definitions/contentInfo'
  contentInfo:
    type: object
    properties:
      encodedData:
        type: string
        example: R0lGODdhyADIAOcAAAQ+HHSijDRyXLzSxAxaP=
        format: Standard base64 Encoding per RFC4648.
      width:
        type: string
        example: 200
        format: String. 32 characters
      mimeType:
        type: string
        example: "image/png"
        format: String. 32 characters    
      height:
        type: string
        example: 200
        format: String. 32 characters   
  getTokenResponse:
    type: object
    properties:
      altText:
        type: string
        example: Front_Image
        format: String. 32 characters
      contentType:
        type: string
        example: "cardSymbol"
        format: String. 32 characters
        
  tokenInfo:
    type: object
    properties:
      tokenType:
        type: string
        example: 13c5e2ba-eb5c-432d-a027-97ddaf109af1
        format: Alphabetic, numeric; maximum 36 characters.
      tokenAssuranceLevel:
        type: integer
        example: 111115
        format: Date. UTC Format in epoch seconds The UNIX_UTC_timestamp is a UNIX Epoch timestamp. The value is in seconds  
      numberOfActiveTokensForPAN:
        type: integer
        example: 1311
        format: Integer; max length 4 digits.
      numberOfInactiveTokensForPAN:
        type: integer
        example: 1111
        format: Integer; max length 4 digits. 
      numberOfSuspendedTokensForPAN:
        type: integer
        example: 1332
        format: Integer; max length 4 digits.
        
  approveprovisiondeviceInfo:
    type: object
    properties:
      deviceID:
        type: string
        example: 3e8...62
        maxLength: 24
      deviceLanguageCode:
        type: string
        example: 3e8...62
        maxLength: 24  
      osType:
        type: string
        example: Android
        description: |-
          It is one of the following values:
            • ANDROID
            • IOS
            • WINDOWS
            • BLACKBERRY
            • TIZEN
            • OTHER
      osVersion:
        type: string
        example: 4.4.4
        maxLength: 32
        description: Numeric, period ( . ); maximum 32
                    characters.
      osBuildID:
        type: string
        example: KTU84M
        maxLength: 32
      deviceType:
        type: string
        example: WATCH
        description: |-
          It is one of the following values:
            • PHONE
            • TABLET
            • PHONE_TABLET
            • PC
            • WATCH
            • TV
            • WEARABLE_DEVICE
            • AUTOMOBILE_DEVICE

      deviceIDType:
        type: string
        example: TEE
        description: |-
          It is one of the following values:
            • SecureElement
            • TEE
            • Derived
      deviceManufacturer:
        type: string
        example: Samsung
        maxLength: 32
      deviceModel:
        type: string
        example: ANDROID-999
        maxLength: 32
      deviceName:
        type: string
        example: TXlXYXRjaA
        maxLength: 256
      deviceNumber:
        type: integer
        example: 6505551212
        maxLength: 32
      deviceLocation:
        type: string
        example: Samsung
        maxLength: 32
      deviceIPAddressV4:
        type: string
        example: ANDROID-999
        maxLength: 32
      locationSource:
        type: string
        example: TXlXYXRjaA
        maxLength: 256
      tokenProtectionMethod:
        type: integer
        example: 6505551212
        maxLength: 32

  approveProvisioningRequest:
    required: 
    - tokenInfo
    - panReferenceID
    - lastName
    - walletAccountEmailAddressHash
    - panSource
    - encryptedData
    type: object
    properties:
      tokenInfo:
        $ref: '#/definitions/tokenInfo'
      panReferenceID”:
        type: string
        example: boz...v1
        format: String, max length 32 characters.
      walletAccountEmailAddressHash:
        type: string
        example: 1234
        format: Alphabetic, numeric, hyphens ( - ),and underscores
      clientWalletAccountID:
        type: string
        example: 1234
        format: String; max length 32 characters.
      panSource:
        type: string
        example: eyJ...iQ
        format: It is one of the following values-
          • KEY_ENTERED
          • ON_FILE
          • MOBILE_BANKING_APP
          • TOKEN
          • CHIP_DIP
          • CONTACTLESS_TAP
      addressVerificationResultCode:
        type: string
        example: SOFTWARE
        format: String; max length 1 character. .
      cvv2ResultsCode:
        type: string
        example: M
        format: String; max length 1 character.
           • M— CVV2 Match, indicates that Visa was able to verify the CVV2 value provided by the wallet provider.
           • N— CVV2 No Match, indicates that Visa was not able to verify the CVV2 value provided by the wallet provider.
           • P— Not processed, indicates that Visa was unable to verify the CVV2 value provided by the wallet provider. 
              This applies for Issuers opting for CVV2 Bypass only.
      consumerEntryMode:
        type: string
        example: CAMERA_CAPTURED
        format: It is one of the following values-
            • KEY_ENTERED
            • CAMERA_CAPTURED
            • UNKNOWN
      locale:
        type: string
        example: en_US
        format: String; ISO format for language (ISO 639- 1) and alpha-2 country code (ISO 3166-1 alpha-2); max length 5 characters.
      encryptedData:
        type: string
        example: <JWS> encryptedData
        format: String; max length 7000 characters.
      deviceInfo:
        $ref: '#/definitions/approveprovisiondeviceInfo'
        
  approveProvisioningResponse:
    type: object
    properties:
      actionCode:
        type: string
        example: N7
        format: It is one of the following values-
            • 00— Unconditional approval (provision and activate immediately for payments)
            • 85— Conditional approval (provision, but do not activate until additional consumer verification is performed)
              Any decline reason code present other than 00 and
              85 will prevent device provisioning. Decline approval due to one of the following reasons
                  • N7— CVV2 Failure
                  • 14— Invalid PAN
                  • 54— Invalid Expiration Date
                  • 05— Generic Decline
                  • 96— Issuer Internal System Error
      addressVerificationResultCode:
        type: string
        example: A
        format: String; max length 1 character.
      cvv2ResultsCode”:
        type: string
        example: M       
        format: String; max length 1 character.
           • M— CVV2 Match, indicates that Visa was able to verify the CVV2 value provided by the wallet provider.
           • N— CVV2 No Match, indicates that Visa was not able to verify the CVV2 value provided by the wallet provider.
           • P— Not processed, indicates that Visa was unable to verify the CVV2 value provided by the wallet provider. 
              This applies for Issuers opting for CVV2 Bypass only.
  approveProvisioninstandinRequest:
    required: 
    - panReferenceID
    - lifeCycleTraceID
    - walletAccountEmailAddress
    - clientWalletAccountID
    - panSource
    - encryptedData
    - stipReasonCode
    - dateTimeOfEvent
    type: object
    properties:
      panReferenceID”:
        type: string
        example: boz...v1
        description: Unique ID for the PAN. This ID can be used in lieu of PAN for subsequent calls, such as lifecycle events.
        format: String, max length 32 characters.
      walletAccountEmailAddressHash:
        type: string
        example: 1234
        description: Hash of email address that is linked to the wallet account login ID.
        format: String; Base64URL-encoded; max length 64 characters.
      clientWalletAccountID:
        type: string
        example: 1234
        description: Consumer ID that identifies the Wallet Account Holder entity. This is provided by the client.
        format: String; max length 32 characters.
      visaTokenScore:
        type: string
        example: SOFTWARE
        description: Value indicating the degree of risk associated with the token. Numeric value is 01 through 99.
        format: String; max length 2 characters.
      visaTokenDecisioning:
        type: string
        example: M
        format: String; max length 1 character.
           • 00 – Provision and activate
           • 05 – Do not provision
           • 85 – Provision in inactive state (requires further consumer authentication prior to activation)
      panSource:
        type: string
        example: eyJ...iQ
        format: It is one of the following values-
          • KEY_ENTERED
          • ON_FILE
          • MOBILE_BANKING_APP
          • TOKEN
          • CHIP_DIP
          • CONTACTLESS_TAP
      encryptedData:
        type: string
        example: <JWS> encryptedData
        format: String; max length 7000 characters.
      deviceInfo:
        $ref: '#/definitions/approvestandindeviceInfo'
      lifeCycleTraceID:
        type: string
        example: <JWS> encryptedData
        description: A message identifier that can be used to link some messages associated with a provisioning request. This should be used by the issuer in event/message logging.
        format: String; max length 15 characters.
      stipReasonCode:
        type: string
        example: "9020"
        description: This field contains a code that identifies why STIP responded for the issuer
        format: It is one of the following values- 
           • 9020— Issuer Time Out.
           • 9027— ECIP RTD Decline. Sent by CVV2 or RTD upon decline
           • 9216— Ineligible data for Token Type. Token is not a device-based one.  
           • 9217— Loyalty personalized data input is incorrect.
           • 9061— Switch Detected Error. Sent by Visa by default.
      actionCode:
        type: string
        example: "00"
        format: Action status codes.It is one of the following values
           00— Unconditional approval (provision and activate immediately for payments)
           85— Conditional approval (provision, but do not activate until additional consumer verification is performed).
           Any decline reason code present other than 00 and 85 will prevent device provisioning. 
          Decline approval due to one of the following reasons-
          • 54— Invalid Expiration Date
          • 05— Generic Decline
          • 96— Issuer Internal System Error
      dateTimeOfEvent:
        type: string
        example: "2020-07-17T22:08:16.000Z"
        description: Event date/timestamp in GMT.
        format: String; yyyy-MM-ddTHH:mm:ss.SSSZ.
  approvestandindeviceInfo:
    type: object
    properties:
      deviceLanguageCode:
        type: string
        example: "spa"
        format: String, max length 32 characters.
      tokenProtectionMethod:
        type: string
        example: ClOUD
        format: Alphabetic, numeric, hyphens ( - ),and underscores
        
  tokenCreateNotificationRequest:
    required: 
    - panReferenceID
    - lifeCycleTraceID
    - walletAccountEmailAddress
    - clientWalletAccountID
    - panSource
    - encryptedData
    type: object
    properties:
      messageReasonCode:
        type: string
        example: boz...v1
        description: Unique ID for the PAN. This ID can be used in lieu of PAN for subsequent calls, such as lifecycle events.
        format: String, max length 32 characters.
      dateTimeOfEvent:
        type: string
        example: "2020-07-17T22:08:16.000Z"
        description: Event date/timestamp in GMT.
        format: String; yyyy-MM-ddTHH:mm:ss.SSSZ.
      panReferenceID”:
        type: string
        example: boz...v1
        description: Unique ID for the PAN. This ID can be used in lieu of PAN for subsequent calls, such as lifecycle events.
        format: String, max length 32 characters.
      walletAccountEmailAddressHash:
        type: string
        example: 1234
        description: Hash of email address that is linked to the wallet account login ID.
        format: String; Base64URL-encoded; max length 64 characters.
      clientWalletAccountID:
        type: string
        example: 1234
        description: Consumer ID that identifies the Wallet Account Holder entity. This is provided by the client.
        format: String; max length 32 characters.
      panSource:
        type: string
        example: eyJ...iQ
        format: It is one of the following values-
          • KEY_ENTERED
          • ON_FILE
          • MOBILE_BANKING_APP
          • TOKEN
          • CHIP_DIP
          • CONTACTLESS_TAP
      addressVerificationResultCode:
        type: string
        example: A
        format: String; max length 1 character.
      cvv2ResultsCode”:
        type: string
        example: M       
        format: String; max length 1 character.
           • M— CVV2 Match, indicates that Visa was able to verify the CVV2 value provided by the wallet provider.
           • N— CVV2 No Match, indicates that Visa was not able to verify the CVV2 value provided by the wallet provider.
           • P— Not processed, indicates that Visa was unable to verify the CVV2 value provided by the wallet provider. 
              This applies for Issuers opting for CVV2 Bypass only.
      consumerEntryMode:
        type: string
        example: KEYENTERED
        description: |-
          It is one of the following values:
            • KEYENTERED
            • CAMERACAPTURED
            • UNKNOWN
      locale:
        type: string
        example: en_US
        format: String; ISO format for language (ISO 639- 1) and alpha-2 country code (ISO 3166-1 alpha-2); max length 5 characters.
      deviceInfo:
        $ref: '#/definitions/approveprovisiondeviceInfo'
      encryptedData:
        type: string
        example: <JWS> encryptedData
        format: String; max length 7000 characters.
  
  tokenStatusNotificationRequest:
    required: 
    - messageReasonCode
    - panReferenceID
    - lifeCycleTraceID
    - actionCode
    - panSource
    - encryptedData
    - stipReasonCode
    - dateTimeOfEvent
    type: object
    properties:
      messageReason:
        type: string
        example: TOKEN_DEVICE_BINDING_RESULT
        description: String representation of the message reason, corresponding to ISO message reason codes when applicable. Additional values may be available in the future.
        format: String, max length 32 characters.
          • TOKEN_DEACTIVATED
          • TOKEN_SUSPEND
          • TOKEN_RESUME
          • DEVICE_PROVISIONING_RESULT
          • OTP_VERIFICATION_RESULT
          • CALL_CENTER_ACTIVATION
          • MOBILE_BANK_APP_ACTIVATION
          • LUK_REPLENISHMENT
          • DEVICE_PROVISIONING_
          • REPERSONALIZATION_RESULT
          • TOKEN_EXPIRY_DATE_UPDATED
          • TOKEN_DEVICE_BINDING_RESULT
          • CARDHOLDER_STEPUP_RESULT
          • TRUSTED_LISTING_ENROLLMENT_RESULT
          • TOKEN_DEVICE_BINDING_REMOVED
      messageReasonCode:
        type: string
        example: boz...v1
        description: Unique ID for the PAN. This ID can be used in lieu of PAN for subsequent calls, such as lifecycle events.
        format: String, max length 32 characters
      dateTimeOfEvent:
        type: string
        example: "2020-07-17T22:08:16.000Z"
        description: Event date/timestamp in GMT.
        format: String; yyyy-MM-ddTHH:mm:ss.SSSZ.
      panReferenceID”:
        type: string
        example: boz...v1
        description: Unique ID for the PAN. This ID can be used in lieu of PAN for subsequent calls, such as lifecycle events.
        format: String, max length 32 characters.
      deviceID:
        type: string
        example: ebe...02
      encryptedData:
        type: string
        example: <JWS> encryptedData
        format: String; max length 7000 characters.
      actionCode:
        type: string
        example: N7
        format: It is one of the following values-
            • 00 — Good
            • 06 — Error
      deviceBindingResult:
        type: string
        example: DEVICE_BINDING_ISSUER_APP
        description: Unique ID for the PAN. This ID can be used in lieu of PAN for subsequent calls, such as lifecycle events.
        format: String, max length 32 characters.      
      deviceInfo:
        $ref: '#/definitions/tokenNotificationdeviceInfo'
  tokenNotificationdeviceInfo:
    type: object
    properties:
      deviceID:
        type: string
        example: ebe...02
        description: For SE wallet providers, this value is the SE ID in hex binary characters, transformed to a 48–character string. For HCE wallet providers, this field is the device ID as determined by the digital wallet provider (DWP). All alphanumeric and special characters are allowed for HCE DWP’s..
        format: String; max length 48 characters.
      deviceIndex:
        type: integer
        example: 1
        description: The index number from Visa where the deviceID
          is stored. This is required for token device binding.
        format: Integer; max length 2 digits.
  tokenInquiryResponse:
    type: object
    properties:
      encryptedData:
        type: string
        example: <JWS> encryptedData
        format: String; max length 7000 characters.
      panReferenceID”:
        type: string
        example: boz...v1
        description: Unique ID for the PAN. This ID can be used in lieu of PAN for subsequent calls, such as lifecycle events.
        format: String, max length 32 characters.
      walletAccountEmailAddressHash:
        type: string
        example: 1234
        description: Hash of email address that is linked to the wallet account login ID.
        format: String; Base64URL-encoded; max length 64 characters.
      clientWalletAccountID:
        type: string
        example: 1234
        description: Consumer ID that identifies the Wallet Account Holder entity. This is provided by the client.
        format: String; max length 32 characters.
      panSource:
        type: string
        example: eyJ...iQ
        format: It is one of the following values-
          • KEY_ENTERED
          • ON_FILE
          • MOBILE_BANKING_APP
          • TOKEN
          • CHIP_DIP
          • CONTACTLESS_TAP
      lastFourOfPAN:
        type: string
        example: 1234
        description: Consumer ID that identifies the Wallet Account Holder entity. This is provided by the client.
        format: String; max length 32 characters.
      cardholderVerificationList:
        $ref: '#/definitions/cardholderVerList'
      deviceBindingInfoList:
        $ref: '#/definitions/tokenNotificationdeviceInfo'
  cardholderVerList:
    type: object
    properties:
      lifeCycleTraceID:
        type: string
        example: 239...47
        description: A message identifier that can be used to link some messages associated with a provisioning request. This should be used by the issuer in event/message logging.
        format: String; max length 15 characters.
      status:
        type: string
        example: PENDING
        description: It is one of the following values.
          • APPROVED
          • PENDING
          • DECLINED
        format: String; max length 15 characters.
      timestamp:
        type: integer
        example: 1592869947
        description: Timestamp.
        format: UNIX Epoch timestamp, in seconds. 
  tokenLifeCycleRequest:
    required: 
    - operationType
    - operationReason

    type: object
    properties:
      operatorID:
        type: string
        example: ""
        description: Operator ID of either the person or system that is performing the operation
        format: String, max length 16 characters.
      operationReason:
        type: string
        example: "Approve"
        description: Reason for operation. Free form. The reason should be descriptive, such that if the issuer performs an action and the consumer calls DWP Customer Support, they should be able to read the reason, advise the consumer, and act accordingly. For example, if the token is suspended, the Request Reason could say “Suspended due to lost device”
        format: String; max length 254 characters..
      operationType:
        type: string
        example: TOKEN_DEVICE_BINDING_APPROVE
        description: Type of operation
        format: It is one of the following values-
          • DELETE
          • SUSPEND
          • RESUME
          • CALL_CENTER_ACTIVATION
          • TOKEN_DEVICE_BINDING_APPROVE
          • TOKEN_DEVICE_BINDING_REMOVE
          • TOKEN_TRUSTED_LISTING_ADD
          • TOKEN_TRUSTED_LISTING_REMOVE
          • TOKEN_DEVICE_BINDING_APPROVE_CALL_CENTER
          • TOKEN_DEVICE_BINDING_APPROVE_BANK_APP
          • CARDHOLDER_STEPUP_CALL_CENTER
          • CARDHOLDER_STEPUP_APP_TO_APP
      deviceInfo:
        $ref: '#/definitions/tokenNotificationdeviceInfo'
  panUpdateNotificationRequest:
    required: 
    - messageReasonCode
    - dateTimeOfEvent
    - encryptedData
    type: object
    properties:
      messageReason:
        type: string
        example: TOKEN_DEVICE_BINDING_RESULT
        description: String representation of the message reason, corresponding to ISO message reason codes when applicable. Additional values may be available in the future.
        format: String, max length 32 characters.
          • TOKEN_DEACTIVATED
          • TOKEN_SUSPEND
          • TOKEN_RESUME
          • DEVICE_PROVISIONING_RESULT
          • OTP_VERIFICATION_RESULT
          • CALL_CENTER_ACTIVATION
          • MOBILE_BANK_APP_ACTIVATION
          • LUK_REPLENISHMENT
          • DEVICE_PROVISIONING_
          • REPERSONALIZATION_RESULT
          • TOKEN_EXPIRY_DATE_UPDATED
          • TOKEN_DEVICE_BINDING_RESULT
          • CARDHOLDER_STEPUP_RESULT
          • TRUSTED_LISTING_ENROLLMENT_RESULT
          • TOKEN_DEVICE_BINDING_REMOVED
      messageReasonCode:
        type: string
        example: boz...v1
        description: Unique ID for the PAN. This ID can be used in lieu of PAN for subsequent calls, such as lifecycle events.
        format: String, max length 32 characters
      dateTimeOfEvent:
        type: string
        example: "2020-07-17T22:08:16.000Z"
        description: Event date/timestamp in GMT.
        format: String; yyyy-MM-ddTHH:mm:ss.SSSZ.
      updateReferenceID:
        type: string
        example: UPDATE_ACCOUNT_LEVEL_RECORD
        description: Reference ID that is needed to track all account level updates. This field is required if the operation reason code is UPDATE_ACCOUNT_LEVEL_RECORD.
        format: String; max length 32 characters.
      encryptedData:
        type: string
        example: <JWS> encryptedData
        format: String; max length 7000 characters.
  deviceBindingRequest:
    required: 
    - tokenInfo
    - panReferenceID
    - lastName
    - walletAccountEmailAddressHash
    - panSource
    - encryptedData
    type: object
    properties:
      panReferenceID”:
        type: string
        example: boz...v1
        format: String, max length 32 characters.
      walletAccountEmailAddressHash:
        type: string
        example: 1234
        format: Alphabetic, numeric, hyphens ( - ),and underscores
      clientWalletAccountID:
        type: string
        example: 1234
        format: String; max length 32 characters.
      locale:
        type: string
        example: en_US
        format: String; ISO format for language (ISO 639- 1) and alpha-2 country code (ISO 3166-1 alpha-2); max length 5 characters.
      deviceInfo:
        $ref: '#/definitions/bindingDeviceInfo'
  bindingDeviceInfo:
    type: object
    properties:
      deviceID:
        type: string
        example: 3e8...62
        maxLength: 24
      deviceLanguageCode:
        type: string
        example: 3e8...62
        maxLength: 24  
      osType:
        type: string
        example: Android
        description: |-
          It is one of the following values:
            • ANDROID
            • IOS
            • WINDOWS
            • BLACKBERRY
            • TIZEN
            • OTHER
      osVersion:
        type: string
        example: 4.4.4
        maxLength: 32
        description: Numeric, period ( . ); maximum 32
                    characters.
      osBuildID:
        type: string
        example: KTU84M
        maxLength: 32
      deviceType:
        type: string
        example: WATCH
        description: |-
          It is one of the following values:
            • PHONE
            • TABLET
            • PHONE_TABLET
            • PC
            • WATCH
            • TV
            • WEARABLE_DEVICE
            • AUTOMOBILE_DEVICE

      deviceIDType:
        type: string
        example: TEE
        description: |-
          It is one of the following values:
            • SecureElement
            • TEE
            • Derived
      deviceManufacturer:
        type: string
        example: Samsung
        maxLength: 32
      deviceModel:
        type: string
        example: ANDROID-999
        maxLength: 32
      deviceName:
        type: string
        example: TXlXYXRjaA
        maxLength: 256
      deviceNumber:
        type: integer
        example: 6505551212
        maxLength: 32
      deviceLocation:
        type: string
        example: Samsung
        maxLength: 32
      deviceIPAddressV4:
        type: string
        example: ANDROID-999
        maxLength: 32
      locationSource:
        type: string
        example: TXlXYXRjaA
        maxLength: 256
      deviceInder:
        type: integer
        example: 1
        description: The index number from Visa where the deviceID is stored. This is required for token device binding.
        maxLength: 2
  checkEligibilityRequest:
    required: 
    - lifeCycleTraceID
    - panSource
    - encryptedData
    type: object
    properties:
      tokenRequestorID:
        type: string
        example: TOKEN_DEVICE_BINDING_RESULT
        description: (Conditional) Unique ID assigned to the initiator of the token request.
        format: Numeric; max length 11 digits.String, max length 32 characters.
      tokenReferenceID:
        type: string
        example: boz...v1
        description: Unique ID for the token associated with the PAN. This ID can be used in lieu of the token for subsequent calls, such as lifecycle events
        format: String, max length 32 characters
      panReferenceID:
        type: string
        example: boz...v1
        description: Unique ID for the PAN. This ID can be used in lieu of PAN for subsequent calls, such as lifecycle events.
        format: String, max length 32 characters
      panSource:
        type: string
        example: CONTACTLESS_TAP
        format: It is one of the following values-
          • KEY_ENTERED
          • ON_FILE
          • MOBILE_BANKING_APP
          • TOKEN
          • CHIP_DIP
          • CONTACTLESS_TAP       
      deviceInfo:
        $ref: '#/definitions/eligibilityDeviceInfo'
        description: It is one of the following values, if populated
          • deviceID
          • deviceLanguageCode.
      encryptedData:
        type: string
        example: <JWS> encryptedData
        description: Blob field that contains the encrypted payload; see “Encrypted Data Payload” for more information.
        format: String; max length 7000 characters.   
  eligibilityDeviceInfo:
    type: object
    properties:
      deviceID:
        type: string
        example: 3e8...62
        maxLength: 24
        
  checkEligibilityResponse:
    type: object
    properties:
      cardMetadataInfo:
        $ref: '#/definitions/eligibilityMetadataInfo'
  eligibilityMetadataInfo:
    type: object
    properties:
      foregroundColor:
        type: string
        example: rgb(255,122,235)
        description: Foreground color of the Digital Wallet entry for the card. Specified as a CSS style RGB triple. This value is optional in this API because the issuer may pre-configure this value via Visa CardArt Management (VCMM).
        format: String; max length 32 characters  
      backgroundColor:
        type: string
        example: rgb(255,122,235)
        description: Background color of the Digital Wallet entry for the card. Specified as a CSS style RGB triple. This value is optional in this API because the issuer may pre-configure this value via Visa CardArt Management (VCMM).
        format: String; max length 32 characters   
      labelColor:
        type: string
        example: rgb(255,122,235)
        description: Label color of the Digital Wallet entry for the card. Specified as a CSS style RGB triple. This value is optional in this API because the issuer may pre-configure this value via Visa CardArt Management (VCMM).
        format: String; max length 32 characters         
      shortDescription::
        type: string
        example: The Bank Card
        description: A short description of the card. May be used with lock-screen notifications.
        format: String; max length 32 characters   
      longDescription::
        type: string
        example: The Bank Signature Rewards Card
        description: A short description of the card. May be used with lock-screen notifications.
        format: String; max length 64 characters 
      cardIssuer::
        type: string
        example: Card issuer name
        description: Card issuer name.
        format: String; max length 128 characters. 
      cardArtData:
        $ref: '#/definitions/eligibilitycardArtInfo'
      termsAndConditionsID:
        type: string
        example: https://www.visatest.com
        format: Valid URL; maximum 128 characters.
      contactInfo:
        $ref: '#/definitions/eligibilitycontactInfo'
      applicationInfo:
        $ref: '#/definitions/eligibilityApplicationInfo'
  eligibilitycardArtInfo:
    type: object
    properties:
      cardArtRefID:
        type: array
        items:
          type: string
          example: "Ak0  jk0"
  eligibilitycontactInfo:
    type: object
    properties:
      contactWebsite:
        type: string
        example: https://www.visatest.com
        description: Customer Service website of the issuing bank.
        format: String; max length 128 characters.
      contactNumber:
        type: string
        example: 800-000-0000
        description: Customer Service phone number of the issuing bank.
        format: String; max length 32 characters..
      contactEmail:
        type: string
        example: test@visa.com
        description: Customer Service email of the issuing bank.
        format: String; max length 32 characters.
      contactName:
        type: string
        example: xyz bank
        description: Name of the issuing bank. It may be used in combination with other text strings..
        format: String; max length 32 characters.
  eligibilityApplicationInfo:
    type: object
    properties:
      supportsTokenNotifications:
        type: string
        example: true
        description: Indicates whether the card supports token notifications for transactions originating on the device.
        format: It is one of the following values-
          • true
          • false
  getCVMethodRequest:
    required: 
    - tokenRequestorID
    - lifeCycleTraceID
    - panSource
    - otpReason
    - encryptedData
    type: object
    properties:
      tokenRequestorID:
        type: string
        example: TOKEN_DEVICE_BINDING_RESULT
        description: (Conditional) Unique ID assigned to the initiator of the token request.
        format: Numeric; max length 11 digits.
      tokenReferenceID:
        type: string
        example: boz...v1
        description: Unique ID for the token associated with the PAN. This ID can be used in lieu of the token for subsequent calls, such as lifecycle events
        format: String, max length 32 characters
      panReferenceID:
        type: string
        example: boz...v1
        description: Unique clientWalletAccountIDID for the PAN. This ID can be used in lieu of PAN for subsequent calls, such as lifecycle events.
        format: String, max length 32 characters
      clientWalletAccountID:
        type: string
        example: AiO...I6
        description: Identifies a wallet account identifier of the wallet provider. For SE DWPs, this will be the truncated email hash, truncated to 32 characters. For other wallet providers, it will be their identifier of a wallet account with maximum length of 24 
        format: String; alphanumeric, case-insensitive, max length 32 characters
      panSource:
        type: string
        example: CONTACTLESS_TAP
        format: It is one of the following values-
          • KEY_ENTERED
          • ON_FILE
          • MOBILE_BANKING_APP
          • TOKEN
          • CHIP_DIP
          • CONTACTLESS_TAP
      otpReason:
        type: string
        example: TOKEN_DEVICE_BINDING,
        description: Reason for an OTP..
        format: It is one of the following values-
          • PROVISIONING
          • FPAN_NOTIFICATIONS
          • PAYMENT
          • TOKEN_DEVICE_BINDING
          • CARDHOLDER_STEPUP
          • TRUSTED_LISTING_ENROLLMENT
      otpMaxReached:
        type: string
        example: true
        description: Describes whether the Token has exceeded the number of OTP requests and is therefore no longer a supported method for that token. This does not apply to the payment flow.
        format: It is one of the following values-
          • true
          • false 
      encryptedData:
        type: string
        example: <JWS> encryptedData
        description: Blob field that contains the encrypted payload; see “Encrypted Data Payload” for more information.
        format: String; max length 7000 characters. 
      deviceInfo:
        $ref: '#/definitions/getCVDeviceInfo'
  getCVDeviceInfo:
    type: object
    properties:
      deviceID:
        type: string
        example: ANDROID-999
        description: For Secure Element (SE) wallet providers, this value will be the SE ID in hex binary characters transformed to a 48-character string. For Host Card Emulation (HCE) wallet providers, this field will be the Device ID as determined by thedigital wallet provider (DWP). All alphanumeric and special characters are allowed for HCE DWPs.
        format: String; max length 48 characters.
      deviceType:
        type: string
        example: WATCH
        description: |-
          It is one of the following values:
            • PHONE
            • TABLET
            • PHONE_TABLET
            • PC
            • WATCH
            • TV
            • WEARABLE_DEVICE
            • AUTOMOBILE_DEVICE
      deviceName:
        type: string
        example: TXlXYXRjaA
        description: readable name for the device. Ideally, the customer enters this name. It can be used toidentify the device in customer support calls
        format: String; Base64URL-encoded; UTF-8; max length 128 characters.        
      deviceNumber:
        type: integer
        example: 6505551212
        format: String; max length 13 characters.
      deviceIndex:
        type: integer
        example: 9
        description: The index number from Visa where the deviceID
          is stored. This is required for token device binding.
        format: Integer; max length 2 digits.
  getCVMethodResponse:
    type: object
    properties:
      responseCode:
        type: string
        example: APPROVED
        description: This value is present when the otpReason field is TOKEN_DEVICE_BINDING, CARDHOLDER_STEPUP, or TRUSTED_LISTING_ENROLLMENT.This field is not present if the issuer is onboardedfor Device Token Binding Request API or 0100 DBRand has provided the response in that API..
        format: It is one of the following values-
          • APPROVED
          • STEPUP
          • DECLINED
      stepUpMethods:
        type: array
        items:
          type: string
          $ref: '#/definitions/stepUpmethod'
        format: An array of Step Up Methods Details structures; max 10 structures.
  stepUpmethod:
    type: object
    properties:
      type:
        type: string
        example: OTPSMS
        description: |-
          It is one of the following values:
          • OTPSMS
          • OTPEMAIL
          • APP_TO_APP
          • CUSTOMERSERVICE
          • OUTBOUNDCALL
        format: String; alphanumeric; max length 32 characters.
      value:
        type: string
        example: device Name test
        description: Present if a cardholder verification method is returned. Masked values for consumer contact information. Unmasked phone numbers for nonconsumer numbers; “user-friendly” description for mobile banking app
        format: String; max length 64 characters.
      identifier:
        type: string
        example: TXlXYXRjaA
        description: Present if a cardholder verification method is returned. Unique and opaque identifier for this method. This ID should be provided by the issuer. The issuer must maintain the association of this identifier with the value of the Cardholder Verification Method (for example, email address). A subsequent Send Passcode request will only provide the Identifier to the issuer, not the actual contact method value.
        format: String; max length 32 characters.       
      sourceAddress:
        type: integer
        example: "https://otpsms.sms"
        description: Indicates the source address from which the OTP is sent.
        format: String; alphanumeric; max length 64 characters.
  sendPasscodeRequest:
    required: 
    - tokenRequestorID
    - lifeCycleTraceID
    - otpMethodIdentifier
    - otpValue
    - encryptedData
    type: object
    properties:
      tokenRequestorID:
        type: string
        example: TOKEN_DEVICE_BINDING_RESULT
        description: (Conditional) Unique ID assigned to the initiator of the token request.
        format: Numeric; max length 11 digits.
      tokenReferenceID:
        type: string
        example: boz...v1
        description: Unique ID for the token associated with the PAN. This ID can be used in lieu of the token for subsequent calls, such as lifecycle events
        format: String, max length 32 characters
      panReferenceID:
        type: string
        example: boz...v1
        description: Unique clientWalletAccountIDID for the PAN. This ID can be used in lieu of PAN for subsequent calls, such as lifecycle events.
        format: String, max length 32 characters
      clientWalletAccountID:
        type: string
        example: AiO...I6
        description: Identifies a wallet account identifier of the wallet provider. For SE DWPs, this will be the truncated email hash, truncated to 32 characters. For other wallet providers, it will be their identifier of a wallet account with maximum length of 24 
        format: String; alphanumeric, case-insensitive, max length 32 characters
      otpMethodIdentifier:
        type: string
        example: TOKEN_DEVICE_BINDING,
        description: Reason for an OTP..
        format: It is one of the following values-
          • PROVISIONING
          • FPAN_NOTIFICATIONS
          • PAYMENT
          • TOKEN_DEVICE_BINDING
          • CARDHOLDER_STEPUP
          • TRUSTED_LISTING_ENROLLMENT
      otpValue:
        type: string
        example: true
        description: Describes whether the Token has exceeded the number of OTP requests and is therefore no longer a supported method for that token. This does not apply to the payment flow.
        format: It is one of the following values-
          • true
          • false 
      otpExpirationDate:
        type: string
        example: true
        description: Describes whether the Token has exceeded the number of OTP requests and is therefore no longer a supported method for that token. This does not apply to the payment flow.
        format: It is one of the following values-
          • true
          • false 
      encryptedData:
        type: string
        example: <JWS> encryptedData
        description: Blob field that contains the encrypted payload; see “Encrypted Data Payload” for more information.
        format: String; max length 7000 characters. 
      deviceInfo:
        $ref: '#/definitions/getCVDeviceInfo'
        
  updateCardMetadataResponse:
    type: object
    properties:
      responseDetails:
        type: array
        items:
          type: string
          $ref: '#/definitions/updateCardMetadataResponseDetails'

  updateCardMetadataResponseDetails:
    type: object
    properties:
      taskID:
        type: string
        example: OTPSMS
        description: GUID, with hyphens allowed. The issuer needs to store this for future references. This value is present when Action Code is PENDING
        format: String, [A-Z][a-z][0-9], with hyphens (-) allowed; max length 36 characters.
      tokenReferenceID:
        type: string
        example: device Name test
        description: Unique ID for the token associated with the PAN.
          This can be used in lieu of the token for subsequent calls, such as lifecycle events
        format: String; max length 32 characters..
      tokenRequestorID:
        type: integer
        example: 325325
        description: Unique ID assigned to the initiator of the token
            request
        format: Numeric; max length 11 digits..       
      statusCode:
        type: string
        example: "PENDING"
        description: Action status codes..
        format: It is one of the following values-
          • PENDING
          • FAILURE
          • NOT_ALLOWED.
  updateCardMetadataRequest:
    required: 
    - operationReason
    - cardMetadataInfo
    - encryptedData
    - operatorID
    type: object
    properties:
      encryptedData:
        type: string
        example: <JWS> encryptedData
        description: Blob field that contains the encrypted payload; see “Encrypted Data Payload” for more information.
        format: String; max length 7000 characters.
      operatorID:
        type: string
        example: "Operator1"
        description: Operator ID of either the person or system that is performing the operation
        format: String, max length 16 characters.
      operationReason:
        type: string
        example: "OperationResearch"
        description: Reason for operation. Free form. The reason should be descriptive, such that if the issuer performs an action and the consumer calls DWP Customer Support, they should be able to read the reason, advise the consumer, and act accordingly. For example, if the token is suspended, the Request Reason could say “Suspended due to lost device”
        format: String; max length 254 characters..
      cardMetadataInfo:
        $ref: '#/definitions/updateCardMetadataInfo'
  updateCardMetadataInfo:
    type: object
    properties:
      foregroundColor:
        type: string
        example: rgb(255,122,235)
        description: Foreground color of the Digital Wallet entry for the card. Specified as a CSS style RGB triple. This value is optional in this API because the issuer may pre-configure this value via Visa CardArt Management (VCMM).
        format: String; max length 32 characters  
      backgroundColor:
        type: string
        example: rgb(255,122,235)
        description: Background color of the Digital Wallet entry for the card. Specified as a CSS style RGB triple. This value is optional in this API because the issuer may pre-configure this value via Visa CardArt Management (VCMM).
        format: String; max length 32 characters   
      labelColor:
        type: string
        example: rgb(255,122,235)
        description: Label color of the Digital Wallet entry for the card. Specified as a CSS style RGB triple. This value is optional in this API because the issuer may pre-configure this value via Visa CardArt Management (VCMM).
        format: String; max length 32 characters         
      shortDescription::
        type: string
        example: The Bank Card
        description: A short description of the card. May be used with lock-screen notifications.
        format: String; max length 32 characters   
      longDescription::
        type: string
        example: The Bank Signature Rewards Card
        description: A short description of the card. May be used with lock-screen notifications.
        format: String; max length 64 characters 
      cardIssuer::
        type: string
        example: Card issuer name
        description: Card issuer name.
        format: String; max length 128 characters. 
      cardArtData:
        $ref: '#/definitions/updateCardMetadatacardArtInfo'
      privacyPolicyURL:
        type: string
        example: https://www.visatest.com
        format: Valid URL; maximum 128 characters.
      termsAndConditionsID:
        type: string
        example: https://www.visatest.com
        format: Valid URL; maximum 128 characters.
      contactInfo:
        $ref: '#/definitions/updateCardMetadatacontactInfo'
      applicationInfo:
        $ref: '#/definitions/updateCardMetadataApplicationInfo'
  updateCardMetadatacardArtInfo:
    type: object
    properties:
      cardArtRefID:
        type: array
        items:
          type: string
          example: "Ak0  jk0"
  updateCardMetadatacontactInfo:
    type: object
    properties:
      contactWebsite:
        type: string
        example: https://www.visatest.com
        description: Customer Service website of the issuing bank.
        format: String; max length 128 characters.
      contactNumber:
        type: string
        example: 800-000-0000
        description: Customer Service phone number of the issuing bank.
        format: String; max length 32 characters..
      contactEmail:
        type: string
        example: test@visa.com
        description: Customer Service email of the issuing bank.
        format: String; max length 32 characters.
      contactName:
        type: string
        example: xyz bank
        description: Name of the issuing bank. It may be used in combination with other text strings..
        format: String; max length 32 characters.
  updateCardMetadataApplicationInfo:
    type: object
    properties:
      supportsTokenNotifications:
        type: string
        example: true
        description: Indicates whether the card supports token notifications for transactions originating on the device.
        format: It is one of the following values-
          • true
          • false
      supportsFPANNotifications:
        type: string
        example: true
        description: Indicates whether the card supports FPAN notifications for all transactions that point back to the FPAN. Not applicable for Check Eligibility; only available for Update Card Metadata
        format: It is one of the following values-
          • true
          • false
      transactionServiceURL:
        type: string
        example: true
        description: Transaction history URL (Transaction Details) of the issuer’s web service. Not applicable for Check Eligibility; only available for Update Card Metadata.
        format: String; max length 128 characters.
      messageServiceURL:
        type: string
        example: true
        description: URL of the message/offer web service that conforms to the API as described to PNOs and issuers in the Card Notification Services API Specification. Not applicable for Check Eligibility; only available for Update Card Metadata.
        format: String; max length 32 characters.
  metadataUpdatenotificationRequest:
    type: object
    properties:
      taskID:
        type: string
        example: OTPSMS
        description: GUID, with hyphens allowed. The issuer needs to store this for future references. 
        format: String, [A-Z][a-z][0-9], with hyphens (-) allowed; max length 36 characters.
      statusCode:
        type: string
        example: "PENDING"
        description: Action status codes..
        format: It is one of the following values-
          • SUCCESS
          • FAILURE
      errorCode:
        type: string
        example: VSE40001.
        description: This is present for business error codes VSEXXXXX.
        format: String; max length 8 characters.
        
  retrieveNHPPParticipantsRequest:
    type: object
    properties:
      encryptedData:
        type: string
        example: "<JWS>"
        description: Blob field that represents the encrypted payload; see “Encrypted Data Payload” for more information. Only primaryAccountNumber needs to be provided.. 
        format: String; max length 7000 characters.
  retrieveNHPPParticipantsResponse:
    type: object
    properties:
      nhppProfiles:
        type: array
        items:
          type: string
          $ref: '#/definitions/nhppProfilesResponseDetails'
  nhppProfilesResponseDetails:
    type: object
    properties:
      displayName:
        type: string
        example: OTPSMS
        description: Application name/brand name displayed in the issuer application.
        format: String; max length 100 characters.
      clientID:
        type: string
        example: device Name test
        description: Unique ID that identifies the client entity.
        format: String; max length 36 characters.
      tokenRequestorID:
        type: integer
        example: 325325
        description: Unique ID that identifies the entity for which the token request is being conducted on behalf of(OBO).
        format: Numeric; max length 11 digits..       
      tokenTypes:
        items:
           type: string
           enum: ["SECURE_ELEMENT", 
              "HCE", 
              "CARD_ON_FILE",
              "ECOMMERCE",
              "QRC" ]
      logoURL:   
        type: integer
        example: 325325
        description: Content URI.
        format: String; Base64URL-encoding, hyphens (-), and underscores (_) are allowed to replace plus signs (+), and forward slashes (/); max length 1024 characters.
      supportedPlatforms:
        items:
          $ref: '#/definitions/supportedPlatformsDetails'
      supportedCardTypes:
        items:
           type: string
           enum: ["VISA", "MASTERCARD"] 
  supportedPlatformsDetails:
    type: object
    properties:
      platformType:
        type: string
        example: ANDROID
        description: The platform type this URL was configured for
        format: It is one of the following values-
          • IOS
          • ANDROID
          • WEB
          • WINDOWS
          • VISA_AS_HOP
      accountBindingMode:
        items:
           type: string
           enum: ["POST_BINDING"]
        description: Indicates if this URI can be invoked for up-front or post-provisioning account binding.
        format: It is one of the following values-
          • POST_BINDING
  pushCardEnrollmentToWalletRequest:
    type: object
    properties:
      encryptedData:
        type: string
        example: "<JWS>"
        description: Blob field that represents the encrypted payload; see “Encrypted Data Payload” for more information. Only primaryAccountNumber needs to be provided.
        format: String; max length 7000 characters.
  pushProvisioningStatusNotificationRequest:
    required:
    - status
    type: object
    properties:
      status:
        type: string
        example: "SUCCESS"
        description: Action status codes. Additional values may be available in the future
        format: It is one of the following values-
          • SUCCESS— Token is provisioned successfully.
          • NOTIFICATION_FAILURE— Failed to send push provision notification to the wallet provider.
          • PROVISION_FAILURE— Failed to provision the token.
      issuerTraceID:
        type: string
        example: "..."
        description: The field will help issuer to trace the VCEH session. The value of this field is initially set by issuer in JWE with issuerTraceID
        format: String; max length 32 characters.
      encryptedData:
        type: string
        example: "<JWS"
        description: Blob field that represents the encrypted payload; see “Encrypted Data Payload” for more information in Vis manual. Populated with the client info as maintained by the wallet provider
        format: String; max length 7000 characters.}
  AvailableCardsResponseData:
    type: object
    properties:
      cardSfxDataList:
        type: array
        items:
          $ref: '#/definitions/GetAvailableCardsResponseOutputDataCardSfxData'
      csNbrOccur:
        type: integer
        format: int32
    title: AvailableCardsResponseData
  CheckEligibilityRequest:
    type: object
    required:
      - lifeCycleTraceID
      - panSource
    properties:
      deviceInfo:
        type: string
        description: |-
          Device Info
          It is one of the following values, if populated:
          * deviceID
          * deviceLanguageCode
      encryptedData:
        type: string
        description: |-
          Encrypted Data
          Blob field that contains the encrypted payload; see
          “Encrypted Payload Data” for more information.
      lifeCycleTraceID:
        type: integer
        description: |-
          Life Cycle Trace ID
          A message identifier that can be used to link some
          messages associated with a provisioning request. This should be used
          by the issuer in event/message logging.
        minimum: 0
        maximum: 999999999999999
        exclusiveMinimum: false
        exclusiveMaximum: false
      panReferenceID:
        type: string
        description: |-
          Pan Reference ID
          Unique ID for the PAN. This ID can be used in lieu of PAN
          for subsequent calls, such as lifecycle events.
      panSource:
        type: string
        description: |-
          Pan Source
          It is one of the following values:
          * KEY_ENTERED
          * ON_FILE
          * MOBILE_BANKING_APP
          * TOKEN
          * CHIP_DIP
          * CONTACTLESS_TAP
      tokenReferenceID:
        type: string
        description: |-
          Token Reference ID
          Unique ID for the token associated with the PAN. This ID
          can be used in lieu of the token for subsequent calls, such as lifecycle
          events
      tokenRequestorID:
        type: integer
        description: |-
          Token Requestor ID
          Unique ID assigned to the initiator of the token request
        minimum: 0
        maximum: 99999999999
        exclusiveMinimum: false
        exclusiveMaximum: false
    title: CheckEligibilityRequest
  CheckEligibilityResponse:
    type: object
    title: CheckEligibilityResponse
  DeviceInformation:
    type: object
    properties:
      deviceBrand:
        type: string
      deviceID:
        type: string
      deviceIDType:
        type: string
      deviceIPAddressV4:
        type: string
      deviceIndex:
        type: integer
        format: int32
      deviceLanguageCode:
        type: string
      deviceLocation:
        type: string
      deviceManufacturer:
        type: string
      deviceModel:
        type: string
      deviceName:
        type: string
      deviceNumber:
        type: string
      deviceType:
        type: string
        enum:
          - UNKNOWN
          - MOBILE_PHONE
          - TABLET
          - WATCH
          - MOBILEPHONE_OR_TABLET
      locationSource:
        type: string
      osBuildID:
        type: string
      osType:
        type: string
      osVersion:
        type: string
      tokenProtectionMethod:
        type: string
        enum:
          - SOFTWARE
          - TRUSTED_EXECUTION_ENVIRONMENT
          - CLOUD
    title: DeviceInformation
  DeviceTokenBindingRequest:
    type: object
    properties:
      clientWalletAccountID:
        type: string
      deviceInfo:
        $ref: '#/definitions/DeviceInformation'
      locale:
        type: string
      merchantInfo:
        $ref: '#/definitions/MerchantInformation'
      panReferenceId:
        type: string
      tokenUserInfo:
        $ref: '#/definitions/TokenUserInformation'
      walletAccountEmailAddressHash:
        type: string
    title: DeviceTokenBindingRequest
  DeviceTokenBindingResponse:
    type: object
    title: DeviceTokenBindingResponse
  GetAvailableCardsRequest:
    type: object
    required:
      - customerNumber
      - keyAssoc
      - walletId
    properties:
      cardSuffix:
        type: string
        description: |
          Card Suffix
          if spaces, considered as GetAvailableCards and retrieve last 4 bytes of cards that are yet to be digitized
          If not spaces, considered as GetSelectedCards and then it would be checked against the cards present under the given account. If the card number not present, then error out
      customerNumber:
        type: string
        description: |-
          Customer Number
          If Customer number not present in the system, service throws an error
      keyAssoc:
        type: string
        description: |-
          Key Assoc
          For Get select card the field is mandatory. Error message is thrown if it is spaces
      walletId:
        type: string
        description: |
          Wallet Id
          Field required for get avail cards service
          It is wallet id of the token 
    title: GetAvailableCardsRequest
  GetAvailableCardsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/AvailableCardsResponseData'
      errors:
        type: array
        items:
          $ref: '#/definitions/error'
      hasError:
        type: string
        example: false
    title: GetAvailableCardsResponse
  GetAvailableCardsResponseOutputDataCardSfxData:
    type: object
    properties:
      cardSuffix:
        type: string
      sequence:
        type: integer
        format: int32
    title: GetAvailableCardsResponseOutputDataCardSfxData
  GetSelectedCardsRequest:
    type: object
    required:
      - cardNumber
      - cardSuffix
      - keyAssoc
    properties:
      cardNumber:
        type: string
        example: 1111111111111111200
        description: Card Number
      cardSuffix:
        type: string
        example: 1111
        description: Card Suffix
      keyAssoc:
        type: string
        example: AAA
        description: Key Assoc
      walletId:
        type: string
        example: AAA
        description: Wallet Id
    title: GetSelectedCardsRequest
  GetSelectedCardsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/SelectedCardResponseData'
      errors:
        type: array
        items:
          $ref: '#/definitions/error'
      hasError:
        type: string
        example: false
    title: GetSelectedCardsResponse
  MerchantInformation:
    type: object
    properties:
      merchantID:
        type: integer
        format: int32
      merchantName:
        type: string
    title: MerchantInformation
  SelectedCardResponseData:
    type: object
    properties:
      encryptedData:
        type: string
        example: eeyy787&iu==
    title: SelectedCardResponseData
  TokenCreateNotificationRequest:
    type: object
    required:
      - clientWalletAccountID
      - dateTimeOfEvent
      - encryptedData
      - lifeCycleTraceID
      - messageReasonCode
      - panReferenceID
      - panSource
      - walletAccountEmailAddressHash
    properties:
      actionCode:
        type: string
        description: |
          Action Code
          : It is one of the following values:
          * 00— Good
          * 85— Conditional approval (provision, but do not activate until
          additional consumer verification is performed)
          * 05— Error
      addressVerificationResultCode:
        type: string
        description: |-
          Address Verification Result Code
          Visa-defined code that describes the result of an address verification.
      clientWalletAccountID:
        type: string
        description: |-
          Client Wallet Account ID
          Consumer ID that identifies the wallet Account-holder entity.
          This is provided by the client.
      consumerEntryMode:
        type: string
        description: |
          Consumer Entry Mode
          It is one of the following values:
          * KEY_ENTERED
          * CAMERA_CAPTURED
          * UNKNOWN
      cvv2ResultsCode:
        type: string
        description: |
          Cvv2 Results Code
          It is one of the following values:
          M = CVV2 Match, indicates that Visa was able to verify the CVV2 value provided by the wallet provider
          N = CVV2 No Match, indicates that Visa was not able to verify the CVV2 value provided by the wallet provider.
          P = Not processed, indicates that Visa was unable to verify the CVV2 value provided by the wallet provider. This applies for Issuers opting for CVV2 Bypass only.
          S = CVV2 should be on the card: Indicates that V.I.P. or the issuer was unable to perform CVV2 verification and notifies the merchant that the card should contain a CVV2 value.
          U = Issuer is not available, does not participate in the CVV2 Service,or participates but has not provided Visa with encryption keys: Indicates that the issuer is notparticipating in the CVV2 Service or has not provided Visa with encryption keys needed to perform verification, or that STIP has responded to an issuer-unavailable response.
      dateTimeOfEvent:
        type: string
        description: |-
          Life Cycle Trace ID
          Event date/timestamp in GMT.
      deviceInfo:
        description: Device Info
        $ref: '#/definitions/TokenCreateNotificationRequest.DeviceInfo'
      encryptedData:
        type: string
        description: |
          Encrypted Data
          Blob field that represents the encrypted payload. See the
          decrypted sample payload, which can contain Cardholder Information,
          Token Information, and Risk Information.
      lifeCycleTraceID:
        type: integer
        description: |-
          Life Cycle Trace ID
          A message identifier that can be used to link some
          messages associated with a provisioning request. This should be used
          by the issuer in event/message logging.
        minimum: 0
        maximum: 999999999999999
        exclusiveMinimum: false
        exclusiveMaximum: false
      locale:
        type: string
        example: en_US
        description: |-
          Locale
          ) Language in which the app communicates with the
          customer, based on the . The language and country should be
          separated using a “_“ 
      messageReason:
        type: string
        description: |-
          Message Reason
          A text-based description of the notification message code.
          The descriptions may change and issuers should use the Message
          Reason Code for all programmatic actions. This field is for information
          only.
      messageReasonCode:
        type: string
        example: TOKEN_CREATED
        description: |-
          Message Reason Code
          String representation of the message reason, which
          corresponds to the ISO message reason codes when applicable.
      panReferenceID:
        type: string
        description: |-
          Pan Reference ID
           Unique ID for the PAN. This ID can be used in lieu of PAN for
          subsequent calls, such as lifecycle events.
      panSource:
        type: string
        description: |-
          Pan Source
          It is one of the following values:
          * KEY_ENTERED
          * ON_FILE
          * MOBILE_BANKING_APP
          * TOKEN
          * CHIP_DIP
          * CONTACTLESS_TAP
      termsAndConditions:
        type: string
        description: |-
          Terms And Conditions
          Terms and conditions for consumer
      tokenRequestorTspID:
        type: string
        description: |-
          Token Requestor Tsp ID
          Token requestor — token service provider (TR-TSP) ID;
          provided by token service providers.
      walletAccountEmailAddressHash:
        type: string
        description: |-
          Wallet Account Email Address Hash
          Hash of the email address linked to the wallet account login ID.
    title: TokenCreateNotificationRequest
  TokenCreateNotificationRequest.DeviceInfo:
    type: object
    required:
      - locationSource
      - osType
      - tokenProtectionMethod
    properties:
      deviceBrand:
        type: string
        example: Galaxy
        description: |
          Device Brand
          Brand name of the device.
      deviceID:
        type: string
        description: |-
          Device ID
          For Secure Element (SE) wallet providers, this value will be
          the SE ID in hex binary characters transformed to a 48-character string.
          For Host Card Emulation (HCE) wallet providers, this field will be the
          Device ID as determined by the digital wallet provider (DWP). All
          alphanumeric and special characters are allowed for HCE DWPs.
          Secure Element (SE) ID represents the device ID.
          l For SE DWPs, this value will be the SE ID in hex binary characters
          transformed to a 48-character string.
          l For CBP DWPs, this field will be the device ID as determined by the
          DWP. All alphanumeric and special characters are allowed for CBP
          DWPs.
          For Card-on-File (COF) wallets, this value will not be present.
          For the initial Check Eligibility request on PAN enrollment, this value
          may not be available, however Visa will send this value if it is available.
      deviceIDType:
        type: string
        example: deviceID
        description: |
          Device ID Type
          Attribute indicating the source of the Device ID value.
      deviceIPAddressV4:
        type: string
        description: |
          deviceIPAddressV4
           The IP address of the device at the time of the provisioning
          request, with the value represented in 255.255.255.255 format. An
          octet (255) may be 1–3 digits in length but cannot contain any leading
          zeros.
      deviceIndex:
        type: integer
        format: int32
        description: |-
          deviceIndex
          The index number from Visa where the deviceID is
          stored. This is required for token device binding.
      deviceLanguageCode:
        type: string
        description: |-
          Device Language Code
          This value is any ISO 639 Version 3 Language Code, for
          example, eng (English). This language code will be used by the issuer
          and Visa to retrieve the Terms and Conditions (T&C). If T&Cs are not
          found for the Language Code in the request, the T&Cs will return the
          default :language Code of eng (English)
      deviceLocation:
        type: string
        example: +37/-121
        description: |-
          DeviceLocation
          Obfuscated geographic location of the device. Initially, when
          provisioned, this contains the general location of the device.
          Information will be supplied with latitude/longitude rounded to the
          nearest whole digit.
      deviceManufacturer:
        type: string
        example: Samsung
        description: |-
          Device Manufacturer
          Manufacturer of the device.
      deviceModel:
        type: string
        example: SGH-T999
        description: |-
          Device Model
          Model of the device.
      deviceName:
        type: string
        description: |
          Device Name
          A readable name for the device. Ideally, the customer enters
          this name. It can be used to identify the device in customer support
          calls.
      deviceNumber:
        type: string
        description: |-
          Device Number
          Device number
      deviceType:
        type: string
        description: |
          Device Type
          It is one of the following values:
          * UNKNOWN
          * MOBILE_PHONE
          * TABLET
          * WATCH
          * MOBILEPHONE_OR_TABLET
          * PC
          * HOUSEHOLD_DEVICE
          * WEARABLE_DEVICE
          * AUTOMOBILE_DEVICE
      locationSource:
        type: string
        description: |-
          Location Source
          Source used to identify consumer locationIt is one of the following values:
          * WIFI
          * CELLULAR
          * GPS
          * OTHER
      osBuildID:
        type: string
        example: KTU84M
        description: |-
          Os Build ID
          Operating system build identifier
      osType:
        type: string
        description: |-
          Device Type
          It is one of the following values:
          * ANDROID
          * IOS
          * WINDOWS
          * BLACKBERRY
          * TIZEN
          * OTHER
      osVersion:
        type: string
        example: 4.4.4
        description: |-
          Os Version
          Version of the operating system running on the device.
      tokenProtectionMethod:
        type: string
        description: |
          Token Protection Method
          Method of token protection. It is one of the following values:
          * SOFTWARE
          * TRUSTED_EXECUTION_ENVIRONMENT
          * SECURE_ELEMENT
          * CLOUD
    title: TokenCreateNotificationRequest.DeviceInfo
  TokenCreateNotificationResponse:
    type: object
    title: TokenCreateNotificationResponse
  TokenNotificationRequest:
    type: object
    properties:
      actionCode:
        type: string
      activationVerificationResult:
        type: string
      cardHolderStepUpResult:
        type: string
      dateTimeOfEvent:
        type: string
      deviceBindingResult:
        type: string
      deviceId:
        type: string
      deviceInfo:
        $ref: '#/definitions/DeviceInformation'
      encryptedData:
        type: string
      eventType:
        type: string
      lifeCycleTraceId:
        type: integer
        format: int32
      merchantInfo:
        $ref: '#/definitions/MerchantInformation'
      messageReason:
        type: string
      messageReasonCode:
        type: string
      panReferenceId:
        type: string
      tokenRequestorTspID:
        type: string
      tokenUserInfo:
        $ref: '#/definitions/TokenUserInformation'
      trustedListingResult:
        type: string
    title: TokenNotificationRequest
  TokenNotificationResponse:
    type: object
    title: TokenNotificationResponse
  TokenUserInformation:
    type: object
    properties:
      tokenUsedID:
        type: integer
        format: int32
      tokenUserAppType:
        type: string
        enum:
          - UNKNOWN
          - WEB
          - MOBILE_WEB
          - MOBILE_APP
          - MARKETPLACE
          - VOICE_APP
          - BIOMETRIC_APP
    title: TokenUserInformation
  error:
    type: object
    properties:
      code:
        type: string
      description:
        type: string
    title: error
