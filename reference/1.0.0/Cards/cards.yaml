openapi: 3.0.1
info:
  title: LATAM Issuing APIs
  description: APIs to VMX Server
  license:
    name: Apache License Version 2.0
    url: https://www.apache.org/licences/LICENSE-2.0
  version: '1.0'
  contact:
    name: API Support
    email: juan.delangel@fiserv.com
servers:
  - url: ''
    description: Generated server url
tags:
  - name: Embosser
    description: Embosser
  - name: Pin
    description: Pin
  - name: Statement
    description: Statement
  - name: Card
    description: Card
paths:
  /cards/travel:
    put:
      tags:
        - Card
      x-group-name: Card
      x-proxy-name: update Travel Indicator
      x-child-product-name: Cards
      summary: Updates cardholder travel Indicator data (travel notice)
      description: Update Travel Indicator Data
      operationId: updateTravelIndicator
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TravelUpdateRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelUpdateResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelUpdateResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelUpdateResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelUpdateResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/transfer:
    put:
      tags:
        - Card
      x-group-name: Card
      x-proxy-name: update Card transfer
      x-child-product-name: Cards
      summary: Updates Card transfer service
      description: Card Transfer Update
      operationId: transfer
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferUpdateRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferUpdateResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferUpdateResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferUpdateResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferUpdateResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/temporary-credit-limit:
    put:
      tags:
        - Card
      x-proxy-name: Temporary Credit Limit Update
      x-child-product-name: Cards
      summary: Updates the temporary credit limit for an account.
      description: Temporary Credit Limit Update
      operationId: temporaryCreditLimitUpd
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemporaryCreditLimitUpdRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemporaryCreditLimitUpdResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemporaryCreditLimitUpdResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemporaryCreditLimitUpdResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemporaryCreditLimitUpdResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/status-L8V1:
    put:
      tags:
        - Card
      x-proxy-name: Card Status Update
      x-child-product-name: Cards
      summary: Card Status Update
      description: Card Status Update Service
      operationId: updateCardStatus
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardStatusRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardStatusResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardStatusResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardStatusResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardStatusResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/spend-limits:
    put:
      tags:
        - Card
      x-proxy-name: Updates the spending limit fields on a Card
      x-child-product-name: Cards
      summary: Update spending limits
      description: Updates the spending limit fields on a Card
      operationId: detailsForSpendingLimits
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardsDetailsForSpendLimitsRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardsDetailsForSpendLimitsResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardsDetailsForSpendLimitsResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardsDetailsForSpendLimitsResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardsDetailsForSpendLimitsResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/spend-limits-L8V3:
    put:
      tags:
        - Card
      x-proxy-name: Spending limits update
      x-child-product-name: Cards
      summary: Spending limits update
      description: |-
        Card Spending Limits Update Service enables a user to update the spending limit fields
        for a card.
      operationId: detailsForSpendingLimitsL8v3Response
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpendLimitsL8V3Request'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpendLimitsL8V3Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpendLimitsL8V3Response'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpendLimitsL8V3Response'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpendLimitsL8V3Response'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/pin/status:
    put:
      tags:
        - Pin
      x-proxy-name: PIN Block/Unblock Function
      x-child-product-name: Cards
      summary: Blocks and unblocks the PIN on a card
      description: PIN Block/Unblock Function
      operationId: updatePinStatus
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinBlockUpdateRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinBlockUpdateResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinBlockUpdateResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinBlockUpdateResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinBlockUpdateResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/pin/pin-change:
    put:
      tags:
        - Pin
      x-proxy-name: Change the PIN of a Card
      x-child-product-name: Cards
      summary: Manages actions on PIN for both magnetic stripe and chip-based prepaid cards
      description: Change the PIN of a Card
      operationId: pinChange
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinChangeRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinChangeResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinChangeResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinChangeResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinChangeResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/pin/:
    put:
      tags:
        - Pin
      x-proxy-name: Update the PIN of a Card
      x-child-product-name: Cards
      summary: Updates the PIN offset field for PIN change requests, initiated from the card host system or from external channels
      description: Update the PIN of a Card
      operationId: pinReassignment
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinReassignmentRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinReassignmentResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinReassignmentResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinReassignmentResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinReassignmentResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/global-card-activation:
    put:
      tags:
        - Card
      x-proxy-name: Global Card Activation Update
      x-child-product-name: Cards
      summary: Global Card Activation Update
      description: Global Card Activation Update Service
      operationId: globalCardActivation
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalCardActivationRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalCardActivationResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalCardActivationResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalCardActivationResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalCardActivationResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/embosser/cardAction:
    put:
      tags:
        - Embosser
      x-proxy-name: Card Action Update
      x-child-product-name: Cards
      summary: Card Action Update
      description: Enables a user to update the card action field on the embosser record with all possible user available actions.
      operationId: cardActionUpdate
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbosserCardActionRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbosserCardActionResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbosserCardActionResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbosserCardActionResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbosserCardActionResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/embosser/cardAction-L8V2:
    put:
      tags:
        - Embosser
      x-proxy-name: Card Action L8V2 Update
      x-child-product-name: Cards
      summary: Card Action Update
      description: Enables a user to update the card action field on the embosser record with all possible user available actions.
      operationId: cardActionL8V2Update
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbosserCardActionL8V2Request'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbosserCardActionL8V2Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbosserCardActionL8V2Response'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbosserCardActionL8V2Response'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbosserCardActionL8V2Response'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/embosser/block:
    put:
      tags:
        - Embosser
      x-proxy-name: Block or unblock Card
      x-child-product-name: Cards
      summary: Provides the ability to apply or remove a block code on a Card associated to an Account
      description: oBlock or unblock Card
      operationId: block
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardsDetailsForEmbosserBlockRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardsDetailsForEmbosserBlockResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardsDetailsForEmbosserBlockResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardsDetailsForEmbosserBlockResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardsDetailsForEmbosserBlockResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/embosser/:
    put:
      tags:
        - Embosser
      x-proxy-name: Update Embosser Record
      x-child-product-name: Cards
      summary: Update Embosser Record
      description: Update An Embosser Record
      operationId: updateEmbosserRecord
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmbosserRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEmbosserResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEmbosserResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEmbosserResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEmbosserResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
    post:
      tags:
        - Embosser
      x-proxy-name: Add An Embosser Record
      x-child-product-name: Cards
      summary: Add An Embosser Record
      description: Add An Embosser Record From An External Source
      operationId: addEmbosserL8V8
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddEmbosserRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddEmbosserResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddEmbosserResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddEmbosserResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddEmbosserResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/embosser/L8V3/:
    put:
      tags:
        - Embosser
      x-proxy-name: Update Embosser L8V3 Record
      x-child-product-name: Cards
      summary: Update Embosser Record
      description: Update An Embosser Record version L8V3
      operationId: updateEmbosserL8V3Record
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmbosserL8V3Request'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEmbosserL8V3Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEmbosserL8V3Response'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEmbosserL8V3Response'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEmbosserL8V3Response'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/credit-limit:
    put:
      tags:
        - Card
      x-proxy-name: Credit Limit Update
      x-child-product-name: Cards
      summary: Credit Limit Update
      description: Update Credit Limit Field
      operationId: updateCreditLimit
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditLimitUpdateRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditLimitUpdateResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditLimitUpdateResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditLimitUpdateResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditLimitUpdateResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/activation:
    put:
      tags:
        - Card
      x-proxy-name: Card Activation
      x-child-product-name: Cards
      summary: Updates Card activation service
      description: Activate Card
      operationId: activation
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardActivationRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardActivationResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardActivationResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardActivationResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardActivationResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/statement-detail:
    post:
      tags:
        - Statement
      x-proxy-name: Statement Details
      x-child-product-name: Cards
      summary: Provides detailed information for the last statement produced for an Account
      description: Statement Details
      operationId: statementDetail
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatementInquiryRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementInquiryResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementInquiryResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementInquiryResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementInquiryResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/statement-detail/date:
    post:
      tags:
        - Statement
      x-proxy-name: Statement details by date
      x-child-product-name: Cards
      summary: Provides transaction detail information for current billing cycle transactions or invoiced transactions within a date range
      description: Statement details by date
      operationId: statementDetailByDate
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatementDateInquiryRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementDateInquiryResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementDateInquiryResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementDateInquiryResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementDateInquiryResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/pin/validation:
    post:
      tags:
        - Pin
      x-proxy-name: Pin Validate
      x-child-product-name: Cards
      summary: Pin Validate
      description: Enables a user to validate the current PIN
      operationId: pinValidate
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinValidateRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinValidateResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinValidateResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinValidateResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinValidateResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/pin/security-codes:
    post:
      tags:
        - Pin
      x-proxy-name: Security Code Details
      x-child-product-name: Cards
      summary: Provides security values
      description: Provides security values CVV, CVV2, iCVV and PIN block for a card number
      operationId: securityCodeDetails
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityCodeDetailsRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityCodeDetailsResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityCodeDetailsResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityCodeDetailsResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityCodeDetailsResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/pin/invalid-attempts:
    post:
      tags:
        - Pin
      x-proxy-name: Inquire invalid PIN attempts
      x-child-product-name: Cards
      summary: Inquire invalid PIN attempts
      description: Inquire the number of invalid PIN attempts for a card and whether it is blocked or not
      operationId: inquireInvalidPinAttempts
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvalidPinAttemptsInquiryRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPinAttemptsInquiryResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPinAttemptsInquiryResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPinAttemptsInquiryResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPinAttemptsInquiryResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/pin/dynamic-values:
    post:
      tags:
        - Pin
      x-proxy-name: Dynamic Values
      x-child-product-name: Cards
      summary: Dynamic Values
      description: Enables a user to get dynamic CVV2/CVC2
      operationId: dynamicValues
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynamicValuesRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicValuesResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicValuesResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicValuesResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicValuesResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/mass-card-issue:
    get:
      tags:
        - Card
      x-proxy-name: Mass Card Reissue information
      x-child-product-name: Cards
      summary: Find Mass Card Reissue information
      description: Find Mass Card Reissue information
      operationId: massCardReissueDetailsResponse
      parameters:
        - name: organizationNumber
          in: query
          description: Organization Number
          required: true
          schema:
            maximum: 999
            minimum: 1
            type: string
          example: '950'
        - name: logo
          in: query
          description: logo
          required: true
          schema:
            type: integer
            format: int32
          example: 50
        - name: serviceType
          in: query
          description: serviceType
          required: true
          schema:
            type: integer
            format: int32
          example: 00
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MassCardReissueDetailsResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MassCardReissueDetailsResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MassCardReissueDetailsResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MassCardReissueDetailsResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
    post:
      tags:
        - Card
      x-proxy-name: Mass Card Issue Update
      x-child-product-name: Cards
      description: Mass Card Issue Update
      operationId: massCardIssueAdd
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MassCardIssueAddRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MassCardIssueAddResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MassCardIssueAddResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MassCardIssueAddResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MassCardIssueAddResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/mass-card-issue-L8V3:
    get:
      tags:
        - Card
      x-proxy-name: Mass Card Reissue information
      x-child-product-name: Cards
      summary: Find Mass Card Reissue information
      description: Find Mass Card Reissue information
      operationId: massCardReissueDetailsResponseL8V3
      parameters:
        - name: organizationNumber
          in: query
          description: Organization Number
          required: true
          schema:
            maximum: 999
            minimum: 1
            type: string
          example: '950'
        - name: logo
          in: query
          description: logo
          required: true
          schema:
            type: integer
            format: int32
          example: 50
        - name: serviceType
          in: query
          description: serviceType
          required: true
          schema:
            type: integer
            format: int32
          example: 00
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MassCardReissueDetailsResponseL8V3'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MassCardReissueDetailsResponseL8V3'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MassCardReissueDetailsResponseL8V3'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MassCardReissueDetailsResponseL8V3'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
    post:
      tags:
        - Card
      x-proxy-name: Mass Card Issue Update
      x-child-product-name: Cards
      description: Mass Card Issue Update
      operationId: massCardIssueAddL8v3
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MassCardIssueAddRequestL8v3'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MassCardIssueAddResponseL8v3'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MassCardIssueAddResponseL8v3'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MassCardIssueAddResponseL8v3'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MassCardIssueAddResponseL8v3'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/instant-card-L8V7:
    post:
      tags:
        - Card
      x-proxy-name: Instant card add L8V7
      x-child-product-name: Cards
      summary: Instant account and digital or physical card addition
      description: Add an account and digital or physical card
      operationId: instantCardAddL8V7
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstantCardAddL8V7Request'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstantCardAddL8V7Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstantCardAddL8V7Response'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstantCardAddL8V7Response'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstantCardAddL8V7Response'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/embosser/sameDay:
    post:
      tags:
        - Embosser
      x-proxy-name: Same day plastic add/update
      x-child-product-name: Cards
      summary: Same day plastic add/update
      description: Allows a user to add or update same day plastic requests.
      operationId: sameDayAdd
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SameDayEmbossingAddRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SameDayEmbossingAddResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SameDayEmbossingAddResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SameDayEmbossingAddResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SameDayEmbossingAddResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/embosser/l8vf:
    post:
      tags:
        - Embosser
      x-proxy-name: Add An Embosser Record (L8VF)
      x-child-product-name: Cards
      summary: Add An Embosser Record (L8VF)
      description: Add An Embosser Record From An External Source (version L8VF)
      operationId: addEmbosserL8VF
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddEmbosserL8VFRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddEmbosserL8VFResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddEmbosserL8VFResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddEmbosserL8VFResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddEmbosserL8VFResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/embosser/l8vd:
    post:
      tags:
        - Embosser
      x-proxy-name: Add An Embosser Record L8VD
      x-child-product-name: Cards
      summary: Add An Embosser Record
      description: Add An Embosser Record From An External Source
      operationId: addEmbosserL8VD
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddEmbosserL8VDRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddEmbosserL8VDResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddEmbosserL8VDResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddEmbosserL8VDResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddEmbosserL8VDResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/embosser/inquiry:
    post:
      tags:
        - Embosser
      x-proxy-name: Embosser- Details Inquiry
      x-child-product-name: Cards
      summary: Data from the Embosser record
      description: 'Provides The Embosser Data From The Embosser Record (AMED) As Displayed Online On The ARME Screens '
      operationId: embosserDetailsInquiry
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbosserDetailsInquiryRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbosserDetailsInquiryResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbosserDetailsInquiryResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbosserDetailsInquiryResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbosserDetailsInquiryResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/embosser/encrypted-card-pan:
    post:
      tags:
        - Embosser
      x-proxy-name: Encrypted Card Pan
      x-child-product-name: Cards
      summary: Encrypted Card Pan
      description: The endpoint provides encrypted Card Pan
      operationId: encryptedCardPan
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncryptedCardPanRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncryptedCardPanResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncryptedCardPanResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncryptedCardPanResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncryptedCardPanResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/embosser/details:
    post:
      tags:
        - Embosser
      x-proxy-name: Embosser Details
      x-child-product-name: Cards
      summary: Data from the Embosser record
      description: 'Provides The Embosser Data From The Embosser Record (AMED) As Displayed Online On The ARME Screens '
      operationId: embosserDetails
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbosserDetailsRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbosserDetailsResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbosserDetailsResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbosserDetailsResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbosserDetailsResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/embosser/details-L8VC:
    post:
      tags:
        - Embosser
      x-proxy-name: Embosser L8VC Details
      x-child-product-name: Cards
      summary: Data from the Embosser record
      description: 'Provides the embosser data from the embosser record (AMED) as displayed online on the ARME screens '
      operationId: embosserL8VCDetails
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbosserDetailsL8VCRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbosserDetailsL8VCResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbosserDetailsL8VCResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbosserDetailsL8VCResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbosserDetailsL8VCResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/embosser/details-L8VB:
    post:
      tags:
        - Embosser
      x-proxy-name: Embosser L8VB Details
      x-child-product-name: Cards
      summary: Data from the Embosser record
      description: 'Provides the embosser data from the embosser record (AMED) as displayed online on the ARME screens '
      operationId: embosserL8vbDetails
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbosserDetailsL8VBRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbosserDetailsL8VBResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbosserDetailsL8VBResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbosserDetailsL8VBResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbosserDetailsL8VBResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/embosser/card-pan:
    post:
      tags:
        - Embosser
      x-proxy-name: Card Pan Inquiry
      x-child-product-name: Cards
      summary: Card or PAN Token Inquiry
      description: 'Inquiry Card number or PAN Token '
      operationId: cardPanInquiry
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardPanInquiryRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardPanInquiryResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardPanInquiryResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardPanInquiryResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardPanInquiryResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/embosser/card-pan-l8v2:
    post:
      tags:
        - Embosser
      x-proxy-name: Card Pan Inquiry L8V2
      x-child-product-name: Cards
      summary: Card or PAN Token Inquiry
      description: 'Inquiry Card number or PAN Token '
      operationId: cardPanInquiryL8V2
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardPanInquiryL8V2Request'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardPanInquiryL8V2Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardPanInquiryL8V2Response'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardPanInquiryL8V2Response'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardPanInquiryL8V2Response'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/embosser/card-details-L8V3:
    post:
      tags:
        - Embosser
      x-proxy-name: Account to cards details L8V3
      x-child-product-name: Cards
      summary: Account to cards details L8V3
      description: Provides the card number uses the account number or the account and organization number to find it. If only the account number is provided in the service input in a dual currency processing environment, this service provides the card numbers for the local account. If the organization number is provided in the service input, this service provides the card numbers associated with that organization whether it is a local or a foreign organization.
      operationId: accountCardDetails
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountForCardDetailsL8V3Request'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountForCardDetailsL8V3Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountForCardDetailsL8V3Response'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountForCardDetailsL8V3Response'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountForCardDetailsL8V3Response'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/details:
    post:
      tags:
        - Card
      x-proxy-name: Details from a single card
      x-child-product-name: Cards
      summary: Details from a single card
      description: Provides a summary of the card and account details for the client.
      operationId: cardsDetails
      parameters:
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardsDetailsRequest'
        required: true
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardsDetailsResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardsDetailsResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardsDetailsResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardsDetailsResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
  /cards/embosser/{cardNumber}/navigational:
    get:
      tags:
        - Embosser
      x-proxy-name: Navigational Service
      x-child-product-name: Cards
      summary: Embosser Navigational Service
      description: The Embosser Navigational service is an internal service that uses the card number to find the base segment account number, customer number and relationship numbers associated with the card number.
      operationId: navigationalService
      parameters:
        - name: cardNumber
          in: path
          description: Card Number
          required: true
          schema:
            maxLength: 19
            minLength: 0
            type: string
          example: '0004010960000047972'
        - name: organizationNumber
          in: query
          description: Organization Number
          required: true
          schema:
            maximum: 999
            minimum: 1
            type: string
          example: '801'
        - name: functionType
          in: query
          description: |-
            Function type
            The value is A (retain customer/relationship number)
          required: true
          schema:
            minimum: 1
            maxLength: 1
            minLength: 1
            type: string
          example: A
        - name: X-ClientID
          in: header
          required: true
          schema:
            type: string
        - name: security-context
          in: header
          required: false
          schema:
            type: string
        - name: username
          in: header
          required: false
          schema:
            type: string
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NavigationalServiceResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NavigationalServiceResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NavigationalServiceResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NavigationalServiceResponse'
        '500':
          description: Backend Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DResponse'
components:
  schemas:
    Travel:
      type: object
      properties:
        country:
          type: string
          description: Country of travel
          example: ARG
        startDate:
          type: string
          description: Start date of travel
          format: date
          example: '2020-09-09'
        endDate:
          type: string
          description: End date of travel
          format: date
          example: '2020-10-10'
    TravelUpdateRequest:
      required:
        - cardNumber
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
        cardNumber:
          maxLength: 19
          minLength: 12
          type: string
          description: Card Number
          example: '0004513070406598974'
        cardSequence:
          type: integer
          description: Card Sequence
          format: int32
          example: 1
        foreignUseIndicator:
          type: string
          description: |-
            Foreign Use Indicator. The values are:
            Zero, space,
            low values = Local account
            1 = Foreign account
          example: '1'
        travelIndicator:
          type: integer
          description: Travel indicator
          format: int32
          example: 1
        travelIndicatorOccurrence:
          type: integer
          description: Travel indicator occurrence
          format: int32
          example: 1
        travel:
          type: array
          items:
            $ref: '#/components/schemas/Travel'
      description: Update Travel Request
    DResponse:
      type: object
      properties:
        hasError:
          type: boolean
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        data:
          type: object
    Error:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
    TravelUpdateResponse:
      type: object
      properties:
        organizationNumber:
          type: integer
          format: int32
        cardNumber:
          type: string
    TransferUpdateRequest:
      required:
        - accountNumberBase
        - blockCode
        - cardNumber
        - function
        - issueType
        - logo
        - operatorId
        - reasonCode
        - startDate
        - terminalId
        - transferRepresentative
        - transferToAccount
        - transferToCustomer
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
        cardNumber:
          maxLength: 19
          minLength: 12
          type: string
          description: Card Number
          example: '0004513070406598974'
        cardSequence:
          type: integer
          description: Card Sequence
          format: int
          example: 4513074002573466600
        accountNumberBase:
          type: string
          description: Account number from base segment
        customerOrg:
          type: integer
          description: Customer organization
          format: int32
          example: 802
        function:
          type: string
          description: |-
            function
            Action to take on the card relating to transfer. The values are:
            C = Copy the data on a lost, stolen, used card to a new card and retain on the existing account
            R = Reverse a previous card transfer 
            T = Transfer a card reported lost, stolen, fraudulently used to a new or existing account.
          example: T
        logo:
          type: integer
          description: Logo
          format: int32
          example: 400
        startDate:
          type: string
          description: Start date
          format: date
          example: '2019-08-30'
        terminalId:
          type: string
          description: Terminal ID
          example: '1'
        operatorId:
          type: string
          description: Operator ID
          example: VFM
        transferToAccount:
          type: string
          description: Transfer-to account
          example: 55555555506338684CC
        transferToCustomer:
          type: string
          description: Transfer-to customer
          example: 55555555569482969CC
        effectiveDate:
          type: string
          description: Effective date
          format: date
          example: '2019-08-12'
        transferRepresentative:
          type: string
          description: Transfer representative indicator
          example: '0'
        blockCode:
          type: string
          description: Block code
          example: S
        processType:
          type: string
          description: |-
            Process type. The values are:
            0 = Same day processing not required
            1 = Same day processing required
            Spaces = Defaults to choice on logo record.
          example: '0'
        reasonCode:
          type: string
          description: Reason code
          example: X
        issueType:
          pattern: ^(I|S|R)$
          type: string
          description: |
            Issue Type
            Valid values are Space, I, S or R
            Value S can be updated only when the Org level Customer embosser switch is inactive.
            I = Instant issue
            R = Regular
            S = Reg Fee.
          example: S
        typeOfCard:
          type: integer
          description: |-
            Type Of Card
            Valid values are Space, Low-Values or Numeric
          format: int32
          example: 10
          enum:
            - 10
        firstIssBranch:
          type: integer
          description: |-
            First Iss Branch
            Valid values are Space, Low-Values or Numeric
          format: int32
          example: 123
          enum:
            - 123
        adminBranch:
          type: integer
          description: |-
            Admin Branch
            Valid values are Space, Low-Values or Numeric
          format: int32
          example: 456
          enum:
            - 456
        plasticId:
          maxLength: 10
          minLength: 0
          type: string
          description: |-
            Plastic Id
            Valid values are Spaces, low-values or Alphanumeric Value
          example: 135CDEF
      description: Card Transfer Request
    TransferUpdateResponse:
      type: object
      properties:
        cardNumber:
          type: string
        transferToAccount:
          type: string
        transferToCustomer:
          type: string
        effectiveDate:
          type: string
          format: date
        blockCode:
          type: string
        organizationNumber:
          type: integer
          format: int32
        logo:
          type: integer
          format: int32
        customerNumber:
          type: string
        track1Enc:
          type: string
        track2Enc:
          type: string
        embosserDataBlock:
          type: string
        embosserName1:
          type: string
        embosserName2:
          type: string
        owningBranchNumber:
          type: integer
          format: int32
        expDate:
          type: string
          format: date
    TemporaryCreditLimitUpdRequest:
      required:
        - accountOrCardNumber
        - currentCreditLimit
        - organizationNumber
        - tempCreditLimitExpDate
        - temporaryCreditLimit
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
          enum:
            - 807
        accountOrCardNumber:
          maxLength: 19
          minLength: 12
          type: string
          description: Account or card number
          example: '4099854036361291411'          
        foreignUse:
          maxLength: 1
          minLength: 1
          type: string
          description: The FOREIGN USE indicator is provided in the input message so the requesting source can specify whether the request applies to the local or foreign account when the account is in a dual currency processing organization. The default is to the local account
          example: '1'
          enum:
            - '1'
        temporaryCreditLimit:
          type: number
          description: Temporary credit limit of the account in whole monetary units
          example: 300000001
        tempCreditLimitExpDate:
          type: string
          description: Temporary credit limit expiration date
          format: date
          example: '2021-07-01'
        currentCreditLimit:
          type: number
          description: Current credit limit before update
          example: 300000000
    CurrencyData:
      type: object
      properties:
        currencyNOD:
          type: integer
          format: int32
        currencyCode:
          type: integer
          format: int32
      description: Temporary Credit Limit Update Response - Currency Data
    TemporaryCreditLimitUpdResponse:
      type: object
      properties:
        currencyData:
          $ref: '#/components/schemas/CurrencyData'
        organizationNumber:
          type: integer
          format: int32
        foreignOrganization:
          type: integer
          format: int32
        foreignUse:
          type: string
        logo:
          type: integer
          format: int32
        accountNumber:
          type: string
        cardNumber:
          type: string
        temporaryCreditLimit:
          type: number
        tempCreditLimitExpDate:
          type: string
          format: date
        availableCredit:
          type: number
      description: Temporary Credit Limit Update Response
    CardStatusRequest:
      required:
        - cardNumber
        - cardStatus
        - organizationNumber
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
        cardStatus:
          type: integer
          description: Card Status
          format: int32
        cardSequence:
          type: integer
          description: Card Sequence
          format: int32
        cardNumber:
          maxLength: 19
          minLength: 12
          type: string
          description: Card Number
          example: '0004513070406598974'
        representativeId:
          type: string
          description: Representative Id
    CardStatusResponse:
      type: object
      properties:
        successMessage:
          type: string
    CardsDetailsForSpendLimitsRequest:
      required:
        - cardNumber
        - globalSpendingLimitAmount
        - globalSpendingLimitForSingleTransaction
        - globalSpendingLimitNumber
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
        cardNumber:
          maxLength: 19
          minLength: 12
          type: string
          description: Card Number
          example: '0004513070406598974'
        cardSequence:
          type: integer
          description: Card Sequence
          format: int32
          example: 1
        foreignUse:
          type: string
          description: |-
            Foreign use indicator
            The values are:
            0 or space = Local account
            1 = Foreign account.
          example: '0'
        frequency:
          type: integer
          description: |-
            Code that indicates the frequency of the authorization override
            parameters
            The values are:
            0 = Not used (Default)
            1 = Daily
            2 = Cycle-to-date
            3 = Year-to-date
            4 = Life-to-date
          format: int32
          example: 1
        logoThreshIndustry:
          type: integer
          description: |-
            Logo threshold indicator
            The values are:
            0 = Inactive
            1 = Active.
          format: int32
          example: 1
        automatedTellerMachineCashNumber:
          type: integer
          description: Automated Teller Machine Cash Number
          format: int32
        automatedTellerMachineCashAmount:
          type: number
          description: ' Automated Teller Machine Cash Amount'
          example: 123.12
        automatedTellerMachineCashSingleTransactionLimit:
          type: number
          description: ' Automated Teller Machine Cash Single Transaction Limit'
          example: 0
        overTheCounterCashNumber:
          type: integer
          description: OTC Cash Number
          format: int32
          example: 7
        overTheCounterCashAmount:
          type: number
          description: OTC Cash Amount
          example: 123.12
        overTheCounterCashSingleTransactionLimit:
          type: number
          description: OTC Cash Single Transaction Limit
          example: 123.45
        retailPurchaseNumber:
          type: integer
          description: Retail Purchase Number
          format: int32
          example: 8
        retailPurchaseAmount:
          type: number
          description: Retail Purchase Amount
          example: 456.78
        retailPurchaseSingleTransactionLimit:
          type: number
          description: Retail Purchase Single Tx
          example: 123.32
        internetPurchaseNumber:
          type: integer
          description: Internet Purchase Number
          format: int32
          example: 4
        internetPurchaseAmount:
          type: number
          description: Internet Purchase Amount
          example: 234.56
        internetPurchaseSingleTransactionLimit:
          type: number
          description: Internet Purchase Single Transaction Limit
          example: 234.56
        amountInternationalPurchaseSingle:
          type: number
          description: amountInternationalPurchaseSingle
        spendLimitsStatusIndicator:
          type: integer
          description: |-
            spendLimitsStatusIndicator.
            The values are:
            0 = inactive
            1 = active
          format: int32
          example: 0
        retailPercentDaily:
          type: string
          description: retailPercentDaily
          format: date
        retailPercentMonthToDate:
          type: string
          description: retailPercentMonthToDate
          format: date
        retailPercentYearToDate:
          type: string
          description: retailPercentYearToDate
          format: date
        retailAmountDaily:
          type: number
          description: retailAmountDaily
        retailAmountMonthToDate:
          type: number
          description: retailAmountMonthToDate
        retailAmountYearToDate:
          type: number
          description: retailAmountYearToDate
        cashPercentDaily:
          type: string
          description: cashPercentDaily
          format: date
        cashPercentMonthToDate:
          type: string
          description: cashPercentMonthToDate
          format: date
        cashPercentYearToDate:
          type: string
          description: cashPercentYearToDate
          format: date
        cashAmountDaily:
          type: number
          description: cashAmountDaily
        cashAmountMonthToDate:
          type: number
          description: cashAmountMonthToDate
        cashAmountYearToDate:
          type: number
          description: cashAmountYearToDate
        globalSpendingLimitNumber:
          type: string
          description: globalSpendingLimitNumber
          example: '10'
        globalSpendingLimitAmount:
          type: number
          description: globalSpendingLimitAmount
          example: 123456789
        globalSpendingLimitForSingleTransaction:
          type: number
          description: globalSpendingLimitForSingleTransaction
          example: 123456789
      description: Card Detail Request
    CardsDetailsForSpendLimitsResponse:
      type: object
      properties:
        response:
          type: string
    SpendLimitsL8V3Request:
      required:
        - cardNumber
        - globalSpendingLimitAmount
        - globalSpendingLimitForSingleTransaction
        - globalSpendingLimitNumber
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
        cardNumber:
          maxLength: 19
          minLength: 12
          type: string
          description: Card Number
          example: '0004513070406598974'
        cardSequence:
          type: integer
          description: Card Sequence
          format: int32
          example: 1
        foreignUse:
          type: string
          description: |-
            Foreign use indicator
            The values are:
            0 or space = Local account
            1 = Foreign account.
          example: '0'
        frequency:
          type: integer
          description: |-
            Code that indicates the frequency of the authorization override
            parameters
            The values are:
            0 = Not used (Default)
            1 = Daily
            2 = Cycle-to-date
            3 = Year-to-date
            4 = Life-to-date
          format: int32
          example: 1
        logoThreshIndustry:
          type: integer
          description: |-
            Logo threshold indicator
            The values are:
            0 = Inactive
            1 = Active.
          format: int32
          example: 1
        automatedTellerMachineCashNumber:
          type: integer
          description: Automated Teller Machine Cash Number
          format: int32
        automatedTellerMachineCashAmount:
          type: string
          description: ' Automated Teller Machine Cash Amount'
          example: '123.12'
        automatedTellerMachineCashSingleTransactionLimit:
          type: string
          description: ' Automated Teller Machine Cash Single Transaction Limit'
          example: '0'
        overTheCounterCashNumber:
          type: integer
          description: OTC Cash Number
          format: int32
          example: 7
        overTheCounterCashAmount:
          type: string
          description: OTC Cash Amount
          example: '123.12'
        overTheCounterCashSingleTransactionLimit:
          type: string
          description: OTC Cash Single Transaction Limit
          example: '123.45'
        retailPurchaseNumber:
          type: integer
          description: Retail Purchase Number
          format: int32
          example: 8
        retailPurchaseAmount:
          type: string
          description: Retail Purchase Amount
          example: '456.78'
        retailPurchaseSingleTransactionLimit:
          type: string
          description: Retail Purchase Single Tx
          example: '123.32'
        internetPurchaseNumber:
          type: integer
          description: Internet Purchase Number
          format: int32
          example: 4
        internetPurchaseAmount:
          type: string
          description: Internet Purchase Amount
          example: '234.56'
        internetPurchaseSingleTransactionLimit:
          type: string
          description: Internet Purchase Single Transaction Limit
          example: '234.56'
        amountInternationalPurchaseSingle:
          type: string
          description: amountInternationalPurchaseSingle
        spendLimitsStatusIndicator:
          type: integer
          description: |-
            spendLimitsStatusIndicator.
            The values are:
            0 = inactive
            1 = active
          format: int32
          example: 0
        retailPercentDaily:
          type: string
          description: retailPercentDaily
          format: date
        retailPercentMonthToDate:
          type: string
          description: retailPercentMonthToDate
          format: date
        retailPercentYearToDate:
          type: string
          description: retailPercentYearToDate
          format: date
        retailAmountDaily:
          type: number
          description: retailAmountDaily
        retailAmountMonthToDate:
          type: number
          description: retailAmountMonthToDate
        retailAmountYearToDate:
          type: number
          description: retailAmountYearToDate
        cashPercentDaily:
          type: string
          description: cashPercentDaily
          format: date
        cashPercentMonthToDate:
          type: string
          description: cashPercentMonthToDate
          format: date
        cashPercentYearToDate:
          type: string
          description: cashPercentYearToDate
          format: date
        cashAmountDaily:
          type: number
          description: cashAmountDaily
        cashAmountMonthToDate:
          type: number
          description: cashAmountMonthToDate
        cashAmountYearToDate:
          type: number
          description: cashAmountYearToDate
        globalSpendingLimitNumber:
          type: string
          description: globalSpendingLimitNumber
          example: '10'
        globalSpendingLimitAmount:
          type: string
          description: globalSpendingLimitAmount
          example: '123456789'
        globalSpendingLimitForSingleTransaction:
          type: string
          description: globalSpendingLimitForSingleTransaction
          example: '123456789'
      description: Card Detail Request
    SpendLimitsL8V3Response:
      type: object
      properties:
        response:
          type: string
    PinBlockUpdateRequest:
      required:
        - cardNumber
        - channel
        - serviceFunctionCode
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
        cardNumber:
          maxLength: 19
          minLength: 12
          type: string
          description: Card Number
          example: '0004513070406598974'
        cardSequenceNumber:
          type: integer
          description: Card Sequence Number
          format: int32
          example: 1
        serviceFunctionCode:
          maxLength: 1
          minLength: 1
          type: string
          description: |-
            Service function code. The values are:
            B = Block PIN
            U = Unblock PIN.
          example: U
          enum:
            - B,
            - U
        channel:
          maxLength: 1
          minLength: 1
          type: string
          description: |-
            Code that indicates the source for reporting purposes. The values are:
            A = ATM
            I = Interactive Voice Response
            W = WEB.
          example: W
          enum:
            - A,
            - I,
            - W
      description: PIN Block Update Request
    PinBlockUpdateResponse:
      type: object
      properties:
        cardNumber:
          type: string
        cardSequenceNumber:
          type: integer
          format: int32
    PinChangeRequest:
      required:
        - cardNumber
        - channel
        - currPinBlock
        - keyAssociationNumber
        - organizationNumber
        - reqdPinBlock
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
        cardNumber:
          maxLength: 19
          minLength: 12
          type: string
          description: Card Number
          example: '0004513070406598974'
        currPinBlock:
          type: string
          description: current PIN encrypted under a zone PIN key
          example: 12345E979B9FFF
        reqdPinBlock:
          type: string
          description: New PIN encrypted under a zone PIN key
          example: 702E2D0E979B9FFF
        pinOffset:
          type: integer
          description: Organization Number
          format: int32
          example: 123
        channel:
          type: string
          description: |-
            Code that indicates the source for reporting purposes.
            The values are:
            A = ATM
            I = Interactive Voice Response [IVR]
            W = Web.
          example: W
          enum:
            - A,
            - I,
            - W
        keyAssociationNumber:
          type: string
          description: |-
            Association number that provides the information necessary for KMS to 
            locate the working key shared between the issuer and the calling program
          example: AV
      description: Pin Change
    PinChangeResponse:
      type: object
      properties:
        cardNumber:
          type: string
        feeAmount:
          type: integer
          format: int32
        feeWaiveReason:
          type: integer
          format: int32
        feeRespCode:
          type: integer
          format: int32
    PinReassignmentRequest:
      required:
        - cardNumber
        - channel
        - keyAssociationNumber
        - newPinBlock
        - organizationNumber
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
        cardNumber:
          maxLength: 19
          minLength: 12
          type: string
          description: Card Number
          example: '0004513070406598974'
        newPinBlock:
          type: string
          description: New PIN encrypted under a zone PIN key
          example: 702E2D0E979B9FFF
        channel:
          type: string
          description: |-
            Code that indicates the source for reporting purposes.
            The values are:
            A = ATM
            B = Issuing Bank
            C = Call Center
            F = Fraud
            I = Interactive Voice Response [IVR]
            W = Web.
          example: W
          enum:
            - A,
            - B,
            - C,
            - F,
            - I,
            - W
        keyAssociationNumber:
          type: string
          description: |-
            Association number that provides the information necessary for KMS to 
            locate the working key shared between the issuer and the calling program
          example: AV
      description: PIN Reassignment Request
    PinReassignmentResponse:
      type: object
      properties:
        cardNumber:
          type: string
    GlobalCardActivationRequest:
      required:
        - financialInstitutionId
        - paymentInstrumentActivationCode
        - paymentInstrumentNumber
      type: object
      properties:
        common:
          type: array
          items:
            $ref: '#/components/schemas/common'
        financialInstitutionId:
          type: string
          description: Financial Institution ID
          example: '807'
        paymentInstrumentNumber:
          maxLength: 19
          minLength: 12
          type: string
          description: Payment Instrument Number
          example: '0004513070406598974'
        paymentInstrumentActivationCode:
          type: string
          description: |-
            Payment Instrument Activation Code. The values are:
            A = Activate all cards for the account
            S = Activate the specific embosser for the card number
            T = Activate the specific embosser and update the embosser prior card activation flag to deactivate the prior card
            U = Deactivate the previous card when the new card
            is created due to product transfer.
          example: A
      description: Global Card Activation Request
    common:
      type: object
      properties:
        user:
          type: string
          description: User Name
          example: ARG
        cycle:
          type: string
          description: Cycle Name
          example: ARG
        clientName:
          type: string
          description: Client Name
          example: ARG
        clientNumber:
          type: string
          description: Client Number
          example: ARG
        debug:
          type: boolean
          description: Debug Flag
          example: false
        org:
          type: string
          description: Organization Number
          example: ARG
        processor:
          type: string
          description: Processor Name
          example: ARG
        contentType:
          type: string
          description: Content Type
          example: ARG
    GlobalCardActivationResponse:
      type: object
      properties:
        organizationNumber:
          type: integer
          format: int32
        logo:
          type: integer
          format: int32
        cardNumber:
          type: string
        serviceType:
          type: string
        numberCardsActivated:
          type: integer
          format: int32
        foreignOrg:
          type: integer
          format: int32
        numberForeignCardsActivated:
          type: integer
          format: int32
    EmbosserCardActionRequest:
      required:
        - cardAction
        - cardNumber
        - cardSequence
        - organizationNumber
        - randomPin
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
          enum:
            - 807
        cardNumber:
          maxLength: 19
          minLength: 12
          type: string
          description: Card Number
          example: '0004099850333891309'
        cardSequence:
          type: integer
          description: Card Sequence
          format: int32
          example: 1
        cardAction:
          type: integer
          description: Card Action
          format: int32
          example: 6
          enum:
            - 6
        numberCardsRequested:
          type: integer
          description: Number of Cards Requested
          format: int32
          example: 1
        numberCardsReturned:
          type: integer
          description: Number of Cards Returned
          format: int32
          example: 0
        randomPin:
          type: integer
          description: |-
            Random PIN Generate.The values are:
            0 = Do not generate new random PIN (default)
            1 = Generate new random PIN
          format: int32
          example: 0
        userData:
          $ref: '#/components/schemas/UserData'
        processingType:
          type: string
          description: Processing Type
          example: '0'
        cardActionReason:
          maxLength: 1
          minLength: 0
          type: string
          description: Card Action Reason
          example: 'N'
      description: Embosser Card Action Update Request
    UserData:
      type: object
      properties:
        userDate:
          type: string
          description: User Date
          format: date
        userAmount:
          type: number
          description: User Amount
        userCode:
          type: integer
          description: User Code
          format: int32
    EmbosserCardActionResponse:
      type: object
      properties:
        organizationNumber:
          type: integer
          format: int32
        cardNumber:
          type: string
        cardSequence:
          type: integer
          format: int32
        cardAction:
          type: integer
          format: int32
        numberCardsRequested:
          type: integer
          format: int32
        numberCardsReturned:
          type: integer
          format: int32
        randomPin:
          type: integer
          format: int32
        userData:
          type: array
          items:
            $ref: '#/components/schemas/UserData'
    EmbosserCardActionL8V2Request:
      required:
        - cardAction
        - cardNumber
        - organizationNumber
        - randomPin
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
          enum:
            - 807
        cardNumber:
          maxLength: 19
          minLength: 12
          type: string
          description: Card Number
          example: '0004099850333891309'
        cardSequence:
          type: integer
          description: Card Sequence
          format: int32
          example: 1
        cardAction:
          type: integer
          description: Card Action
          format: int32
          example: 6
          enum:
            - 6
        numberCardsRequested:
          type: integer
          description: Number of Cards Requested
          format: int32
          example: 1
        numberCardsReturned:
          type: integer
          description: Number of Cards Returned
          format: int32
          example: 0
        randomPin:
          type: integer
          description: |-
            Random PIN Generate.The values are:
            0 = Do not generate new random PIN (default)
            1 = Generate new random PIN
          format: int32
          example: 0
        userData:
          $ref: '#/components/schemas/UserData'
        processingType:
          pattern: ^[0-1]{0,1}$
          type: string
          description: Processing Type
          example: '0'
        cardActionReason:
          maxLength: 1
          minLength: 0
          type: string
          description: Card Action Reason
          example: 'N'
        instantProcessType:
          maxLength: 1
          minLength: 0
          type: string
          description: Instant process type
          example: '1'
      description: Embosser Card Action Update Request
    EmbosserCardActionL8V2Response:
      type: object
      properties:
        organizationNumber:
          type: integer
          format: int32
        cardNumber:
          type: string
        cardSequence:
          type: integer
          format: int32
        cardAction:
          type: integer
          format: int32
        numberCardsRequested:
          type: integer
          format: int32
        numberCardsReturned:
          type: integer
          format: int32
        randomPin:
          type: integer
          format: int32
        logo:
          type: integer
          format: int32
        customerNumber:
          type: string
        encryptedTrack1:
          type: string
        encryptedTrack2:
          type: string
        embosserBlockData:
          type: string
        embosserName1:
          type: string
        embosserName2:
          type: string
        owningBranchNumber:
          type: integer
          format: int32
        expiryDate:
          type: string
          format: date
        userData:
          type: array
          items:
            $ref: '#/components/schemas/UserData'
    CardsDetailsForEmbosserBlockRequest:
      required:
        - blockCode
        - cardNumber
        - cardSequence
        - functionCode
        - organizationNumber
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
          enum:
            - 807
        cardNumber:
          maxLength: 19
          minLength: 12
          type: string
          description: Card Number
          example: '0004513070406598974'
        cardSequence:
          type: integer
          description: Card Sequence
          format: int32
          example: 1
        functionCode:
          maxLength: 1
          minLength: 1
          type: string
          description: |-
            The Values Are:
            B = Block
            U = Unblock
          example: U
          enum:
            - B,
            - U
        blockCode:
          type: string
          description: Block Code
        processingFlags:
          $ref: '#/components/schemas/ProcessingFlags'
      description: Card Embosser Block Request
    ProcessingFlags:
      type: object
      properties:
        processingFlag1:
          type: string
          description: Processing Flag 1
          example: ''
        processingFlag2:
          type: string
          description: Processing Flag 2
          example: ''
        processingFlag3:
          type: string
          description: Processing Flag 3
          example: ''
        processingFlag4:
          type: string
          description: Processing Flag 4
          example: ''
        processingFlag5:
          type: string
          description: Processing Flag 5
          example: ''
    CardsDetailsForEmbosserBlockResponse:
      type: object
      properties:
        organizationNumber:
          type: integer
          format: int32
        foreignOrg:
          type: integer
          format: int32
        cardNumber:
          type: string
        cardSequence:
          type: integer
          format: int32
        functionCode:
          type: string
        blockCode:
          type: string
        warningCode1:
          type: string
        warningCode7:
          type: string
        processingFlag1:
          type: string
        processingFlag2:
          type: string
        processingFlag3:
          type: string
        processingFlag4:
          type: string
        processingFlag5:
          type: string
    UpdateEmbosserRequest:
      required:
        - cardNumber
        - embossedName1
        - organizationNumber
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
          enum:
            - 807
        cardNumber:
          maxLength: 19
          minLength: 12
          type: string
          description: Card Number
          example: '0004513070406598974'
        cardSequence:
          type: integer
          description: Card Sequence
          format: int32
          example: 1
        foreignUseIndicator:
          type: integer
          description: |-
            Foreign use indicator. The values are:
            Space, 0 or
            low values = Local account
            1 = Foreign account
          format: int32
          example: 0
        customerNumber:
          maxLength: 19
          minLength: 0
          type: string
          description: Customer Number
          enum:
            - range[19,19]
        embossedName1:
          type: string
          description: Embossed Name 2
          example: MY NAME IS
        embossedName2:
          type: string
          description: Embossed Name 2
          example: KIT-KAT WALLER
        cardholderName1:
          type: string
          description: Cardholder Name 1
          example: RUN DMC
        cardholderName2:
          type: string
          description: Cardholder Name 1
        addressLine1:
          type: string
          description: Address Line 1
          example: PORT OF MIAMI
        addressLine2:
          type: string
          description: Address Line 2
          example: 117 E PARKWAY AVE
        city:
          type: string
          description: City
          example: Miami
        stateOrProvince:
          type: string
          description: State/Province
          example: FL
        postalCode:
          type: string
          description: Postal Code
          example: '123456'
        user1:
          type: string
          description: User-defined 1
          example: '1'
        user2:
          type: string
          description: User-defined 2
          example: '2'
        user3:
          type: string
          description: User-defined 3
          example: '3'
        user4:
          type: integer
          description: User-defined 4
          format: int32
          example: 4
        user5:
          type: string
          description: User-defined 5
          example: '5'
        user6:
          type: string
          description: User-defined 6
          example: '6'
        user7:
          type: string
          description: User-defined 7
          example: '7'
        user8:
          type: string
          description: User-defined 8
          example: '8'
        userDate1:
          type: string
          description: User-defined Date 1
          format: date
          example: '2020-03-03'
        userDate2:
          type: string
          description: User-defined Date 2
          format: date
          example: '2020-03-03'
        cardholderFlag:
          type: string
          description: |-
            Cardholder flag. The values are:
            Space = Not used
            0 = Primary card
            1 = Secondary card
          example: '0'
        cardholderType:
          type: string
          description: |-
            Cardholder type. The values are:
            0 = Additional cardholder
            1 = Primary cardholder
          example: '1'
        languageCode:
          type: string
          description: Language Code
          example: ENG
        issueDeliveryOption:
          type: integer
          description: Issue Delivery Option
          format: int32
          example: 1
        reissueDeliveryOption:
          type: integer
          description: Reissue Delivery Option
          format: int32
          example: 1
        adminBranchNumber:
          type: integer
          description: |-
            Branch number that identifies the card mailing location for all 
            reissued cards when the branch delivery option is used
          format: int32
        firstIssueBranchNumber:
          type: integer
          description: |-
            Branch number that identifies the card mailing location for the issue
            of all new cards when the branch delivery option is used
          format: int32
        cardholderAffiliationGroupId:
          type: integer
          description: Identification Of The Cardholder’S Affiliation Or Affinity Group
          format: int32
          example: 12348
      description: Update Embosser Request
    UpdateEmbosserResponse:
      type: object
      properties:
        organizationNumber:
          type: integer
          format: int32
        cardNumber:
          type: string
        cardSequence:
          type: integer
          format: int32
        foreignUseIndicator:
          type: string
        customerNumber:
          type: string
        cardholderName1:
          type: string
        cardholderName2:
          type: string
        embossedName1:
          type: string
        embossedName2:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        stateOrProvince:
          type: string
        postalCode:
          type: string
        user1:
          type: string
        user2:
          type: string
        user3:
          type: string
        user4:
          type: integer
          format: int32
        user5:
          type: string
        user6:
          type: string
        user7:
          type: string
        user8:
          type: string
        userDate1:
          type: string
          format: date
        userDate2:
          type: string
          format: date
        cardholderFlag:
          type: string
        cardholderType:
          type: string
        languageCode:
          type: string
    UpdateEmbosserL8V3Request:
      required:
        - cardNumber
        - organizationNumber
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
          enum:
            - 807
        cardNumber:
          maxLength: 19
          minLength: 12
          type: string
          description: Card Number
          example: '0004513070406598974'
        cardSequence:
          type: integer
          description: Card Sequence
          format: int32
          example: 1
        foreignUseIndicator:
          type: integer
          description: |-
            Foreign use indicator. The values are:
            Space, 0 or
            low values = Local account
            1 = Foreign account
          format: int32
          example: 0
        customerNumber:
          maxLength: 19
          minLength: 0
          type: string
          description: Customer Number
          enum:
            - range[19,19]
        embossedName1:
          type: string
          description: Embossed Name 1
          example: MY NAME IS
        embossedName2:
          type: string
          description: Embossed Name 2
          example: KIT-KAT WALLER
        cardholderName1:
          type: string
          description: Cardholder Name 1
          example: RUN DMC
        cardholderName2:
          type: string
          description: Cardholder Name 2
        addressLine1:
          type: string
          description: Address Line 1
          example: PORT OF MIAMI
        addressLine2:
          type: string
          description: Address Line 2
          example: 117 E PARKWAY AVE
        city:
          type: string
          description: City
          example: Miami
        stateOrProvince:
          type: string
          description: State/Province
          example: FL
        postalCode:
          type: string
          description: Postal Code
          example: '123456'
        user1:
          type: string
          description: User-defined 1
          example: '1'
        user2:
          type: string
          description: User-defined 2
          example: '2'
        user3:
          type: string
          description: User-defined 3
          example: '3'
        user4:
          type: integer
          description: User-defined 4
          format: int32
          example: 4
        user5:
          type: string
          description: User-defined 5
          example: '5'
        user6:
          type: string
          description: User-defined 6
          example: '6'
        user7:
          type: string
          description: User-defined 7
          example: '7'
        user8:
          type: string
          description: User-defined 8
          example: '8'
        userDate1:
          type: string
          description: User-defined Date 1
          format: date
          example: '0008-09-09'
        userDate2:
          type: string
          description: User-defined Date 2
          format: date
          example: '0008-09-09'
        cardholderFlag:
          type: string
          description: |-
            Cardholder flag. The values are:
            Space = Not used
            0 = Primary card
            1 = Secondary card
          example: '0'
        cardholderType:
          type: string
          description: |-
            Cardholder type. The values are:
            0 = Additional cardholder
            1 = Primary cardholder
          example: '1'
        languageCode:
          type: string
          description: Language Code
          example: ENG
        issueDeliveryOption:
          type: integer
          description: Issue Delivery Option
          format: int32
          example: 1
        reissueDeliveryOption:
          type: integer
          description: Reissue Delivery Option
          format: int32
          example: 1
        adminBranchNumber:
          type: integer
          description: |-
            Branch number that identifies the card mailing location for all 
            reissued cards when the branch delivery option is used
          format: int32
        firstIssueBranchNumber:
          type: integer
          description: |-
            Branch number that identifies the card mailing location for the issue
            of all new cards when the branch delivery option is used
          format: int32
        cardholderAffiliationGroupId:
          type: integer
          description: Identification Of The Cardholder’S Affiliation Or Affinity Group
          format: int32
          example: 12348
        falconMark:
          type: integer
          description: Falcon Mark
          format: int32
          example: 1
        falconMarkStartDate:
          type: string
          description: Falcon Mark Start Date
          format: date
          example: '0025-12-12'
        falconMarkEndDate:
          type: string
          description: Falcon Mark End Date
          format: date
          example: '0025-12-13'
        profileId:
          type: integer
          description: Profile ID
          format: int32
          example: 1
        contactlessIndicator:
          type: string
          description: Contactless Indicator
          example: '1'
        eCommerceIndicator:
          type: string
          description: E-Commerce Indicator
          example: '1'
      description: Update Embosser Request
    UpdateEmbosserL8V3Response:
      type: object
      properties:
        organizationNumber:
          type: integer
          format: int32
        cardNumber:
          type: string
        cardSequence:
          type: integer
          format: int32
        foreignUseIndicator:
          type: string
        customerNumber:
          type: string
        cardholderName1:
          type: string
        cardholderName2:
          type: string
        embossedName1:
          type: string
        embossedName2:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        stateOrProvince:
          type: string
        postalCode:
          type: string
        user1:
          type: string
        user2:
          type: string
        user3:
          type: string
        user4:
          type: integer
          format: int32
        user5:
          type: string
        user6:
          type: string
        user7:
          type: string
        user8:
          type: string
        userDate1:
          type: string
          format: date
        userDate2:
          type: string
          format: date
        cardholderFlag:
          type: string
        cardholderType:
          type: string
        languageCode:
          type: string
        falconMark:
          type: integer
          format: int32
        falconMarkStartDate:
          type: string
          format: date
        falconMarkEndDate:
          type: string
          format: date
        profileId:
          type: integer
          format: int32
        contactlessIndicator:
          type: string
        ecommerceIndicator:
          type: string
    CreditLimitUpdateRequest:
      required:
        - accountNumber
        - creditLimit
        - creditLimitBeforeUpdate
        - organizationNumber
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
        accountNumber:
          maxLength: 19
          minLength: 19
          type: string
          description: Account Number
          example: '4513074002573466583'
        foreignUseIndicator:
          type: string
          description: Foreign Use Indicator
          example: '1'
        creditLimit:
          type: number
          description: Credit Limit of the account in whole monetary units
          example: 13000000
        creditLimitBeforeUpdate:
          type: number
          description: Current Credit Limit before update
          example: 12000000
      description: Credit Limit Update Request
    CreditLimitUpdateResponse:
      type: object
      properties:
        currencyData:
          $ref: '#/components/schemas/CurrencyData'
        organizationNumber:
          type: integer
          format: int32
        foreignOrganization:
          type: integer
          format: int32
        foreignUseIndicator:
          type: string
        accountNumber:
          type: string
        cardNumber:
          type: string
        creditLimit:
          type: number
        availableCredit:
          type: number
        logo:
          type: integer
          format: int32
    CardActivationRequest:
      required:
        - cardNumber
        - serviceType
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
        cardNumber:
          maxLength: 19
          minLength: 12
          type: string
          description: Card Number
          example: '0004513070406598974'
        serviceType:
          type: string
          description: |-
            Service Type. The values are:
            A = Activate all cards for the account
            S = Activate the specific embosser for the card number
            T = Activate the specific embosser and update the embosser prior card activation flag to deactivate the prior card
            U = Deactivate the previous card when the new card
            is created due to product transfer.
          example: A
        userData:
          type: string
          description: User Data
      description: Card Activation Request
    CardActivationResponse:
      type: object
      properties:
        organizationNumber:
          type: integer
          format: int32
        logo:
          type: integer
          format: int32
        cardNumber:
          type: string
        serviceType:
          type: string
        numberCardsActivated:
          type: integer
          format: int32
        foreignOrg:
          type: integer
          format: int32
        numberForeignCardsActivated:
          type: integer
          format: int32
    StatementInquiryRequest:
      required:
        - accountOrCardNumber
        - organizationNumber
        - serviceType
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
          enum:
            - 807
        accountOrCardNumber:
          maxLength: 19
          minLength: 12
          type: string
          description: Account Or Card Number
          example: '5303716020401641697'
        dualCurrencyIndicator:
          maxLength: 1
          minLength: 0
          type: string
          description: |-
            Dual Currency Indicator. The values are:
            Spaces or L = Local account
            F = Foreign account.
          example: L
          enum:
            - L
            - F
        serviceType:
          maxLength: 1
          minLength: 0
          type: string
          description: |-
            Service Type.The values are:
            S = Statement detail
            M = Monthly detail.
          example: S
          enum:
            - S
            - M
        statementDate:
          type: string
          description: Statement Date
          example: '2020-02-05'
        statementNumberMonths:
          type: string
          description: Statement Number Months
      description: Card Statement Request
    ReservedForFutureUse:
      type: object
      properties:
        code1:
          type: string
        code2:
          type: string
        code3:
          type: string
        code4:
          type: string
        date1:
          type: string
          format: date
        date2:
          type: string
          format: date
        date3:
          type: string
          format: date
        date4:
          type: string
          format: date
        amount1:
          type: number
        amount2:
          type: number
        amount3:
          type: number
        amount4:
          type: number
    StatementInquiryResponse:
      type: object
      properties:
        organizationNumber:
          type: string
        accountOrCardNumber:
          type: string
        foreignUseIndicator:
          type: string
        statementDate:
          type: string
          format: date
        currencyData:
          $ref: '#/components/schemas/CurrencyData'
        currentBalance:
          type: number
        billingCycle:
          type: integer
          format: int32
        shortName:
          type: string
        residenceId:
          type: string
        dateLastStatement:
          type: string
          format: date
        customerNumber:
          type: string
        accountStatus:
          type: string
        paymentCycleDueCode:
          type: integer
          format: int32
        paymentDueDate:
          type: string
          format: date
        alternateCustomerNumber:
          type: string
        graceDaysExpirationDate:
          type: string
          format: date
        relationshipNumber:
          type: string
        blockCode1:
          type: string
        blockCode2:
          type: string
        storeOrganization:
          type: integer
          format: int32
        storeNumber:
          type: integer
          format: int32
        statementFlag:
          type: string
        statementCounter:
          type: integer
          format: int32
        projectedPayment:
          type: number
        billFeeIndicator:
          type: integer
          format: int32
        creditLimit:
          type: number
        currentPaymentDue:
          type: number
        userCode1:
          type: string
        userCode2:
          type: string
        userCode3:
          type: string
        userCode4:
          type: string
        userCode5:
          type: string
        userCode6:
          type: string
        openToBuy:
          type: number
        totalPaymentPastDue:
          type: number
        yearToDateInterest:
          type: number
        totalAmountDue:
          type: number
        yearToDateLateCharge:
          type: number
        fixedPaymentAmount:
          type: number
        yearToDateOverlimitCharge:
          type: number
        schedulePaymentAmount:
          type: number
        priorYearToDateInterest:
          type: number
        paymentInterestFree:
          type: number
        totalInterestThisStatement:
          type: number
        alternateMinimumPaymentAmount:
          type: number
        employeeCode:
          type: string
        creditClass:
          type: string
        totalBeginningBalance:
          type: number
        totalEndingBalance:
          type: number
        recency:
          type: integer
          format: int32
        numberOfDebits:
          type: integer
          format: int32
        numberOfCredits:
          type: integer
          format: int32
        creditAmount:
          type: number
        numberOfPlans:
          type: integer
          format: int32
        daysInCycle:
          type: integer
          format: int32
        frequentShopperPointsBeginningBalance:
          type: number
        frequentShopperPointsEndingBalance:
          type: number
        frequentShopperPointsCycleToDateEarned:
          type: number
        frequentShopperPointsCycleToDateAdjusted:
          type: number
        frequentShopperPointsCycleToDateDisbursed:
          type: number
        minimumPaymentDueConvertedToForeignCurrency:
          type: number
        reservedForFutureUse:
          $ref: '#/components/schemas/ReservedForFutureUse'
        statementNumberMonths:
          type: string
        cashAvailable:
          type: number
        debitAmount:
          type: number
        cashCreditLimit:
          type: number
    StatementDateInquiryRequest:
      required:
        - accountOrCardNumber
        - organizationNumber
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
          enum:
            - 807
        accountOrCardNumber:
          maxLength: 19
          minLength: 12
          type: string
          description: Account Or Card Number
          example: '5303716020401641697'
        foreignUseIndicator:
          maxLength: 1
          minLength: 0
          type: string
          description: |-
            Foreign use indicator. The values are:
            Zero, space, low values = Local account
            1 = Foreign account
          example: '1'
      description: Statement Date Inquiry Request
    StatementDataTable:
      type: object
      properties:
        sequence:
          type: integer
          format: int32
        statementDate:
          type: string
          format: date
        statementIndicator:
          type: string
    StatementDateData:
      type: object
      properties:
        numberOfOccurrences:
          type: integer
          format: int32
        statementDataTableList:
          type: array
          items:
            $ref: '#/components/schemas/StatementDataTable'
    StatementDateInquiryResponse:
      type: object
      properties:
        organizationNumber:
          type: integer
          format: int32
        logo:
          type: integer
          format: int32
        accountOrCardNumber:
          type: string
        statementDateData:
          $ref: '#/components/schemas/StatementDateData'
    PinValidateRequest:
      required:
        - cardNumber
        - currentPinBlock
        - keyAssociation
        - organizationNumber
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
        cardNumber:
          maxLength: 19
          minLength: 12
          type: string
          description: Card Number
          example: '0004099850333891309'
        currentPinBlock:
          maxLength: 16
          minLength: 16
          type: string
          description: Current PIN Block
          example: 1F6FB6D0CB55EDC1
        channel:
          maxLength: 1
          minLength: 0
          type: string
          description: Channel
          example: I
        keyAssociation:
          maxLength: 3
          minLength: 3
          type: string
          description: Key Association
          example: VTU
      description: Validate Pin Request
    PinValidateResponse:
      type: object
      properties:
        cardNumber:
          type: string
    SecurityCodeDetailsRequest:
      required:
        - cardNumber
        - channel
        - keyAssociation
        - organizationNumber
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
          enum:
            - 807
        cardNumber:
          maxLength: 19
          minLength: 19
          type: string
          description: Number of Customer’s Card
          example: '0004099850333891309'
        channel:
          maxLength: 1
          minLength: 1
          type: string
          description: |
            Insurance status code. The values are:
            Space = Not used
            I = IVR
            A = ATM
            W = Web
          example: I
          enum:
            - I
        keyAssociation:
          maxLength: 3
          minLength: 1
          type: string
          description: Key Association
          example: MB
      description: Security Code Details Request
    SecurityCodeDetailsResponse:
      type: object
      properties:
        cardNumber:
          type: string
        ud1ec:
          type: string
        ud2ec:
          type: string
        ud3ec:
          type: string
        pinEncrypt:
          type: string
    InvalidPinAttemptsInquiryRequest:
      required:
        - cardNumber
        - organizationNumber
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 12
          type: string
          description: Card number
          example: '0004099850333891309'
        organizationNumber:
          type: integer
          description: Organization number
          format: int32
          example: 807
        cardSequenceNumber:
          type: integer
          description: Card sequence number
          format: int32
          example: 1
      description: Invalid PIN attempts request
    InvalidPinAttemptsInquiryResponse:
      type: object
      properties:
        outputArea:
          $ref: '#/components/schemas/OutputArea'
    OutputArea:
      type: object
      properties:
        cardNumber:
          type: string
        cardSequenceNumber:
          type: integer
          format: int32
        cardInvalidPinTries:
          type: integer
          format: int32
        cardInvalidPinTryDate:
          type: string
          format: date
        maxNumberInvalidPinTries:
          type: integer
          format: int32
        exceededInvalidPinTries:
          type: string
        blockedIndicator:
          type: string
      description: InvalidPinAttemptsInquiryResponseOutputArea
    DynamicValuesRequest:
      required:
        - cardNumber
        - channel
        - disableDCVV2
        - keyAssociation
        - organizationNumber
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
          enum:
            - 807
        cardNumber:
          maxLength: 19
          minLength: 19
          type: string
          description: Number of Customer’s Card
          example: '0004099850333891309'
        channel:
          pattern: ^(I|A|W|\s){1}$
          type: string
          description: |
            Insurance status code. The values are:
            Space = Not used
            I = IVR
            A = ATM
            W = Web
          example: I
          enum:
            - I
            - A
            - W
        keyAssociation:
          maxLength: 3
          minLength: 1
          type: string
          description: Key Association
          example: MB
        disableDCVV2:
          maxLength: 1
          minLength: 1
          pattern: ^(Y|N){1}$
          type: string
          description: |
            Disable dCVV2 – Reset dCVV2 Method flag. The values are:
            Y = Disable dCVV2
            N = Do not disable dCVV2
          example: 'N'
          enum:
            - Y,
            - N
      description: Get Dynamic Values
    DynamicValuesResponse:
      type: object
      properties:
        CardNumber:
          type: string
          description: CARD NUMBER passed in the input
        dCVV2:
          type: string
          description: dCVV2
        dcvv2GenerationTime:
          type: string
        dcvv2ExpiryMinutes:
          type: string
    MassCardIssueAddRequest:
      required:
        - bankOrigin
        - blockCode1
        - blockCode2
        - branch
        - cardType
        - creditLimit
        - customerNumber
        - emblem
        - expiryDate
        - functionType
        - globalQualification
        - inventoryControl
        - logo
        - minimumQuantity
        - organizationNumber
        - prepaidCardFlag
        - prepaidPlanNumber
        - promoCode
        - quantityToCreate
        - relationAMBS
        - scheme
        - status
        - userCode1
        - userCode2
        - userCode3
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 950
          enum:
            - 950
        logo:
          type: integer
          description: Logo
          format: int32
          example: 50
          enum:
            - 50
        cardType:
          type: integer
          description: Card Type
          format: int32
          example: 0
          enum:
            - 0
        functionType:
          maxLength: 1
          minLength: 0
          type: string
          description: Function Type
          example: M
          enum:
            - A,
            - M
        status:
          type: integer
          description: Status
          format: int32
          example: 1
        bankOrigin:
          type: integer
          description: Bank Origin
          format: int32
          example: 999999998
        branch:
          type: integer
          description: Branch
          format: int32
          example: 999999998
        minimumQuantity:
          type: integer
          description: Minimum Quantity
          format: int32
          example: 1
        quantityToCreate:
          type: integer
          description: Quantity to Create
          format: int32
          example: 5
        creditLimit:
          type: integer
          description: Credit Limit
          format: int32
          example: 0
        blockCode1:
          type: string
          description: Block Code 1
          example: L
        blockCode2:
          type: string
          description: Block Code 2
          example: A
        embosserCode:
          type: string
          description: Embosser Code
          example: P
        pctId:
          type: string
          description: PCT ID
          example: '050'
        relationAMBS:
          type: string
          description: Relation AMBS
          example: N
          enum:
            - N
            - S
        prepaidCardFlag:
          type: integer
          description: Prepaid Card Flag
          format: int32
          example: 1
        promoCode:
          type: string
          description: Promo Code
          example: AXPC
        scheme:
          type: integer
          description: Scheme
          format: int32
          example: 3
        userCode1:
          type: integer
          description: User
          format: int32
          example: 1
        userCode2:
          type: integer
          format: int32
          example: 1
        userCode3:
          type: integer
          format: int32
          example: 1
        customerNumber:
          maxLength: 19
          minLength: 19
          type: string
          description: Customer Number
          example: '0995000000000000705'
        expiryDate:
          type: string
          description: Expiry Date
          format: date
          example: '2025-09-30'
        inventoryControl:
          maxLength: 2
          minLength: 2
          type: string
          description: Inventory Control
          example: CI
          enum:
            - CI
            - SO
            - NO
        inventoryQuantity:
          type: integer
          description: Inventory Quantity
          format: int32
          example: 1
        prepaidPlanNumber:
          type: integer
          description: Prepaid Plan Number
          format: int32
          example: 60000
        globalQualification:
          type: string
          description: Global Qualification
          example: Z
          enum:
            - 1
            - 2
            - A
            - B
            - C
            - D
            - E
            - F
            - G
            - H
            - I
            - J
            - K
            - L
            - M
            - N
            - O
            - P
            - Q
            - R
            - S
            - T
            - U
            - V
            - W
            - X
            - Y
            - Z
        emblem:
          type: integer
          description: Emblem
          format: int32
          example: 1
        embossedName1:
          type: string
          description: Embossed Name 1
          example: Embossed Name 1
        embossedName2:
          type: string
          description: Embossed Name 2
          example: Embossed Name 2
      description: Mass Card Issue Update
    MassCardIssueAddResponse:
      type: object
      properties:
        outputArea:
          $ref: '#/components/schemas/OutputArea'
    MassCardIssueAddRequestL8v3:
      required:
        - bankOrigin
        - blockCode1
        - blockCode2
        - branch
        - cardType
        - creditLimit
        - customerNumber
        - emblem
        - expiryDate
        - functionType
        - inventoryControl
        - logo
        - minimumQuantity
        - organizationNumber
        - prepaidCardFlag
        - prepaidPlanNumber
        - promoCode
        - quantityToCreate
        - relationAMBS
        - scheme
        - status
        - userCode1
        - userCode2
        - userCode3
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 123
          enum:
            - 123
        logo:
          type: integer
          description: Logo
          format: int32
          example: 50
          enum:
            - 50
        cardType:
          type: integer
          description: Card Type
          format: int32
          example: 0
          enum:
            - 0
        functionType:
          maxLength: 1
          minLength: 0
          type: string
          description: Function Type
          example: M
          enum:
            - A,
            - M
        status:
          type: integer
          description: Status
          format: int32
          example: 1
        bankOrigin:
          type: integer
          description: Bank Origin
          format: int32
          example: 999999998
        branch:
          type: integer
          description: Branch
          format: int32
          example: 999999998
        minimumQuantity:
          type: integer
          description: Minimum Quantity
          format: int32
          example: 1
        quantityToCreate:
          type: integer
          description: Quantity to Create
          format: int32
          example: 5
        creditLimit:
          type: integer
          description: Credit Limit
          format: int32
          example: 0
        blockCode1:
          type: string
          description: Block Code 1
          example: L
        blockCode2:
          type: string
          description: Block Code 2
          example: A
        embosserCode:
          type: string
          description: Embosser Code
          example: P
        pctId:
          type: string
          description: PCT ID
          example: '050'
        relationAMBS:
          type: string
          description: Relation AMBS
          example: N
          enum:
            - N
            - S
        prepaidCardFlag:
          type: integer
          description: Prepaid Card Flag
          format: int32
          example: 1
        promoCode:
          type: string
          description: Promo Code
          example: AXPC
        scheme:
          type: integer
          description: Scheme
          format: int32
          example: 3
        userCode1:
          type: integer
          description: User
          format: int32
          example: 1
        userCode2:
          type: integer
          format: int32
          example: 1
        userCode3:
          type: integer
          format: int32
          example: 1
        customerNumber:
          maxLength: 19
          minLength: 19
          type: string
          description: Customer Number
          example: '0995000000000000705'
        expiryDate:
          type: string
          description: Expiry Date
          format: date
          example: '2025-09-30'
        inventoryControl:
          maxLength: 2
          minLength: 2
          type: string
          description: Inventory Control
          example: CI
          enum:
            - CI
            - SO
            - NO
        inventoryQuantity:
          type: integer
          description: Inventory Quantity
          format: int32
          example: 1
        prepaidPlanNumber:
          type: integer
          description: Prepaid Plan Number
          format: int32
          example: 60000
        globalQualification:
          type: string
          description: Global Qualification
          example: Z
          enum:
            - 1
            - 2
            - A
            - B
            - C
            - D
            - E
            - F
            - G
            - H
            - I
            - J
            - K
            - L
            - M
            - N
            - O
            - P
            - Q
            - R
            - S
            - T
            - U
            - V
            - W
            - X
            - Y
            - Z
        emblem:
          type: integer
          description: Emblem
          format: int32
          example: 1
        embossedName1:
          type: string
          description: Embossed Name 1
          example: Embossed Name 1
        embossedName2:
          type: string
          description: Embossed Name 2
          example: Embossed Name 2
        relationshipNumber:
          maxLength: 19
          minLength: 0
          type: string
          description: Relationship Number
          example: '0123000000000000705'
        userData1:
          maxLength: 20
          minLength: 0
          type: string
          description: User Data 1
          example: User Data 1
        userData2:
          maxLength: 20
          minLength: 0
          type: string
          description: User Data 2
          example: User Data 2
        plasticID:
          maxLength: 10
          minLength: 0
          type: string
          description: Plastic ID
          example: UserData 2
        posServiceCode:
          maxLength: 3
          minLength: 0
          type: string
          description: pos ServiceC ode
          example: '221'
        cardTechnology:
          maxLength: 1
          minLength: 0
          type: string
          description: Plastic ID
          example: '1'
      description: Mass Card Issue Update
    MassCardIssueAddResponseL8v3:
      type: object
      properties:
        outputArea:
          $ref: '#/components/schemas/OutputArea'
    InstantCardAddL8V7Request:
      required:
        - accountCreateFlag
        - customerNumber
        - firstPurchaseFlag
        - logo
        - organizationNumber
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
        logo:
          type: integer
          description: Logo number
          format: int32
          example: 400
        customerNumber:
          maxLength: 19
          minLength: 19
          type: string
          description: Customer Number
          example: '4513074002573466583'
        firstPurchaseFlag:
          maxLength: 1
          minLength: 1
          type: string
          description: First Purchase Flag
          example: 'Y'
          enum:
            - 'Y'
            - 'N'
        accountCreateFlag:
          maxLength: 1
          minLength: 1
          type: string
          description: Account Create Flag
          example: 'Y'
          enum:
            - Y
            - N
        sameDayProcessingType:
          type: integer
          description: same Day Processing Type
          format: int32
          example: 1
        cardActionFlag:
          type: integer
          description: Card action flag
          format: int32
          example: 1
        accountData:
          $ref: '#/components/schemas/InstantCardAddL8V7RequestAccountData'
        embosserData:
          $ref: '#/components/schemas/InstantCardAddL8V7RequestEmbosserData'
      description: Instant Card Add Request
    InstantCardAddL8V7RequestAccountData:
      required:
        - billingCycle
        - customerSelectedDueDay
        - qualification
      type: object
      properties:
        accountNumber:
          maxLength: 19
          minLength: 0
          type: string
          description: Account Number
          example: '840'
        billingAccountIndicator:
          type: integer
          description: Billing Account Indicator
          format: int32
          example: 1
        relationshipPrimaryAccountFlag:
          maxLength: 1
          minLength: 0
          type: string
          description: Relationship Primary Account Flag
          example: '1'
        relationshipNumber:
          maxLength: 19
          minLength: 0
          type: string
          description: relationship Number
          example: '124242'
        shortName:
          maxLength: 20
          minLength: 0
          type: string
          description: Short name
          example: Test account
        creditLimit:
          type: number
          description: Credit limit
          example: 3000000
        billingCurrency:
          type: integer
          description: Billing Currency
          format: int32
          example: 840
        relationshipBillingLevel:
          type: integer
          description: Relationship Billing Level
          format: int32
          example: 1
        dualBillingFlag:
          type: integer
          description: Dual Billing Flag
          format: int32
          example: 1
        relationshipCardScheme:
          type: integer
          description: Relationship Card Scheme
          format: int32
          example: 3
        alternateCustomerNumberFlag:
          maxLength: 1
          minLength: 0
          type: string
          description: |-
            Alternate customer
            The values are:
            Space = No action; disregard alternate customer
            A = Alternate customer active; send statements to alternate address until expiration date
            B = Alternate customer active; send statements to both addresses until expiration date
            C = Relationship customer active; send statement to alternate address.
          example: C
        alternateCustomerStartDate:
          type: string
          description: Effective date of the alternate customer address
          format: date
        alternateCustomerExpireDate:
          type: string
          description: Expiration date of the alternate customer address
          format: date
        alternateCustomerNumber:
          maxLength: 19
          minLength: 0
          type: string
          description: Alternate customer number
          enum:
            - range[0,19]
        dateOpened:
          type: string
          description: Date opened
          format: date
        billingCycle:
          type: integer
          description: Billing cycle
          format: int32
          example: 31
          enum:
            - 31
        customerSelectedDueDay:
          maxLength: 2
          minLength: 0
          type: string
          description: Customer selected due day
          example: ''
        statementFlag:
          maxLength: 1
          minLength: 0
          type: string
          description: Statement flag
        statementFrequency:
          maxLength: 2
          minLength: 0
          type: string
          description: Statement frequency
          example: '1'
        blockCode1:
          maxLength: 1
          minLength: 0
          type: string
          description: Block code 1
          example: A
        blockCode2:
          maxLength: 1
          minLength: 0
          type: string
          description: Block code 2
          example: A
        processingControlTableControlId:
          maxLength: 19
          minLength: 0
          type: string
          description: PCT ID
          example: '123'
        processingControlTableStartDate:
          type: string
          description: Processing Control Table Start Date
          format: date
          example: '2021-03-20'
        processingControlTableExpireDate:
          type: string
          description: Processing Control Table Expire Date
          format: date
          example: '2021-03-20'
        processingControlTableLevel:
          type: string
          description: Processing Control Table Level
          example: O
        processingControlTableLevelStartDate:
          type: string
          description: Processing Control Table Level Start Date
          format: date
          example: '2021-03-20'
        processingControlTableLevelExpireDate:
          type: string
          description: Processing Control Table Level Expire Date
          format: date
          example: '2021-03-20'
        cashPlanNumber:
          type: integer
          description: Cash Plan Number
          format: int32
          example: 12345
        retailPlanNumber:
          type: integer
          description: Retail Plan Number
          format: int32
          example: 12345
        promoPlanNumber:
          type: integer
          description: Promo Plan Number
          format: int32
          example: 12345
        ddaRoutingNumber:
          type: integer
          description: DDA routing number
          format: int32
        ddaAccountNumber:
          maxLength: 19
          minLength: 0
          type: string
          description: DDA account number
          example: '121535325'
        savingsRoutingNumber:
          type: integer
          description: Savings routing number
          format: int32
        savingsAccountNumber:
          maxLength: 19
          minLength: 0
          type: string
          description: Savings account number
        userAccountNumber:
          maxLength: 19
          minLength: 0
          type: string
          description: User Account Number
        cardTechnology:
          type: integer
          description: |-
            Card technology
            The values are:
            0 = Magnetic stripe card
            1 = Smart card.
          format: int32
        authorizationLimitOverrides:
          type: number
          description: Authorization Limit Overrides
        temporaryCreditLimit:
          type: number
          description: Temporary credit limit
        dateTemporaryCreditLimit:
          type: string
          description: Date Temporary Credit Limit
          format: date
          example: '2021-03-20'
        stateOfResidenceId:
          maxLength: 3
          minLength: 0
          type: string
          description: State Of Residence Id
          example: '001'
        stateOfIssuanceId:
          maxLength: 3
          minLength: 0
          type: string
          description: State Of Issuance Id
          example: '001'
        owningBranchNumber:
          type: integer
          description: Owning branch number
          format: int32
          example: 1
        userCode1:
          maxLength: 2
          minLength: 0
          type: string
          description: User Code1
        userCode2:
          maxLength: 2
          minLength: 0
          type: string
          description: User Code2
        userCode3:
          maxLength: 2
          minLength: 0
          type: string
          description: User Code3
        userCode4:
          maxLength: 2
          minLength: 0
          type: string
          description: User Code4
        userCode5:
          maxLength: 2
          minLength: 0
          type: string
          description: User Code5
        userCode6:
          maxLength: 2
          minLength: 0
          type: string
          description: User Code6
        userCode7:
          maxLength: 2
          minLength: 0
          type: string
          description: User Code7
        userCode8:
          maxLength: 2
          minLength: 0
          type: string
          description: User Code8
        userCode9:
          maxLength: 2
          minLength: 0
          type: string
          description: User Code9
        userCode10:
          maxLength: 2
          minLength: 0
          type: string
          description: User Code10
        userCode11:
          maxLength: 2
          minLength: 0
          type: string
          description: User Code11
        userCode12:
          maxLength: 2
          minLength: 0
          type: string
          description: User Code12
        userCode13:
          maxLength: 2
          minLength: 0
          type: string
          description: User Code13
        userCode14:
          maxLength: 2
          minLength: 0
          type: string
          description: User Code14
        userDate1:
          type: string
          description: User date 1
          format: date
          example: '2021-03-20'
        userDate2:
          type: string
          description: User date 2
          format: date
          example: '2021-03-20'
        userDate3:
          type: string
          description: User date 3
          format: date
          example: '2021-03-20'
        userDate4:
          type: string
          description: User date 4
          format: date
          example: '2021-03-20'
        userDate5:
          type: string
          description: User date 5
          format: date
          example: '2021-03-20'
        userDate6:
          type: string
          description: User date 6
          format: date
          example: '2021-03-20'
        userDate7:
          type: string
          description: User date 7
          format: date
          example: '2021-03-20'
        userDate8:
          type: string
          description: User date 8
          format: date
          example: '2021-03-20'
        userDate9:
          type: string
          description: User date 9
          format: date
          example: '2021-03-20'
        userDate10:
          type: string
          description: User date 10
          format: date
          example: '2021-03-20'
        userDate11:
          type: string
          description: User date 11
          format: date
          example: '2021-03-20'
        userDate12:
          type: string
          description: User date 12
          format: date
          example: '2021-03-20'
        userDate13:
          type: string
          description: User date 13
          format: date
          example: '2021-03-20'
        userDate14:
          type: string
          description: User date 14
          format: date
          example: '2021-03-20'
        userAmount1:
          type: number
          description: User Amount 1
        userAmount2:
          type: number
          description: User Amount 2
        userAmount3:
          type: number
          description: User Amount 3
        userAmount4:
          type: number
          description: User Amount 4
        userAmount5:
          type: number
          description: User Amount 5
        userAmount6:
          type: number
          description: User Amount 6
        userAmount7:
          type: number
          description: User Amount 7
        userAmount8:
          type: number
          description: User Amount 8
        userAmount9:
          type: number
          description: User Amount 9
        userAmount10:
          type: number
          description: User Amount 10
        userAmount11:
          type: number
          description: User Amount 11
        userAmount12:
          type: number
          description: User Amount 12
        userAmount13:
          type: number
          description: User Amount 13
        userAmount14:
          type: number
          description: User Amount 14
        miscellaneousUser1:
          maxLength: 30
          minLength: 0
          type: string
          description: Miscellaneous user 1
        miscellaneousUser2:
          maxLength: 1
          minLength: 0
          type: string
          description: Miscellaneous user 2
        miscellaneousUser3:
          maxLength: 11
          minLength: 0
          type: string
          description: Miscellaneous user 3
        miscellaneousUser4:
          maxLength: 11
          minLength: 0
          type: string
          description: Miscellaneous user 4
        miscellaneousUser5:
          maxLength: 11
          minLength: 0
          type: string
          description: Miscellaneous user 5
        miscellaneousUser6:
          maxLength: 11
          minLength: 0
          type: string
          description: Miscellaneous user 6
        miscellaneousUser7:
          maxLength: 11
          minLength: 0
          type: string
          description: Miscellaneous user 7
        miscellaneousUser8:
          maxLength: 11
          minLength: 0
          type: string
          description: Miscellaneous user 8
        miscellaneousUser9:
          maxLength: 2
          minLength: 0
          type: string
          description: Miscellaneous user 9
        miscellaneousUser10:
          maxLength: 2
          minLength: 0
          type: string
          description: Miscellaneous user 10
        miscellaneousUser11:
          maxLength: 2
          minLength: 0
          type: string
          description: Miscellaneous user 11
        miscellaneousUser12:
          maxLength: 2
          minLength: 0
          type: string
          description: Miscellaneous user 12
        prepaidPlanNumber:
          type: integer
          description: Prepaid Plan Number
          format: int32
        prepaidLoadFrequency:
          type: integer
          description: |-
            Prepaid load frequency
            The values are:
            0 = Load frequency not used
            1 = Load frequency daily
            2 = Load frequency CTD
            3 = Load frequency YTD.
          format: int32
        prepaidLoadNumber:
          type: integer
          description: Prepaid load number
          format: int32
        prepaidLoadAmount:
          type: number
          description: Prepaid load amount
        minimumSingleLoadAmount:
          type: number
          description: Minimum Single Amount
        maximumSingleLoadAmount:
          type: number
          description: Maximum Single Amount
        internationalCashPlan:
          type: integer
          description: International cash plan
          format: int32
        internationalRetailPlan:
          type: integer
          description: International retail plan
          format: int32
        internationalInstallmentPlan:
          type: integer
          description: International installment plan
          format: int32
        cashPlanInstallmentBilling:
          type: integer
          description: Cash plan for installment billing
          format: int32
        retailPlanInstallmentBilling:
          type: integer
          description: Retail plan for installment billing
          format: int32
        acquirerRetailPlan:
          type: integer
          description: Acquirer retail plan for installment billing
          format: int32
        authorizationControlTable:
          type: integer
          description: Authorization control table for international banking
          format: int32
        retailPlanInstallmentPayments:
          type: integer
          description: Retail plan for installment payment plans
          format: int32
        cashPlanInstallmentPayment:
          type: integer
          description: Cash plan for installment payment plans
          format: int32
        qualification:
          maxLength: 1
          minLength: 0
          type: string
          description: Global qualification parameter. The values are A–Z
          example: ''
        cardholderAffiliationGroup:
          type: integer
          description: Cardholder’s affiliation or affinity group
          format: int32
    InstantCardAddL8V7RequestEmbosserData:
      required:
        - digitalCardFlag
      type: object
      properties:
        plasticId:
          maxLength: 10
          minLength: 0
          type: string
          description: Plastic ID
          example: ''
        name1TypeIndicator:
          type: integer
          description: Name 1 Type Indicator
          format: int32
          example: 0
        name2TypeIndicator:
          type: integer
          description: Name 2 Type Indicator
          format: int32
        embossedName1:
          maxLength: 26
          minLength: 0
          type: string
          description: Embossed Name 1
          example: HELLO
        embossedName2:
          maxLength: 26
          minLength: 0
          type: string
          description: Embossed Name 2
          example: KIT-KAT WALLER
        expirationDate:
          type: string
          description: Card expiry date
          format: date
          example: '2020-03-03'
        customerNumber:
          maxLength: 19
          minLength: 0
          type: string
          description: Customer Number
          example: '4513074002573466583'
        name1:
          maxLength: 40
          minLength: 0
          type: string
          description: Name 1
          example: RUN DMC
        name2:
          maxLength: 40
          minLength: 0
          type: string
          description: Name 2
          example: RICK ROSS
        posServiceCode:
          type: integer
          description: PO service code
          format: int32
          example: 201
        cardholderFlag:
          type: string
          description: Cardholder Flag
          example: '0'
        addressLine1:
          maxLength: 40
          minLength: 0
          type: string
          description: Address Line 1
          example: PORT OF MIAMI
        addressLine2:
          maxLength: 40
          minLength: 0
          type: string
          description: Address Line 2
          example: 117 E PARKWAY AVE
        city:
          maxLength: 30
          minLength: 0
          type: string
          description: City
          example: MIAMI
        stateOrProvince:
          maxLength: 3
          minLength: 0
          type: string
          description: State/Province
          example: FL
        postalCode:
          maxLength: 10
          minLength: 0
          type: string
          description: Postal Code
          example: '38585'
        languageCode:
          maxLength: 3
          minLength: 0
          type: string
          description: Language Code
          example: ENG
        atmCashNumber:
          type: integer
          description: ATM(Automated Teller Machine) Cash Amount
          format: int32
        atmCashAmount:
          type: number
          description: ATM(Automated Teller Machine) Cash Number
        atmCashSingleTransactionLimit:
          type: number
          description: ATM(Automated Teller Machine) Cash Transaction limit
        overTheCounterCashNumber:
          type: integer
          description: Over THe Counter Cash Amount
          format: int32
        overTheCounterCashAmount:
          type: number
          description: Over The Counter Cash Number
        overTheCounterCashSingleTransactionLimit:
          type: number
          description: Over The Counter Transaction Limit
        retailPurchaseNumber:
          type: integer
          description: Retail Amount
          format: int32
        retailPurchaseAmt:
          type: number
          description: Retail Number
        retailPurchaseSingleTransactionLimit:
          type: number
          description: Retail Transaction Limit
        internetPurchaseAmount:
          type: number
          description: Internet Purchase Amount
        internetPurchaseNumber:
          type: number
          description: Internet Purchase Number
        internetPurchaseSingleTransactionLimit:
          type: number
          description: Internet Purchase Single Transaction Limit
        user1:
          maxLength: 20
          minLength: 0
          type: string
          description: User-defined 1
          example: '1'
        user2:
          maxLength: 20
          minLength: 0
          type: string
          description: User-defined 2
          example: '2'
        user3:
          maxLength: 19
          minLength: 0
          type: string
          description: User-defined 3
          example: '3'
        user4:
          type: integer
          description: User-defined 4
          format: int32
          example: 4
        user5:
          maxLength: 1
          minLength: 0
          type: string
          description: User-defined 5
          example: '5'
        user6:
          maxLength: 1
          minLength: 0
          type: string
          description: User-defined 6
          example: '6'
        user7:
          maxLength: 1
          minLength: 0
          type: string
          description: User-defined 7
          example: '7'
        user8:
          maxLength: 1
          minLength: 0
          type: string
          description: User-defined 8
          example: '8'
        userDate1:
          type: string
          description: User-defined Date 1
          format: date
          example: '2020-03-03'
        userDate2:
          type: string
          description: User-defined Date 2
          format: date
          example: '2020-03-03'
        branchNumber:
          type: integer
          description: Branch Number
          format: int32
        firstIssueBranch:
          type: integer
          description: First Issue Branch
          format: int32
        deliveryOption:
          type: integer
          description: |-
            Delivery option. The values are:
            0 = Regular mail
            1 = First class mail
            2 = Registered mail
            3 = Internal delivery mail
            4 = User-defined.
          format: int32
        reissueDeliveryOption:
          type: integer
          description: |-
            Reissue delivery option. The values are:
            0 = Regular mail
            1 = First class mail
            2 = Registered mail
            3 = Internal delivery mail
            4 = User-defined.
          format: int32
        authorizationCriteriaTableNumber:
          maxLength: 3
          minLength: 0
          type: string
          description: Authorization Criteria Table Number
        programId:
          type: integer
          description: Program ID
          format: int32
        cardholderAffiliationGroupId:
          type: integer
          description: Identification Of The Cardholder’S Affiliation Or Affinity Group
          format: int32
          example: 12348
        cardActionReasonCode:
          maxLength: 1
          minLength: 0
          type: string
          description: Card Action Reason Code
        icTotalNumberTransactions:
          type: integer
          description: Global spending limit number
          format: int32
        icAmountLimitSingleTransaction:
          type: number
          description: ' Global spending limit for a single transaction'
        digitalCardFlag:
          type: integer
          description: |-
            Code that indicates whether to add a new digital card. The values are:
            0 = Do not add new digital card
            1 = Add new digital card.
          format: int32
          example: 1
          enum:
            - 1
    InstantCardAddL8V7Response:
      type: object
      properties:
        organizationNumber:
          type: integer
          format: int32
        logo:
          type: integer
          format: int32
        customerNumber:
          type: string
        accountNumber:
          type: string
        cardNumber:
          type: string
        cardSequenceNumber:
          type: integer
          format: int32
        creditLimit:
          type: number
        cardExpiryDate:
          type: string
          format: date
    SameDayEmbossingAddRequest:
      required:
        - cardAction
        - cardNumber
        - processType
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization number
          format: int32
          example: 807
        logo:
          type: integer
          description: Logo number
          format: int32
          example: 950
        cardNumber:
          maxLength: 19
          minLength: 0
          type: string
          description: Card number
          example: '4711823457896231879'
        cardSequenceNumber:
          type: integer
          description: Card sequence number
          format: int32
          example: 1234
        processType:
          pattern: ^(\s|0|1)$
          type: string
          description: |-
            Process type. The values are:
            Space = No same-day plastic request in process
            0 = Deletions
            1 = Additions
          example: '1'
        cardAction:
          maxLength: 1
          minLength: 0
          pattern: ^(1|3|6)$
          type: string
          description: |-
            Card action. The values are:
            1 = Issue new card(s)
            3 = Issue replacement card(s)
            6 = Issue emergency replacement card(s)
          example: '6'
        requestDate:
          type: string
          description: Request date (yyyy-MM-dd format)
          format: date
          example: '2021-03-16'
        requestTime:
          type: string
          description: Request time (HHmmss format --24 hs--)
          example: '"145154"'
    SameDayEmbossingAddResponse:
      type: object
      properties:
        organizationNumber:
          type: integer
          format: int32
        logo:
          type: integer
          format: int32
        cardNumber:
          type: string
        cardSequenceNumber:
          type: integer
          format: int32
    AddEmbosserL8VFRequest:
      required:
        - cardNumber
        - organizationNumber
        - postToAccount
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
          enum:
            - 807
        postToAccount:
          type: string
          description: Post-to account
          example: '"4513074002573466583"'
        cardNumber:
          maxLength: 19
          minLength: 0
          type: string
          description: Card Number
          example: '0004513070406598974'
        cardSequence:
          type: integer
          description: Card Sequence
          format: int32
          example: 1
        cardAction:
          type: integer
          description: Card Action
          format: int32
          example: 1
        numberOfCardsRequested:
          type: integer
          description: Number Of Cards Requested
          format: int32
          example: 1
        typeOfCard:
          type: integer
          description: Type Of Card
          format: int32
        requestedCardType:
          type: integer
          description: Requested Card Type
          format: int32
        typeCardMailer:
          type: integer
          description: Type Card Mailer
          format: int32
        plasticId:
          type: string
          description: Plastic ID
          example: ''
        name1TypeIndicator:
          type: integer
          description: Name 1 Type Indicator
          format: int32
          example: 0
        name2TypeIndicator:
          type: integer
          description: Name 2 Type Indicator
          format: int32
        embossedName1:
          type: string
          description: Embossed Name 1
          example: HELLO
        embossedName2:
          type: string
          description: Embossed Name 2
          example: KIT-KAT WALLER
        securedCodeActivate:
          type: integer
          description: Secured Code Activate
          format: int32
        visaPlusIndicator:
          type: integer
          description: Visa PLUS Indicator
          format: int32
        pinMailerDelayDays:
          type: integer
          description: PIN Mailer Delay Days
          format: int32
          example: 0
        expirationDate:
          type: string
          description: Expiration Date
          format: date
          example: '2021-01-01'
        customerNumber:
          maxLength: 19
          minLength: 0
          type: string
          description: Customer Number
          example: '4513074002573466583'
        name1:
          type: string
          description: Name 1
          example: RUN DMC
        name2:
          type: string
          description: Name 2
          example: RICK ROSS
        pinOffset:
          type: integer
          description: PIN Offset
          format: int32
        posServiceCode:
          type: integer
          description: POS Service Code
          format: int32
          example: 101
        cardholderFlag:
          type: string
          description: Cardholder Flag
          example: '0'
        addressLine1:
          type: string
          description: Address Line 1
          example: PORT OF MIAMI
        addressLine2:
          type: string
          description: Address Line 2
          example: 117 E PARKWAY AVE
        city:
          type: string
          description: City
          example: MIAMI
        stateOrProvince:
          type: string
          description: State/Province
          example: FL
        postalCode:
          type: string
          description: Postal Code
          example: '38585'
        languageCode:
          type: string
          description: Language Code
          example: ENG
        visaMiniIndicator:
          type: integer
          description: Visa Mini Indicator
          format: int32
          example: 0
        pinSuppression:
          type: integer
          description: |-
            PIN suppression. The values are:
            0 = Allow PINs
            1 = Suppress PIN generation.
          format: int32
        blockCode:
          type: string
          description: Block Code
        currentCardActivation:
          type: string
          description: |-
            Current card activation. The values are:
            N = No card activation is required or has already occurred
            Y = Card activation needs to occur.
        maximumAuthorizationFrequency:
          type: integer
          description: |-
            Maximum authorization frequency. The values are:
            0 = Not used
            1 = Daily
            2 = Cycle-to-date
            3 = Year-to-date.
          format: int32
        atmCashNumber:
          type: integer
          description: ATM(Automated Teller Machine) Cash Amount
          format: int32
        atmCashAmount:
          type: number
          description: ATM(Automated Teller Machine) Cash Number
        atmCashSingleTransactionLimit:
          type: number
          description: ATM(Automated Teller Machine) Cash Transaction limit
        overTheCounterCashNumber:
          type: integer
          description: Over THe Counter Cash Amount
          format: int32
        overTheCounterCashAmount:
          type: number
          description: Over The Counter Cash Number
        overTheCounterCashSingleTransactionLimit:
          type: number
          description: Over The Counter Transaction Limit
        retailPurchaseNumber:
          type: integer
          description: Retail Amount
          format: int32
        retailPurchaseAmt:
          type: number
          description: Retail Number
        retailPurchaseSingleTransactionLimit:
          type: number
          description: Retail Transaction Limit
        internetPurchaseAmount:
          type: number
          description: Internet Purchase Amount
        internetPurchaseNumber:
          type: number
          description: Internet Purchase Number
        internetPurchaseSingleTransactionLimit:
          type: number
          description: Internet Purchase Single Transaction Limit
        user1:
          type: string
          description: User-defined 1
          example: '1'
        user2:
          type: string
          description: User-defined 2
          example: '2'
        user3:
          type: string
          description: User-defined 3
          example: '3'
        user4:
          type: integer
          description: User-defined 4
          format: int32
          example: 4
        user5:
          type: string
          description: User-defined 5
          example: '5'
        user6:
          type: string
          description: User-defined 6
          example: '6'
        user7:
          type: string
          description: User-defined 7
          example: '7'
        user8:
          type: string
          description: User-defined 8
          example: '8'
        userDate1:
          type: string
          description: User-defined Date 1
          format: date
          example: '2020-03-03'
        userDate2:
          type: string
          description: User-defined Date 2
          format: date
          example: '2020-03-03'
        branchNumber:
          type: integer
          description: Branch Number
          format: int32
        reissueDeliveryOption:
          type: integer
          description: |-
            Reissue delivery option. The values are:
            0 = Regular mail
            1 = First class mail
            2 = Registered mail
            3 = Internal delivery mail
            4 = User-defined.
          format: int32
        nextCardExpirationDate:
          type: string
          description: Next Card Expiration Date
          format: date
          example: '2021-01-01'
        firstIssueBranch:
          type: integer
          description: First Issue Branch
          format: int32
        deliveryOption:
          type: integer
          description: |-
            Delivery option. The values are:
            0 = Regular mail
            1 = First class mail
            2 = Registered mail
            3 = Internal delivery mail
            4 = User-defined.
          format: int32
        authorizationCriteriaTableNumber:
          type: string
          description: Authorization Criteria Table Number
        cardDelayDays:
          type: integer
          description: Card Delay Days
          format: int32
        authorizationSpendingLimitTable:
          type: string
          description: Authorization Spending Limit Table
        assignedSpendingLimits:
          type: array
          description: Assigned spending limits
          items:
            $ref: '#/components/schemas/AssignedSpendingLimits'
        programId:
          type: integer
          description: Program ID
          format: int32
        deviceIndicator:
          type: string
          description: Device Indicator
          example: C
        processType:
          type: integer
          description: |-
            Process type. The values are:
            0 = Same day processing is not required
            1 = Same day processing is required.
          format: int32
        cardholderAffiliationGroupId:
          type: integer
          description: Identification Of The Cardholder’S Affiliation Or Affinity Group
          format: int32
          example: 12348
        cardActionReasonCode:
          type: string
          description: Card Action Reason Code
        enrollmentStatusVBV:
          type: string
          description: |-
            Enrollment status of the card in Verified By Visa. The values are:
            Space = No enrollment (Default)
            C = Cancel enrollment
            N = New enrollment
            U = Update enrollment.
          example: 'N'
        vbvPassword:
          type: string
          description: Vbv Password Or Greeting Message
          example: BANDEBOGOT
        profileId:
          type: integer
          description: Profile ID
          format: int32
          example: 1
        indicatorECommerce:
          type: string
          description: E-Commerce Indicator
          example: '1'
        contactlessIndicator:
          type: string
          description: Contactless Indicator
          example: '1'
        businessRuleName:
          maxLength: 10
          minLength: 0
          type: string
          description: Business rule name
        overrideBusinessRuleName:
          maxLength: 10
          minLength: 0
          type: string
          description: Business rule override, name
        overrideBusinessRuleStartDate:
          type: string
          description: Business rule override, start date
          format: date
        overrideBusinessRuleEndDate:
          type: string
          description: Business rule override, end date
          format: date
        customUserFields:
          $ref: '#/components/schemas/CustomUserFields'
      description: Add Embosser Request
    AssignedSpendingLimits:
      type: object
      properties:
        maximumSpendingLimit:
          type: number
          description: Maximum Spending Limit
        spendingTransaction:
          type: number
          description: Spending Transaction
        spendingFrequency:
          type: integer
          description: Spending Frequency
          format: int32
      description: AddEmbosserL8VFRequest.AssignedSpendingLimits
    CustomUserFields:
      type: object
      properties:
        falconMark:
          maxLength: 2
          minLength: 0
          type: string
          description: Falcon mark
        falconMarkStartDate:
          type: string
          description: Falcon mark start date ("yyyy-MM-dd" format)
          format: date
        falconMarkEndDate:
          type: string
          description: Mark end date ("yyyy-MM-dd" format)
          format: date
        spendLimitsStatus:
          type: string
          description: Spend limits status
        retailPercentageDaily:
          type: string
          description: Retail percentage daily
        retailPercentageMonthToDate:
          type: string
          description: Retail percentage month to date
        retailPercentageYearToDate:
          type: string
          description: Retail percentage year to date
        retailAmountDaily:
          type: string
          description: Retail amount daily
        retailAmountMonthToDate:
          type: string
          description: Retail amount month to date
        retailAmountYearToDate:
          type: string
          description: Retail amount year to date
        cashPercentageDaily:
          type: string
          description: Cash percent daily
        cashPercentageMonthToDate:
          type: string
          description: Cash percent month to date
        cashPercentageYearToDate:
          type: string
          description: Cash percent year to date
        cashAmountDaily:
          type: string
          description: Cash amount daily
        cashAmountMonthToDate:
          type: string
          description: Cash amount month to date
        cashAmountYearToDate:
          type: string
          description: Cash amount year to date
        globalSpendingLimitAmount:
          type: string
          description: Global spending limit amount
        globalSpendingLimitNumber:
          type: string
          description: Global spending limit number
        globalSpendingLimitSingleTransaction:
          type: string
          description: ' Global spending limit for a single transaction'
      description: AddEmbosserL8VFRequest.CustomUserFields
    AddEmbosserL8VFResponse:
      type: object
      properties:
        organizationNumber:
          type: integer
          format: int32
        organizationAssociatedToForeignAccount:
          type: integer
          format: int32
        logo:
          type: integer
          format: int32
        accountNumber:
          type: string
        cardNumber:
          type: string
        cardSequence:
          type: integer
          format: int32
        currentChipSequenceNumber:
          type: integer
          format: int32
    AddEmbosserL8VDRequest:
      required:
        - cardNumber
        - enrollmentStatusVBV
        - organizationNumber
        - postToAccount
        - vbvPassword
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
          enum:
            - 807
        postToAccount:
          type: string
          description: Post-to account
          example: '4513074002573466583'
        cardNumber:
          maxLength: 19
          minLength: 0
          type: string
          description: Card Number
          example: '0004513070406598974'
        cardSequence:
          type: integer
          description: Card Sequence
          format: int32
          example: 1
        cardAction:
          type: integer
          description: Card Action
          format: int32
          example: 1
        numberOfCardsRequested:
          type: integer
          description: Number Of Cards Requested
          format: int32
          example: 1
        typeOfCard:
          type: integer
          description: Type Of Card
          format: int32
        requestedCardType:
          type: integer
          description: Requested Card Type
          format: int32
        typeCardMailer:
          type: integer
          description: Type Card Mailer
          format: int32
        plasticId:
          type: string
          description: Plastic ID
          example: ''
        name1TypeIndicator:
          type: integer
          description: Name 1 Type Indicator
          format: int32
          example: 0
        name2TypeIndicator:
          type: integer
          description: Name 2 Type Indicator
          format: int32
        embossedName1:
          type: string
          description: Embossed Name 1
          example: HELLO
        embossedName2:
          type: string
          description: Embossed Name 2
          example: KIT-KAT WALLER
        securedCodeActivate:
          type: integer
          description: Secured Code Activate
          format: int32
        visaPlusIndicator:
          type: integer
          description: Visa PLUS Indicator
          format: int32
        pinMailerDelayDays:
          type: integer
          description: PIN Mailer Delay Days
          format: int32
          example: 0
        expirationDate:
          type: string
          description: Expiration Date
          format: date
          example: '2021-01-01'
        customerNumber:
          maxLength: 19
          minLength: 0
          type: string
          description: Customer Number
          example: '4513074002573466583'
        name1:
          type: string
          description: Name 1
          example: RUN DMC
        name2:
          type: string
          description: Name 2
          example: RICK ROSS
        pinOffset:
          type: integer
          description: PIN Offset
          format: int32
        posServiceCode:
          type: integer
          description: POS Service Code
          format: int32
          example: 101
        cardholderFlag:
          type: string
          description: Cardholder Flag
          example: '0'
        addressLine1:
          type: string
          description: Address Line 1
          example: PORT OF MIAMI
        addressLine2:
          type: string
          description: Address Line 2
          example: 117 E PARKWAY AVE
        city:
          type: string
          description: City
          example: MIAMI
        stateOrProvince:
          type: string
          description: State/Province
          example: FL
        postalCode:
          type: string
          description: Postal Code
          example: '38585'
        languageCode:
          type: string
          description: Language Code
          example: ENG
        visaMiniIndicator:
          type: integer
          description: Visa Mini Indicator
          format: int32
          example: 0
        pinSuppression:
          type: integer
          description: |-
            PIN suppression. The values are:
            0 = Allow PINs
            1 = Suppress PIN generation.
          format: int32
        blockCode:
          type: string
          description: Block Code
        currentCardActivation:
          type: string
          description: |-
            Current card activation. The values are:
            N = No card activation is required or has already occurred
            Y = Card activation needs to occur.
        maximumAuthorizationFrequency:
          type: integer
          description: |-
            Maximum authorization frequency. The values are:
            0 = Not used
            1 = Daily
            2 = Cycle-to-date
            3 = Year-to-date.
          format: int32
        atmCashNumber:
          type: integer
          description: ATM(Automated Teller Machine) Cash Amount
          format: int32
        atmCashAmount:
          type: number
          description: ATM(Automated Teller Machine) Cash Number
        atmCashSingleTransactionLimit:
          type: number
          description: ATM(Automated Teller Machine) Cash Transaction limit
        overTheCounterCashNumber:
          type: integer
          description: Over THe Counter Cash Amount
          format: int32
        overTheCounterCashAmount:
          type: number
          description: Over The Counter Cash Number
        overTheCounterCashSingleTransactionLimit:
          type: number
          description: Over The Counter Transaction Limit
        retailPurchaseNumber:
          type: integer
          description: Retail Amount
          format: int32
        retailPurchaseAmt:
          type: number
          description: Retail Number
        retailPurchaseSingleTransactionLimit:
          type: number
          description: Retail Transaction Limit
        internetPurchaseAmount:
          type: number
          description: Internet Purchase Amount
        internetPurchaseNumber:
          type: number
          description: Internet Purchase Number
        internetPurchaseSingleTransactionLimit:
          type: number
          description: Internet Purchase Single Transaction Limit
        user1:
          type: string
          description: User-defined 1
          example: '1'
        user2:
          type: string
          description: User-defined 2
          example: '2'
        user3:
          type: string
          description: User-defined 3
          example: '3'
        user4:
          type: integer
          description: User-defined 4
          format: int32
          example: 4
        user5:
          type: string
          description: User-defined 5
          example: '5'
        user6:
          type: string
          description: User-defined 6
          example: '6'
        user7:
          type: string
          description: User-defined 7
          example: '7'
        user8:
          type: string
          description: User-defined 8
          example: '8'
        userDate1:
          type: string
          description: User-defined Date 1
          format: date
          example: '2020-03-03'
        userDate2:
          type: string
          description: User-defined Date 2
          format: date
          example: '2020-03-03'
        branchNumber:
          type: integer
          description: Branch Number
          format: int32
        reissueDeliveryOption:
          type: integer
          description: |-
            Reissue delivery option. The values are:
            0 = Regular mail
            1 = First class mail
            2 = Registered mail
            3 = Internal delivery mail
            4 = User-defined.
          format: int32
        nextCardExpirationDate:
          type: string
          description: Next Card Expiration Date
          format: date
          example: '2021-01-01'
        firstIssueBranch:
          type: integer
          description: First Issue Branch
          format: int32
        deliveryOption:
          type: integer
          description: |-
            Delivery option. The values are:
            0 = Regular mail
            1 = First class mail
            2 = Registered mail
            3 = Internal delivery mail
            4 = User-defined.
          format: int32
        authorizationCriteriaTableNumber:
          type: string
          description: Authorization Criteria Table Number
        cardDelayDays:
          type: integer
          description: Card Delay Days
          format: int32
        authorizationSpendingLimitTable:
          type: string
          description: Authorization Spending Limit Table
        assignedSpendingLimits:
          type: array
          description: Assigned spending limits
          items:
            $ref: '#/components/schemas/AssignedSpendingLimits'
        programId:
          type: integer
          description: Program ID
          format: int32
        deviceIndicator:
          type: string
          description: Device Indicator
          example: C
        processType:
          type: integer
          description: |-
            Process type. The values are:
            0 = Same day processing is not required
            1 = Same day processing is required.
          format: int32
        cardholderAffiliationGroupId:
          type: integer
          description: Identification Of The Cardholder’S Affiliation Or Affinity Group
          format: int32
          example: 12348
        cardActionReasonCode:
          type: string
          description: Card Action Reason Code
        enrollmentStatusVBV:
          type: string
          description: |-
            Enrollment status of the card in Verified By Visa. The values are:
            Space = No enrollment (Default)
            C = Cancel enrollment
            N = New enrollment
            U = Update enrollment.
          example: 'N'
        vbvPassword:
          type: string
          description: Vbv Password Or Greeting Message
          example: BANDEBOGOT
        customUserFields:
          $ref: '#/components/schemas/CustomUserFields'
      description: Add Embosser Request
    AddEmbosserL8VDResponse:
      type: object
      properties:
        organizationNumber:
          type: integer
          format: int32
        organizationAssociatedToForeignAccount:
          type: integer
          format: int32
        logo:
          type: integer
          format: int32
        accountNumber:
          type: string
        cardNumber:
          type: string
        cardSequence:
          type: integer
          format: int32
        currentChipSequenceNumber:
          type: integer
          format: int32
    EmbosserDetailsInquiryRequest:
      required:
        - cardNumber
        - cardSequence
        - foreignUse
        - organizationNumber
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
          enum:
            - 807
        cardNumber:
          maxLength: 19
          minLength: 12
          type: string
          description: Card Number
          example: '0004513070406598974'
        cardSequence:
          type: integer
          description: Card sequence
          format: int32
          example: 1
        foreignUse:
          type: string
          description: Card sequence
          example: '1'
      description: Card Embosser Block Request
    AssignedSpendLimits:
      type: object
      properties:
        spendingLimit:
          type: integer
          format: int64
        transactionAllowed:
          type: integer
          format: int32
        frequencyCommercialCard:
          type: integer
          format: int32
    AuthorizationData:
      type: object
      properties:
        retailAmount:
          type: number
        retailNumber:
          type: number
        automatedTellerMachineCashAutomatedTellerMachine:
          type: number
        automatedTellerMachineCashNumber:
          type: number
        overTheCounterAmount:
          type: number
        overTheCounterCashNumber:
          type: number
        automatedTellerMachineCashSingleTransaction:
          type: number
        overTheCounterCashSingleTransaction:
          type: number
        retailSingleTransaction:
          type: number
        globalSpendingLimitNumber:
          type: string
        globalSpendingLimitAmount:
          type: number
        globalSpendingLimitForSingleTransaction:
          type: number
    CardInformationData:
      type: object
      properties:
        codeIdentificationNumberSpendingLimits:
          type: string
        assignedSpendLimits:
          $ref: '#/components/schemas/AssignedSpendLimits'
    CustomUserData:
      type: object
      properties:
        falconMarking:
          type: string
        falconMarkingStartDate:
          type: string
          format: date
        falconMarkingEndDate:
          type: string
          format: date
        spendLimitsStatus:
          type: string
        retailPercentDaily:
          type: integer
          format: int32
        retailPercentMonthToDate:
          type: integer
          format: int32
        retailPercentYearToDate:
          type: integer
          format: int32
        retailAmountDaily:
          type: number
        retailAmountMonthToDate:
          type: number
        retailAmountYearToDate:
          type: number
        cashPercentDaily:
          type: integer
          format: int32
        cashPercentMonthToDay:
          type: integer
          format: int32
        cashPercentYearToDay:
          type: integer
          format: int32
        cashAmountDaily:
          type: number
        cashAmountMonthToDate:
          type: number
        cashAmountYearToDate:
          type: number
        cashPostedTodayNumber:
          type: number
        cashPostedMonthToDateNumber:
          type: number
        cashPostedYearToDateNumber:
          type: number
        cashPostedTodayAmount:
          type: number
        cashPostedMonthToDateAmount:
          type: number
        cashPostedYearToDateAmount:
          type: number
        cashDeclineTodayNumber:
          type: number
        cashDeclineMonthToDayNumber:
          type: number
        cashDeclineYearToDayNumber:
          type: number
        cashDeclineTodayAmount:
          type: number
        cashDeclineMonthToDayAmount:
          type: number
        cashDeclineYearToDayAmount:
          type: number
        retailPostedTodayNumber:
          type: number
        retailPostedMonthToDayNumber:
          type: number
        retailPostedYearToDayNumber:
          type: number
        retailPostedTodayAmount:
          type: number
        retailPostedMonthToDayAmount:
          type: number
        retailPostedYearToDayAmount:
          type: number
        retailDeclineTodayNumber:
          type: number
        retailDeclineMonthToDayNumber:
          type: number
        retailDeclineYearToDayNumber:
          type: number
        retailDeclineToday:
          type: number
        retailDeclineMountToDayAmount:
          type: number
        retailDeclineYearToDayAmount:
          type: number
    EmbosserDetailsInquiryResponse:
      type: object
      properties:
        organizationNumber:
          type: integer
          format: int32
        logo:
          type: integer
          format: int32
        foreignUse:
          type: integer
          format: int32
        cardNumber:
          type: string
        cardSequence:
          type: integer
          format: int32
        cardTechnology:
          type: integer
          format: int32
        postToAccount:
          type: string
        fraud:
          type: string
        prepaidIndicator:
          type: integer
          format: int32
        statusCode:
          type: string
        dateStatus:
          type: string
          format: date
        statusSecureId:
          type: integer
          format: int32
        fraudEffectiveDate:
          type: string
          format: date
        embosserRecordReplacement:
          type: string
        numberCardsOutstanding:
          type: integer
          format: int32
        numberCardsReturned:
          type: integer
          format: int32
        currentChipSequence:
          type: integer
          format: int32
        cardIssueAction:
          type: integer
          format: int32
        numberCardsRequested:
          type: integer
          format: int32
        chipSequenceNumber:
          type: integer
          format: int32
        typeOfCard:
          type: integer
          format: int32
        requestedCardType:
          type: integer
          format: int32
        typeCardMailer:
          type: string
        plasticId:
          type: string
        secureActivation:
          type: integer
          format: int32
        embosserNameType1:
          type: integer
          format: int32
        embosserNameType2:
          type: integer
          format: int32
        embosserName1:
          type: string
        embosserName2:
          type: string
        cardHolderName1:
          type: string
        cardHolderName2:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        stateProvince:
          type: string
        cityPortion:
          type: string
        postalCodePortion:
          type: string
        plusIndicator:
          type: integer
          format: int32
        dateExpire:
          type: string
          format: date
        customerNumber:
          type: string
        currentPinOffset:
          type: integer
          format: int32
        previousPinOffset:
          type: integer
          format: int32
        pinDelayDays:
          type: integer
          format: int32
        typeOfPointOfSale:
          type: integer
          format: int32
        cardHolderFlag:
          type: string
        dateWarningBulletin:
          type: string
          format: date
        regionCode:
          type: string
        languageCode:
          type: string
        visaMiniCardVersion:
          type: integer
          format: int32
        pinSuppression:
          type: integer
          format: int32
        blockCode:
          type: string
        dateBlock:
          type: string
          format: date
        blockSecureId:
          type: string
        warningCode1:
          type: string
        warningCode7:
          type: string
        numberOfIssueAttemptsRemaining:
          type: integer
          format: int32
        currentDateExpirationDate:
          type: string
          format: date
        currentCardActivation:
          type: string
        dateEmbossedMagneticStripeCard:
          type: string
          format: date
        dateCurrentMagneticCardMailed:
          type: string
          format: date
        lastExpirationDate:
          type: string
          format: date
        lastCardActivation:
          type: string
        dateFirstCardVerify:
          type: string
          format: date
        dateLastPlasticIssue:
          type: string
          format: date
        frequencyMaximumAuthorizationParameters:
          type: integer
          format: int32
        authorizationData:
          $ref: '#/components/schemas/AuthorizationData'
        internetPurchaseData:
          $ref: '#/components/schemas/InternetPurchaseData'
        identificationNumberAuthorization:
          type: string
        identificationNumberSpendingLimitsTable:
          type: string
        userData:
          $ref: '#/components/schemas/UserData'
        numberCurrentlyDisplayedEmbosserRecord:
          type: string
        adminNumberBranch:
          type: integer
          format: int32
        nextExpirationDateOfTheCard:
          type: string
          format: date
        branchIdentifierCardMailingLocation:
          type: integer
          format: int32
        cardInformationData:
          $ref: '#/components/schemas/CardInformationData'
        useAutomatedTellerMachineCashNumberData:
          $ref: '#/components/schemas/UseAutomatedTellerMachineCashNumberData'
        useAutomatedTellerMachineCashAmountData:
          $ref: '#/components/schemas/UseAutomatedTellerMachineCashAmountData'
        useOverTheCounterCashNumberData:
          $ref: '#/components/schemas/UseOverTheCounterCashNumberData'
        useOverTheCounterCashAmountData:
          $ref: '#/components/schemas/UseOverTheCounterCashAmountData'
        retailNumberData:
          $ref: '#/components/schemas/RetailNumberData'
        retailAmountData:
          $ref: '#/components/schemas/RetailAmountData'
        internetPurchaseNumberData:
          $ref: '#/components/schemas/InternetPurchaseNumberData'
        internetPurchaseAmountData:
          $ref: '#/components/schemas/InternetPurchaseAmountData'
        prepaidLimits:
          $ref: '#/components/schemas/PrepaidLimits'
        spendingLimitsData:
          $ref: '#/components/schemas/SpendingLimitsData'
        cardDelayDays:
          type: integer
          format: int32
        cardDelayStatus:
          type: string
        mailerDate:
          type: string
          format: date
        pinOverrideActionEmbosserLevel:
          type: string
        cardHolderType:
          type: integer
          format: int32
        pinDelayStatusMailer:
          type: string
        cardActivatedDate:
          type: string
          format: date
        dateMostRecentlyIssueCard:
          type: string
          format: date
        deliveryOptionReissuedCards:
          type: integer
          format: int32
        deliveryOptionIssuedCards:
          type: integer
          format: int32
        cardDeliveryStatus:
          type: string
        cardDeliveryDate:
          type: string
          format: date
        deliveryStatusPreviousCard:
          type: string
        deliveryDatePreviousCard:
          type: string
          format: date
        deliveryStatusCurrentPinMailer:
          type: string
        deliveryDateCurrentPinMailer:
          type: string
          format: date
        deliveryStatusPreviousPinMailer:
          type: string
        deliveryDatePreviousPinMailer:
          type: string
          format: date
        dateNextPinChanged:
          type: string
          format: date
        cardHolderAffiliation:
          type: integer
          format: int32
        cardVerifyByVisaStatus:
          type: string
        customUserData:
          $ref: '#/components/schemas/CustomUserData'
    InternetPurchaseAmountData:
      type: object
      properties:
        today:
          type: number
        cycleToDate:
          type: number
        yearToDate:
          type: number
        lifeToDate:
          type: number
    InternetPurchaseData:
      type: object
      properties:
        purchaseNumber:
          type: number
        purchaseAmount:
          type: number
        purchaseSingleTransactionLimit:
          type: number
    InternetPurchaseNumberData:
      type: object
      properties:
        today:
          type: integer
          format: int32
        cycleToDate:
          type: integer
          format: int32
        yearToDate:
          type: integer
          format: int32
        lifeToDate:
          type: integer
          format: int32
    PrepaidLimits:
      type: object
      properties:
        spendAmount:
          type: number
        spendAvailable:
          type: integer
          format: int32
        spendExpirationDate:
          type: string
          format: date
    RetailAmountData:
      type: object
      properties:
        today:
          type: number
        cycleToDate:
          type: number
        yearToDate:
          type: number
        lifeToDate:
          type: number
    RetailNumberData:
      type: object
      properties:
        today:
          type: integer
          format: int32
        cycleToDate:
          type: integer
          format: int32
        yearToDate:
          type: integer
          format: int32
        lifeToDate:
          type: integer
          format: int32
    SpendingLimitsData:
      type: object
      properties:
        totalDailyAmount:
          type: number
        totalDailyNumber:
          type: integer
          format: int32
        totalWeekToDateAmount:
          type: number
        totalWeekToDateNumber:
          type: integer
          format: int32
        totalCycleToDateAmount:
          type: number
        totalCycleToDateNumber:
          type: integer
          format: int32
        totalYearToDateAmount:
          type: number
        totalYearToDateNumber:
          type: integer
          format: int32
        totalLifeToDateAmount:
          type: number
        totalLifeToDateNumber:
          type: integer
          format: int32
    UseAutomatedTellerMachineCashAmountData:
      type: object
      properties:
        today:
          type: number
        cycleToDate:
          type: number
        yearToDate:
          type: number
        lifeToDate:
          type: number
    UseAutomatedTellerMachineCashNumberData:
      type: object
      properties:
        today:
          type: integer
          format: int32
        cycleToDate:
          type: integer
          format: int32
        yearToDate:
          type: integer
          format: int32
        lifeToDate:
          type: integer
          format: int32
    UseOverTheCounterCashAmountData:
      type: object
      properties:
        today:
          type: number
        cycleToDate:
          type: number
        yearToDate:
          type: number
        lifeToDate:
          type: number
    UseOverTheCounterCashNumberData:
      type: object
      properties:
        today:
          type: integer
          format: int32
        cycleToDate:
          type: integer
          format: int32
        yearToDate:
          type: integer
          format: int32
        lifeToDate:
          type: integer
          format: int32
    EncryptedCardPanRequest:
      required:
        - Card Function
        - Card Number
        - Organization
      type: object
      properties:
        Organization:
          maxLength: 3
          minLength: 0
          type: string
          description: 'Identification number of the organization associated with this User (Sign on name). '
          example: '807'
        Card Number:
          maxLength: 32
          minLength: 0
          type: string
          description: 'The data displays is dependant on the type. Values can represent Card Number, Pan Token number or Encrypted Card Number. '
        Card Sequence:
          type: integer
          description: |
            Identification number assigned to an Embosser record to distinguish between multiple cards issued with the same card number. Valid Values -0001-9998. Default is 1 
          format: int32
          example: 1
        Card Function:
          pattern: ^(P|C|E)$
          type: string
          description: |
            Type of CARD PAN being used in this service. If input contains a 3DES encrypted card and not a PAN token. This should be decrypted to obtain clear card in service to read the card file. Card number in output should be sent after encryption. Valid Values: 
            C - Card number
            P - Pan Token number
            E - Encrypted PAN number
          example: C
      description: Encrypted Card Pan
    EncryptedCardPanResponse:
      type: object
      properties:
        Organization:
          type: string
          description: 'Identification number of the organization associated with this User (Sign on name). '
        'Encrypted Card Number ':
          type: string
          description: 'Encrypted Card Number '
        'PAN token ':
          type: string
          description: 'The data displays is dependant on the type. Values can represent Card Number, Pan Token number or Encrypted Card Number. '
        'Card Sequence ':
          type: integer
          description: Identification number assigned to an Embosser record to distinguish between multiple cards issued with the same card number.  Valid Values -0001-9998
          format: int32
        'Card Expiration Date ':
          type: integer
          description: Date on which the card expires.
          format: int32
        Name on Card 1:
          type: string
          description: Name to be embossed on the first embossing line of the card.Enter the name exactly as it is to appear on the card.
        'Name on Card 2 ':
          type: string
          description: Additional name to be embossed on the second embossing line of the card. Enter the name exactly as it is to appear on the card.  For example, this field may contain the name of a business if the card is issued for a business account.
        DDA Routing number:
          type: integer
          description: |
            Dual-use field that accepts a nine-digit routing/transit number (ACH format) or a ten-digit bank ID (non-ACH format) to identify thefinancial institution to receive direct debit transactions for the account.
            The format is:
            ACH format = 0 + nine-digit routing/transit number
            Non-ACH format = ten-digit bank ID
          format: int32
        DDA account number:
          type: string
          description: Demand deposit account (DDA) number associated with direct debit processing.
        Savings Routing Number:
          type: integer
          description: |
            Dual-use field that accepts a nine-digit routing/transit number (ACH format) or a ten-digit bank ID (non-ACH format) to identify the financial institution to receive direct debit transactions for the account.
            The format is:
            ACH format = 0 + nine-digit routing/transit number
            Non-ACH format = ten-digit bank ID
          format: int32
        Savings account number:
          type: string
          description: Savings account number associated with direct debit processing.
        CMS Account number:
          type: string
          description: Identification number of the Account Base Segment record to which CMS posts transactions that are received for this Embosser record. The Embosser record is identified by the card number and record number.
        CMS Customer number:
          type: string
          description: Customer number that identifies the Customer Name/Address record which lists the mailing address of the cardholder. The customer number entered must identify an existing Customer Name/Address record previously added into CMS. If this field is blank, the name and mailing address in the Embosser record is used (NAME 1–2, ADDRESS LINE 1–2, CITY, ST/ PR, and POSTAL CODE on ARME02).
      description: EncryptedCardPanResponse
    EmbosserDetailsRequest:
      required:
        - cardNumber
        - cardSequence
        - foreignUse
        - organizationNumber
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
          enum:
            - 807
        cardNumber:
          maxLength: 19
          minLength: 12
          type: string
          description: Card Number
          example: '0004513070406598974'
        cardSequence:
          type: integer
          description: Card sequence
          format: int32
          example: 1
        foreignUse:
          type: string
          description: Card sequence
          example: '1'
      description: Card Embosser Block Request
    EmbosserDetailsResponse:
      type: object
      properties:
        organizationNumber:
          type: integer
          format: int32
        logo:
          type: integer
          format: int32
        foreignUse:
          type: integer
          format: int32
        cardNumber:
          type: string
        cardSequence:
          type: integer
          format: int32
        cardTechnology:
          type: integer
          format: int32
        postToAccount:
          type: string
        fraud:
          type: string
        prepaidIndicator:
          type: integer
          format: int32
        statusCode:
          type: string
        dateStatus:
          type: string
          format: date
        statusSecureId:
          type: integer
          format: int32
        fraudEffectiveDate:
          type: string
          format: date
        embosserRecordReplacement:
          type: string
        numberCardsOutstanding:
          type: integer
          format: int32
        numberCardsReturned:
          type: integer
          format: int32
        currentChipSequence:
          type: integer
          format: int32
        cardIssueAction:
          type: integer
          format: int32
        numberCardsRequested:
          type: integer
          format: int32
        chipSequenceNumber:
          type: integer
          format: int32
        typeOfCard:
          type: integer
          format: int32
        requestedCardType:
          type: integer
          format: int32
        typeCardMailer:
          type: string
        plasticId:
          type: string
        secureActivation:
          type: integer
          format: int32
        embosserNameType1:
          type: integer
          format: int32
        embosserNameType2:
          type: integer
          format: int32
        embosserName1:
          type: string
        embosserName2:
          type: string
        cardHolderName1:
          type: string
        cardHolderName2:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        stateProvince:
          type: string
        cityPortion:
          type: string
        postalCodePortion:
          type: string
        plusIndicator:
          type: integer
          format: int32
        dateExpire:
          type: string
          format: date
        customerNumber:
          type: string
        currentPinOffset:
          type: integer
          format: int32
        previousPinOffset:
          type: integer
          format: int32
        pinDelayDays:
          type: integer
          format: int32
        typeOfPointOfSale:
          type: integer
          format: int32
        cardHolderFlag:
          type: string
        dateWarningBulletin:
          type: string
          format: date
        regionCode:
          type: string
        languageCode:
          type: string
        visaMiniCardVersion:
          type: integer
          format: int32
        pinSuppression:
          type: integer
          format: int32
        blockCode:
          type: string
        dateBlock:
          type: string
          format: date
        blockSecureId:
          type: string
        warningCode1:
          type: string
        warningCode7:
          type: string
        numberOfIssueAttemptsRemaining:
          type: integer
          format: int32
        currentDateExpirationDate:
          type: string
          format: date
        currentCardActivation:
          type: string
        dateEmbossedMagneticStripeCard:
          type: string
          format: date
        dateCurrentMagneticCardMailed:
          type: string
          format: date
        lastExpirationDate:
          type: string
          format: date
        lastCardActivation:
          type: string
        dateFirstCardVerify:
          type: string
          format: date
        dateLastPlasticIssue:
          type: string
          format: date
        frequencyMaximumAuthorizationParameters:
          type: integer
          format: int32
        authorizationData:
          $ref: '#/components/schemas/AuthorizationData'
        internetPurchaseData:
          $ref: '#/components/schemas/InternetPurchaseData'
        identificationNumberAuthorization:
          type: string
        identificationNumberSpendingLimitsTable:
          type: string
        userData:
          $ref: '#/components/schemas/UserData'
        numberCurrentlyDisplayedEmbosserRecord:
          type: string
        adminNumberBranch:
          type: integer
          format: int32
        nextExpirationDateOfTheCard:
          type: string
          format: date
        branchIdentifierCardMailingLocation:
          type: integer
          format: int32
        cardInformationData:
          $ref: '#/components/schemas/CardInformationData'
        useAutomatedTellerMachineCashNumberData:
          $ref: '#/components/schemas/UseAutomatedTellerMachineCashNumberData'
        useAutomatedTellerMachineCashAmountData:
          $ref: '#/components/schemas/UseAutomatedTellerMachineCashAmountData'
        useOverTheCounterCashNumberData:
          $ref: '#/components/schemas/UseOverTheCounterCashNumberData'
        useOverTheCounterCashAmountData:
          $ref: '#/components/schemas/UseOverTheCounterCashAmountData'
        retailNumberData:
          $ref: '#/components/schemas/RetailNumberData'
        retailAmountData:
          $ref: '#/components/schemas/RetailAmountData'
        internetPurchaseNumberData:
          $ref: '#/components/schemas/InternetPurchaseNumberData'
        internetPurchaseAmountData:
          $ref: '#/components/schemas/InternetPurchaseAmountData'
        prepaidLimits:
          $ref: '#/components/schemas/PrepaidLimits'
        spendingLimitsData:
          $ref: '#/components/schemas/SpendingLimitsData'
        cardDelayDays:
          type: integer
          format: int32
        cardDelayStatus:
          type: string
        mailerDate:
          type: string
          format: date
        pinOverrideActionEmbosserLevel:
          type: string
        cardHolderType:
          type: integer
          format: int32
        pinDelayStatusMailer:
          type: string
        cardActivatedDate:
          type: string
          format: date
        dateMostRecentlyIssueCard:
          type: string
          format: date
        deliveryOptionReissuedCards:
          type: integer
          format: int32
        deliveryOptionIssuedCards:
          type: integer
          format: int32
        cardDeliveryStatus:
          type: string
        cardDeliveryDate:
          type: string
          format: date
        deliveryStatusPreviousCard:
          type: string
        deliveryDatePreviousCard:
          type: string
          format: date
        deliveryStatusCurrentPinMailer:
          type: string
        deliveryDateCurrentPinMailer:
          type: string
          format: date
        deliveryStatusPreviousPinMailer:
          type: string
        deliveryDatePreviousPinMailer:
          type: string
          format: date
        dateNextPinChanged:
          type: string
          format: date
        cardHolderAffiliation:
          type: integer
          format: int32
        cardVerifyByVisaStatus:
          type: string
        customUserData:
          $ref: '#/components/schemas/CustomUserData'
    EmbosserDetailsL8VCRequest:
      required:
        - cardNumber
        - cardSequence
        - foreignUse
        - organizationNumber
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
          enum:
            - 807
        cardNumber:
          maxLength: 19
          minLength: 12
          type: string
          description: Card Number
          example: '0004513070406598974'
        cardSequence:
          type: integer
          description: Card sequence
          format: int32
          example: 1
        foreignUse:
          type: string
          description: Foreign Use
          example: '1'
      description: Card Embosser Block Request
    EmbosserDetailsL8VCResponse:
      type: object
      properties:
        organizationNumber:
          type: integer
          format: int32
        logo:
          type: integer
          format: int32
        foreignUse:
          type: integer
          format: int32
        cardNumber:
          type: string
        cardSequence:
          type: integer
          format: int32
        cardTechnology:
          type: integer
          format: int32
        postToAccount:
          type: string
        fraud:
          type: string
        prepaidIndicator:
          type: integer
          format: int32
        statusCode:
          type: string
        dateStatus:
          type: string
          format: date
        statusSecureId:
          type: string
        fraudEffectiveDate:
          type: string
          format: date
        embosserRecordReplacement:
          type: string
        numberCardsOutstanding:
          type: integer
          format: int32
        numberCardsReturned:
          type: integer
          format: int32
        currentChipSequence:
          type: integer
          format: int32
        cardIssueAction:
          type: integer
          format: int32
        numberCardsRequested:
          type: integer
          format: int32
        chipSequenceNumber:
          type: integer
          format: int32
        typeOfCard:
          type: integer
          format: int32
        requestedCardType:
          type: integer
          format: int32
        typeCardMailer:
          type: string
        plasticId:
          type: string
        secureActivation:
          type: integer
          format: int32
        embosserNameType1:
          type: integer
          format: int32
        embosserNameType2:
          type: integer
          format: int32
        embosserName1:
          type: string
        embosserName2:
          type: string
        cardHolderName1:
          type: string
        cardHolderName2:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        stateProvince:
          type: string
        cityPortion:
          type: string
        postalCodePortion:
          type: string
        plusIndicator:
          type: integer
          format: int32
        dateExpire:
          type: string
          format: date
        customerNumber:
          type: string
        currentPinOffset:
          type: integer
          format: int32
        previousPinOffset:
          type: integer
          format: int32
        pinDelayDays:
          type: integer
          format: int32
        typeOfPointOfSale:
          type: integer
          format: int32
        cardHolderFlag:
          type: string
        dateWarningBulletin:
          type: string
          format: date
        regionCode:
          type: string
        languageCode:
          type: string
        visaMiniCardVersion:
          type: integer
          format: int32
        pinSuppression:
          type: integer
          format: int32
        blockCode:
          type: string
        dateBlock:
          type: string
          format: date
        blockSecureId:
          type: string
        warningCode1:
          type: string
        warningCode7:
          type: string
        numberOfIssueAttemptsRemaining:
          type: integer
          format: int32
        currentDateExpirationDate:
          type: string
          format: date
        currentCardActivation:
          type: string
        dateEmbossedMagneticStripeCard:
          type: string
          format: date
        dateCurrentMagneticCardMailed:
          type: string
          format: date
        lastExpirationDate:
          type: string
          format: date
        lastCardActivation:
          type: string
        dateFirstCardVerify:
          type: string
          format: date
        dateLastPlasticIssue:
          type: string
          format: date
        frequencyMaximumAuthorizationParameters:
          type: integer
          format: int32
        authorizationData:
          $ref: '#/components/schemas/AuthorizationData'
        internetPurchaseData:
          $ref: '#/components/schemas/InternetPurchaseData'
        identificationNumberAuthorization:
          type: string
        identificationNumberSpendingLimitsTable:
          type: string
        userData:
          $ref: '#/components/schemas/UserData'
        numberCurrentlyDisplayedEmbosserRecord:
          type: string
        adminNumberBranch:
          type: integer
          format: int32
        nextExpirationDateOfTheCard:
          type: string
          format: date
        branchIdentifierCardMailingLocation:
          type: integer
          format: int32
        cardInformationData:
          $ref: '#/components/schemas/CardInformationData'
        useAutomatedTellerMachineCashNumberData:
          $ref: '#/components/schemas/UseAutomatedTellerMachineCashNumberData'
        useAutomatedTellerMachineCashAmountData:
          $ref: '#/components/schemas/UseAutomatedTellerMachineCashAmountData'
        useOverTheCounterCashNumberData:
          $ref: '#/components/schemas/UseOverTheCounterCashNumberData'
        useOverTheCounterCashAmountData:
          $ref: '#/components/schemas/UseOverTheCounterCashAmountData'
        retailNumberData:
          $ref: '#/components/schemas/RetailNumberData'
        retailAmountData:
          $ref: '#/components/schemas/RetailAmountData'
        internetPurchaseNumberData:
          $ref: '#/components/schemas/InternetPurchaseNumberData'
        internetPurchaseAmountData:
          $ref: '#/components/schemas/InternetPurchaseAmountData'
        prepaidLimits:
          $ref: '#/components/schemas/PrepaidLimits'
        spendingLimitsData:
          $ref: '#/components/schemas/SpendingLimitsData'
        cardDelayDays:
          type: integer
          format: int32
        cardDelayStatus:
          type: string
        mailerDate:
          type: string
          format: date
        pinOverrideActionEmbosserLevel:
          type: string
        cardHolderType:
          type: integer
          format: int32
        pinDelayStatusMailer:
          type: string
        cardActivatedDate:
          type: string
          format: date
        dateMostRecentlyIssueCard:
          type: string
          format: date
        deliveryOptionReissuedCards:
          type: integer
          format: int32
        deliveryOptionIssuedCards:
          type: integer
          format: int32
        cardDeliveryStatus:
          type: string
        cardDeliveryDate:
          type: string
          format: date
        deliveryStatusPreviousCard:
          type: string
        deliveryDatePreviousCard:
          type: string
          format: date
        deliveryStatusCurrentPinMailer:
          type: string
        deliveryDateCurrentPinMailer:
          type: string
          format: date
        deliveryStatusPreviousPinMailer:
          type: string
        deliveryDatePreviousPinMailer:
          type: string
          format: date
        dateNextPinChanged:
          type: string
          format: date
        cardHolderAffiliation:
          type: string
        cardVerifyByVisaStatus:
          type: string
        customUserData:
          $ref: '#/components/schemas/CustomUserData'
        custEmbSeq:
          type: string
          description: Custom Embosser Sequence Number
        travelInd:
          type: string
          description: Travel Indicator
        travelData:
          type: array
          description: Travel Data
          items:
            $ref: '#/components/schemas/TravelData'
        vauLastRsnCode:
          type: string
          description: Visa Account Updater Last Reason Code
        noCvmCounter:
          type: string
          description: No Card Verification Method Counter
        noCvmAmt:
          type: string
          description: No Card Verification Method Amount
        profileId:
          type: string
          description: Profile ID
        ecommInd:
          type: string
          description: E-Commerce Indicator
        contlsInd:
          type: string
          description: Contactless Indicator
        authRstrTbl:
          type: string
          description: Authorization Restart Table
        authCrLm:
          type: string
          description: Authorization Credit Limit
        ctdAuthAmt:
          type: string
          description: Cycle To Date Authorization Amount
        digiCardInd:
          type: string
          description: Digital Card Indicator
        embCode1:
          type: string
          description: Embosser User Code 1
        embCode2:
          type: string
          description: Embosser User Code 1
        embCode3:
          type: string
          description: Embosser User Code 1
        embCode4:
          type: string
          description: Embosser User Code 1
        embCode5:
          type: string
          description: Embosser User Code 5
        embCode6:
          type: string
          description: Embosser User Code 6
        embCode7:
          type: string
          description: Embosser User Code 7
        embCode8:
          type: string
          description: Embosser User Code 8
        embDate1:
          type: string
          description: Embosser User Date 1
        embDate2:
          type: string
          description: Embosser User Date 2
        dvcInd:
          type: string
          description: DVC Indicator
        pinReset:
          type: string
          description: PIN Reset
        dateLastMaintained:
          type: string
          description: ' Date Last Maintained'
          format: date
        newAcctCard:
          type: string
          description: ' New Account Card'
        sdpFlag:
          type: string
          description: ' Same Day Processing Flag'
        internationalSingleTransaction:
          type: string
        pinTryLimit:
          type: integer
          format: int32
        transferNextAllowDate:
          type: string
          format: date
        transferReplacementIndicator:
          type: integer
          format: int32
      description: EmbosserDetailsL8VCResponse
    TravelData:
      type: object
      properties:
        travelCountry:
          type: string
        travelStartDt:
          type: string
        travelEndDt:
          type: string
      description: Travel Data
    EmbosserDetailsL8VBRequest:
      required:
        - cardNumber
        - cardSequence
        - foreignUse
        - organizationNumber
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
          enum:
            - 807
        cardNumber:
          maxLength: 19
          minLength: 12
          type: string
          description: Card Number
          example: '0004513070406598974'
        cardSequence:
          type: integer
          description: Card sequence
          format: int32
          example: 1
        foreignUse:
          type: string
          description: Foreign Use
          example: '1'
      description: Card Embosser Block Request
    EmbosserDetailsL8VBResponse:
      type: object
      properties:
        organizationNumber:
          type: integer
          format: int32
        logo:
          type: integer
          format: int32
        foreignUse:
          type: integer
          format: int32
        cardNumber:
          type: string
        cardSequence:
          type: integer
          format: int32
        cardTechnology:
          type: integer
          format: int32
        postToAccount:
          type: string
        fraud:
          type: string
        prepaidIndicator:
          type: integer
          format: int32
        statusCode:
          type: string
        dateStatus:
          type: string
        statusSecureId:
          type: string
        fraudEffectiveDate:
          type: string
          format: date
        embosserRecordReplacement:
          type: string
        numberCardsOutstanding:
          type: integer
          format: int32
        numberCardsReturned:
          type: integer
          format: int32
        currentChipSequence:
          type: integer
          format: int32
        cardIssueAction:
          type: integer
          format: int32
        numberCardsRequested:
          type: integer
          format: int32
        chipSequenceNumber:
          type: integer
          format: int32
        typeOfCard:
          type: integer
          format: int32
        requestedCardType:
          type: integer
          format: int32
        typeCardMailer:
          type: string
        plasticId:
          type: string
        secureActivation:
          type: integer
          format: int32
        embosserNameType1:
          type: integer
          format: int32
        embosserNameType2:
          type: integer
          format: int32
        embosserName1:
          type: string
        embosserName2:
          type: string
        cardHolderName1:
          type: string
        cardHolderName2:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        stateProvince:
          type: string
        cityPortion:
          type: string
        postalCodePortion:
          type: string
        plusIndicator:
          type: integer
          format: int32
        dateExpire:
          type: string
        customerNumber:
          type: string
        currentPinOffset:
          type: integer
          format: int32
        previousPinOffset:
          type: integer
          format: int32
        pinDelayDays:
          type: integer
          format: int32
        typeOfPointOfSale:
          type: integer
          format: int32
        cardHolderFlag:
          type: string
        dateWarningBulletin:
          type: string
          format: date
        regionCode:
          type: string
        languageCode:
          type: string
        visaMiniCardVersion:
          type: integer
          format: int32
        pinSuppression:
          type: integer
          format: int32
        blockCode:
          type: string
        dateBlock:
          type: string
        blockSecureId:
          type: string
        warningCode1:
          type: string
        warningCode7:
          type: string
        numberOfIssueAttemptsRemaining:
          type: integer
          format: int32
        currentDateExpirationDate:
          type: string
          format: date
        currentCardActivation:
          type: string
        dateEmbossedMagneticStripeCard:
          type: string
          format: date
        dateCurrentMagneticCardMailed:
          type: string
          format: date
        lastExpirationDate:
          type: string
          format: date
        lastCardActivation:
          type: string
        dateFirstCardVerify:
          type: string
          format: date
        dateLastPlasticIssue:
          type: string
          format: date
        frequencyMaximumAuthorizationParameters:
          type: integer
          format: int32
        authorizationData:
          $ref: '#/components/schemas/AuthorizationData'
        internetPurchaseData:
          $ref: '#/components/schemas/InternetPurchaseData'
        identificationNumberAuthorization:
          type: string
        identificationNumberSpendingLimitsTable:
          type: string
        userData:
          $ref: '#/components/schemas/UserData'
        numberCurrentlyDisplayedEmbosserRecord:
          type: string
        adminNumberBranch:
          type: integer
          format: int32
        nextExpirationDateOfTheCard:
          type: string
          format: date
        branchIdentifierCardMailingLocation:
          type: integer
          format: int32
        cardInformationData:
          $ref: '#/components/schemas/CardInformationData'
        useAutomatedTellerMachineCashNumberData:
          $ref: '#/components/schemas/UseAutomatedTellerMachineCashNumberData'
        useAutomatedTellerMachineCashAmountData:
          $ref: '#/components/schemas/UseAutomatedTellerMachineCashAmountData'
        useOverTheCounterCashNumberData:
          $ref: '#/components/schemas/UseOverTheCounterCashNumberData'
        useOverTheCounterCashAmountData:
          $ref: '#/components/schemas/UseOverTheCounterCashAmountData'
        retailNumberData:
          $ref: '#/components/schemas/RetailNumberData'
        retailAmountData:
          $ref: '#/components/schemas/RetailAmountData'
        internetPurchaseNumberData:
          $ref: '#/components/schemas/InternetPurchaseNumberData'
        internetPurchaseAmountData:
          $ref: '#/components/schemas/InternetPurchaseAmountData'
        prepaidLimits:
          $ref: '#/components/schemas/PrepaidLimits'
        spendingLimitsData:
          $ref: '#/components/schemas/SpendingLimitsData'
        cardDelayDays:
          type: integer
          format: int32
        cardDelayStatus:
          type: string
        mailerDate:
          type: string
          format: date
        pinOverrideActionEmbosserLevel:
          type: string
        cardHolderType:
          type: integer
          format: int32
        pinDelayStatusMailer:
          type: string
        cardActivatedDate:
          type: string
          format: date
        dateMostRecentlyIssueCard:
          type: string
          format: date
        deliveryOptionReissuedCards:
          type: integer
          format: int32
        deliveryOptionIssuedCards:
          type: integer
          format: int32
        cardDeliveryStatus:
          type: string
        cardDeliveryDate:
          type: string
          format: date
        deliveryStatusPreviousCard:
          type: string
        deliveryDatePreviousCard:
          type: string
          format: date
        deliveryStatusCurrentPinMailer:
          type: string
        deliveryDateCurrentPinMailer:
          type: string
          format: date
        deliveryStatusPreviousPinMailer:
          type: string
        deliveryDatePreviousPinMailer:
          type: string
          format: date
        dateNextPinChanged:
          type: string
          format: date
        cardHolderAffiliation:
          type: string
        cardVerifyByVisaStatus:
          type: string
        customUserData:
          $ref: '#/components/schemas/CustomUserData'
        custEmbSeq:
          type: string
          description: Custom Embosser Sequence Number
        travelInd:
          type: string
          description: Travel Indicator
        travelData:
          type: array
          description: Travel Data
          items:
            $ref: '#/components/schemas/TravelData'
        vauLastRsnCode:
          type: string
          description: Visa Account Updater Last Reason Code
        noCvmCounter:
          type: string
          description: No Card Verification Method Counter
        noCvmAmt:
          type: string
          description: No Card Verification Method Amount
        profileId:
          type: string
          description: Profile ID
        ecommInd:
          type: string
          description: E-Commerce Indicator
        contlsInd:
          type: string
          description: Contactless Indicator
        authRstrTbl:
          type: string
          description: Authorization Restart Table
        authCrLm:
          type: string
          description: Authorization Credit Limit
        ctdAuthAmt:
          type: string
          description: Cycle To Date Authorization Amount
        digiCardInd:
          type: string
          description: Digital Card Indicator
        embCode1:
          type: string
          description: Embosser User Code 1
        embCode2:
          type: string
          description: Embosser User Code 1
        embCode3:
          type: string
          description: Embosser User Code 1
        embCode4:
          type: string
          description: Embosser User Code 1
        embCode5:
          type: string
          description: Embosser User Code 5
        embCode6:
          type: string
          description: Embosser User Code 6
        embCode7:
          type: string
          description: Embosser User Code 7
        embCode8:
          type: string
          description: Embosser User Code 8
        embDate1:
          type: string
          description: Embosser User Date 1
        embDate2:
          type: string
          description: Embosser User Date 2
        dvcInd:
          type: string
          description: DVC Indicator
        pinReset:
          type: string
          description: PIN Reset
        dateLastMaintained:
          type: string
          description: ' Date Last Maintained'
          format: date
        newAcctCard:
          type: string
          description: ' New Account Card'
        sdpFlag:
          type: string
          description: ' Same Day Processing Flag'
        internationalSingleTransaction:
          type: string
      description: EmbosserDetailsL8VBResponse
    CardPanInquiryRequest:
      required:
        - cardNumber
        - cardSequence
        - functionType
        - organizationNumber
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
          enum:
            - 807
        cardNumber:
          maxLength: 19
          minLength: 12
          type: string
          description: Card Number
          example: '0004513070406598974'
        cardSequence:
          type: integer
          description: Card sequence
          format: int32
          example: 1
        functionType:
          type: string
          description: |
            Function Type. The values are:
            P = Pan Token 
            C = Card number
          example: C
      description: 'Card or PAN Token Inquiry '
    CardPanInquiryResponse:
      type: object
      properties:
        organizationNumber:
          type: integer
          format: int32
        logo:
          type: integer
          format: int32
        cardNumber:
          type: string
        cardSequence:
          type: integer
          format: int32
        accountNumber:
          type: string
        panToken:
          type: string
    CardPanInquiryL8V2Request:
      required:
        - cardNumber
        - cardSequence
        - functionType
        - organizationNumber
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
          enum:
            - 807
        cardNumber:
          maxLength: 32
          minLength: 12
          type: string
          description: Card Number
          example: '0004513070406598974'
        cardSequence:
          type: integer
          description: |
            Card Sequence
            Card sequence number. Default is 1
          format: int32
          example: 1
          enum:
            - 1
        functionType:
          pattern: ^(P|C){1}$
          type: string
          description: Function Type
          example: C
      description: 'Card or PAN Token Inquiry '
    CardPanInquiryL8V2Response:
      type: object
      properties:
        organizationNumber:
          type: integer
          format: int32
        logo:
          type: integer
          format: int32
        cardNumber:
          type: string
        cardSequence:
          type: integer
          format: int32
        accountNumber:
          type: string
        panToken:
          type: string
      description: CardPanInquiryL8V2Response
    AccountForCardDetailsL8V3Request:
      required:
        - accountNumber
        - organizationNumber
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
        accountNumber:
          maxLength: 19
          minLength: 19
          type: string
          description: Account number
          example: '5303716028446103276'
        functionCode:
          maxLength: 10
          minLength: 0
          type: string
          description: Function Code
          example: P or N
        startItem:
          maxLength: 26
          minLength: 0
          type: string
          description: Start Item
          example: '"5303716028446103276"'
      description: Account Card Detail Request
    AccountForCardDetailsL8V3Response:
      type: object
      properties:
        numberOfOccurrences:
          type: integer
          format: int32
        more:
          type: string
        cardTable:
          $ref: '#/components/schemas/CardTable'
        nextToken:
          type: string
        prevToken:
          type: string
    CardTable:
      type: object
      properties:
        cardTableList:
          type: array
          items:
            $ref: '#/components/schemas/CardTableList'
    CardTableList:
      type: object
      properties:
        sequence:
          type: integer
          format: int32
        organization:
          type: integer
          format: int32
        cardNumber:
          type: string
        cardSequence:
          type: integer
          format: int32
        cardEmbossedName1:
          type: string
        cardEmbossedName2:
          type: string
        cardEmbosserName1:
          type: string
        cardEmbosserName2:
          type: string
        cardActivationDate:
          type: string
          format: date
        cardDateExpire:
          type: string
          format: date
        cardFirstUsageFlag:
          type: string
        digitalCardIndicator:
          type: string
        status:
          type: string
        blockCode:
          type: string
        dateOpened:
          type: string
          format: date
        dateLastMaintained:
          type: string
          format: date
        cardAction:
          type: string
        lastCardAction:
          type: string
        transferCardNumber:
          type: string
        cardHolderType:
          type: string
        user1:
          type: string
        user2:
          type: string
        user3:
          type: string
        user4:
          type: string
        user5:
          type: string
        user6:
          type: string
        user7:
          type: string
        user8:
          type: string
        typeOfCard:
          type: string
        cardTechnology:
          type: string
        dateBlocked:
          type: string
        transferAccount:
          type: string
        customerNumber:
          type: string
        dateEffectiveTransfer:
          type: string
          format: date
        embosserDetails:
          $ref: '#/components/schemas/EmbosserDetailsL8VCResponse'
    AddEmbosserRequest:
      required:
        - cardNumber
        - enrollmentStatusVBV
        - organizationNumber
        - postToAccount
        - vbvPassword
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
          enum:
            - 807
        postToAccount:
          type: string
          description: Post-to account
          example: '4513074002573466583'
        cardNumber:
          maxLength: 19
          minLength: 0
          type: string
          description: Card Number
          example: '0004513070406598974'
        cardSequence:
          type: integer
          description: Card Sequence
          format: int32
          example: 1
        cardAction:
          type: integer
          description: Card Action
          format: int32
          example: 1
        numberOfCardsRequested:
          type: integer
          description: Number Of Cards Requested
          format: int32
          example: 1
        typeOfCard:
          type: integer
          description: Type Of Card
          format: int32
        requestedCardType:
          type: integer
          description: Requested Card Type
          format: int32
        typeCardMailer:
          type: integer
          description: Type Card Mailer
          format: int32
        plasticId:
          type: string
          description: Plastic ID
          example: ''
        name1TypeIndicator:
          type: integer
          description: Name 1 Type Indicator
          format: int32
          example: 0
        name2TypeIndicator:
          type: integer
          description: Name 2 Type Indicator
          format: int32
        embossedName1:
          type: string
          description: Embossed Name 1
          example: HELLO
        embossedName2:
          type: string
          description: Embossed Name 2
          example: KIT-KAT WALLER
        securedCodeActivate:
          type: integer
          description: Secured Code Activate
          format: int32
        visaPlusIndicator:
          type: integer
          description: Visa PLUS Indicator
          format: int32
        pinMailerDelayDays:
          type: integer
          description: PIN Mailer Delay Days
          format: int32
          example: 0
        expirationDate:
          type: string
          description: Expiration Date
          format: date
          example: '2021-01-01'
        customerNumber:
          maxLength: 19
          minLength: 0
          type: string
          description: Customer Number
          example: '4513074002573466583'
        name1:
          type: string
          description: Name 1
          example: RUN DMC
        name2:
          type: string
          description: Name 2
          example: RICK ROSS
        pinOffset:
          type: integer
          description: PIN Offset
          format: int32
        posServiceCode:
          type: integer
          description: POS Service Code
          format: int32
          example: 101
        cardholderFlag:
          type: string
          description: Cardholder Flag
          example: '0'
        addressLine1:
          type: string
          description: Address Line 1
          example: PORT OF MIAMI
        addressLine2:
          type: string
          description: Address Line 2
          example: 117 E PARKWAY AVE
        city:
          type: string
          description: City
          example: MIAMI
        stateOrProvince:
          type: string
          description: State/Province
          example: FL
        postalCode:
          type: string
          description: Postal Code
          example: '38585'
        languageCode:
          type: string
          description: Language Code
          example: ENG
        visaMiniIndicator:
          type: integer
          description: Visa Mini Indicator
          format: int32
          example: 0
        pinSuppression:
          type: integer
          description: |-
            PIN suppression. The values are:
            0 = Allow PINs
            1 = Suppress PIN generation.
          format: int32
        blockCode:
          type: string
          description: Block Code
        currentCardActivation:
          type: string
          description: |-
            Current card activation. The values are:
            N = No card activation is required or has already occurred
            Y = Card activation needs to occur.
        maximumAuthorizationFrequency:
          type: integer
          description: |-
            Maximum authorization frequency. The values are:
            0 = Not used
            1 = Daily
            2 = Cycle-to-date
            3 = Year-to-date.
          format: int32
        atmCashNumber:
          type: integer
          description: ATM(Automated Teller Machine) Cash Number
          format: int32
        atmCashAmount:
          type: number
          description: ATM(Automated Teller Machine) Cash Amount
        atmCashSingleTransactionLimit:
          type: number
          description: ATM(Automated Teller Machine) Cash Transaction limit
        overTheCounterCashNumber:
          type: integer
          description: Over THe Counter Cash Number
          format: int32
        overTheCounterCashAmount:
          type: number
          description: Over The Counter Cash Amount
        overTheCounterCashSingleTransactionLimit:
          type: number
          description: Over The Counter Transaction Limit
        retailPurchaseNumber:
          type: integer
          description: Retail Number
          format: int32
        retailPurchaseAmt:
          type: number
          description: Retail Amount
        retailPurchaseSingleTransactionLimit:
          type: number
          description: Retail Transaction Limit
        internetPurchaseAmount:
          type: number
          description: Internet Purchase Amount
        internetPurchaseNumber:
          type: number
          description: Internet Purchase Number
        internetPurchaseSingleTransactionLimit:
          type: number
          description: Internet Purchase Single Transaction Limit
        user1:
          type: string
          description: User-defined 1
          example: '1'
        user2:
          type: string
          description: User-defined 2
          example: '2'
        user3:
          type: string
          description: User-defined 3
          example: '3'
        user4:
          type: integer
          description: User-defined 4
          format: int32
          example: 4
        user5:
          type: string
          description: User-defined 5
          example: '5'
        user6:
          type: string
          description: User-defined 6
          example: '6'
        user7:
          type: string
          description: User-defined 7
          example: '7'
        user8:
          type: string
          description: User-defined 8
          example: '8'
        userDate1:
          type: string
          description: User-defined Date 1
          format: date
          example: '2020-03-03'
        userDate2:
          type: string
          description: User-defined Date 2
          format: date
          example: '2020-03-03'
        branchNumber:
          type: integer
          description: Branch Number
          format: int32
        reissueDeliveryOption:
          type: integer
          description: |-
            Reissue delivery option. The values are:
            0 = Regular mail
            1 = First class mail
            2 = Registered mail
            3 = Internal delivery mail
            4 = User-defined.
          format: int32
        nextCardExpirationDate:
          type: string
          description: Next Card Expiration Date
          format: date
          example: '2021-01-01'
        firstIssueBranch:
          type: integer
          description: First Issue Branch
          format: int32
        deliveryOption:
          type: integer
          description: |-
            Delivery option. The values are:
            0 = Regular mail
            1 = First class mail
            2 = Registered mail
            3 = Internal delivery mail
            4 = User-defined.
          format: int32
        authorizationCriteriaTableNumber:
          type: string
          description: Authorization Criteria Table Number
        cardDelayDays:
          type: integer
          description: Card Delay Days
          format: int32
        authorizationSpendingLimitTable:
          type: string
          description: Authorization Spending Limit Table
        assignedSpendingLimits:
          $ref: '#/components/schemas/AssignedSpendingLimits'
        programId:
          type: integer
          description: Program ID
          format: int32
        deviceIndicator:
          type: string
          description: Device Indicator
          example: C
        processType:
          type: integer
          description: |-
            Process type. The values are:
            0 = Same day processing is not required
            1 = Same day processing is required.
          format: int32
        cardholderAffiliationGroupId:
          type: integer
          description: Identification Of The Cardholder’S Affiliation Or Affinity Group
          format: int32
          example: 12348
        cardActionReasonCode:
          type: string
          description: Card Action Reason Code
        enrollmentStatusVBV:
          type: string
          description: |-
            Enrollment status of the card in Verified By Visa. The values are:
            Space = No enrollment (Default)
            C = Cancel enrollment
            N = New enrollment
            U = Update enrollment.
          example: 'N'
        vbvPassword:
          type: string
          description: Vbv Password Or Greeting Message
          example: BANDEBOGOT
      description: Add Embosser Request
    AddEmbosserResponse:
      type: object
      properties:
        organizationNumber:
          type: integer
          format: int32
        organizationAssociatedToForeignAccount:
          type: integer
          format: int32
        logo:
          type: integer
          format: int32
        accountNumber:
          type: string
        cardNumber:
          type: string
        cardSequence:
          type: integer
          format: int32
        currentChipSequenceNumber:
          type: integer
          format: int32
    CardsDetailsRequest:
      required:
        - cardNumber
        - cardSequence
        - organizationNumber
      type: object
      properties:
        organizationNumber:
          type: integer
          description: Organization Number
          format: int32
          example: 807
        cardNumber:
          maxLength: 19
          minLength: 12
          type: string
          description: Card Number
          example: '0004513070406598974'
        cardSequence:
          type: integer
          description: Card Sequence
          format: int32
          example: 1
      description: Card Detail Request
    CardsDetailsResponse:
      type: object
      properties:
        cardNumber:
          type: string
        cardSequence:
          type: integer
          format: int32
        cardBlockCode:
          type: integer
          format: int32
        cardExpireDate:
          type: string
          format: date
        logo:
          type: string
        productType:
          type: string
        productDescription:
          type: string
        accountNumber:
          type: string
        accountStatus:
          type: string
        accountBlockCode1:
          type: string
        accountBlockCode2:
          type: string
        billingCycle:
          type: integer
          format: int32
        accountShortName:
          type: string
        accountDateLastCycle:
          type: string
          format: date
        pesosMinimumPayment:
          type: number
        dollarMinimumPayment:
          type: number
        pesosTotalPayment:
          type: number
        dollarTotalPayment:
          type: number
        pesosCurrentBalance:
          type: number
        dollarCurrentBalance:
          type: number
        totalCreditLimit:
          type: number
        pesosOpenToBuy:
          type: number
        pesosCashAvailable:
          type: number
        paymentDueDate:
          type: string
          format: date
        pesosMemoCredits:
          type: number
        pesosMemoDebits:
          type: number
        dollarMemoCredits:
          type: number
        dollarMemoDebits:
          type: number
        sobreCupo:
          type: number
        extraCupo:
          type: number
        previousCreditLimit:
          type: number
        beginDateTemporaryCreditLimit:
          type: string
          format: date
        expiryDateTemporaryCreditLimit:
          type: string
          format: date
        customerNumber:
          type: string
        relationshipNumber:
          type: string
        exchangeRate:
          type: number
    MassCardReissueDetailsResponse:
      type: object
      properties:
        outputArea:
          $ref: '#/components/schemas/OutputArea'
    MassCardReissueDetailsResponseL8V3:
      type: object
      properties:
        outputArea:
          $ref: '#/components/schemas/OutputArea'
    NavigationalServiceResponse:
      type: object
      properties:
        accountOrganization:
          type: integer
          format: int32
        accountNumber:
          type: string
        customerOrganization:
          type: integer
          format: int32
        relationshipNumber:
          type: string
